[  4%] Building CXX object src/CMakeFiles/detectPerson.dir/specificworker.cpp.o
In file included from /usr/include/ni/XnOS.h:27:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnPlatform.h:73:3: error: #error OpenNI Platform Abstraction Layer - Unsupported Platform!
  #error OpenNI Platform Abstraction Layer - Unsupported Platform!
   ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnOS.h:51:3: error: #error OpenNI OS Abstraction Layer - Unsupported Platform!
  #error OpenNI OS Abstraction Layer - Unsupported Platform!
   ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:10045:76: error: macro "XN_VALIDATE_NEW" passed 4 arguments, but takes just 2
    XN_VALIDATE_NEW(pTrans, StateChangedCallbackTranslator, handler, pCookie);
                                                                            ^
/usr/include/ni/XnCppWrapper.h:10104:75: error: macro "XN_VALIDATE_NEW" passed 4 arguments, but takes just 2
   XN_VALIDATE_NEW(pTrans, StateChangedCallbackTranslator, handler, pCookie);
                                                                           ^
In file included from /usr/include/ni/XnStatusCodes.h:27:0,
                 from /usr/include/ni/XnMacros.h:27,
                 from /usr/include/ni/XnOS.h:28,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnStatus.h:33:9: error: ‘XnUInt32’ does not name a type
 typedef XnUInt32 XnStatus;
         ^
In file included from /usr/include/ni/XnOS.h:27:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnStatus.h:49:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnGetStatusString(const XnStatus Status);
 ^
/usr/include/ni/XnStatus.h:58:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnGetStatusName(const XnStatus Status);
 ^
/usr/include/ni/XnStatus.h:67:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnPrintError(const XnStatus Status, const XnChar* csUserMessage);
 ^
/usr/include/ni/XnOSStrings.h:28:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrPrefix(const XnChar* cpPrefixString, XnChar* cpDestString, const XnUInt32 nDestLength);
 ^
/usr/include/ni/XnOSStrings.h:29:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrAppend(XnChar* cpDestString, const XnChar* cpSrcString, const XnUInt32 nDestLength);
 ^
/usr/include/ni/XnOSStrings.h:30:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrCopy(XnChar* cpDestString, const XnChar* cpSrcString, const XnUInt32 nDestLength);
 ^
/usr/include/ni/XnOSStrings.h:31:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnOSStrLen(const XnChar* cpStr);
 ^
/usr/include/ni/XnOSStrings.h:32:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrNCopy(XnChar* cpDestString, const XnChar* cpSrcString, const XnUInt32 nCopyLength, const XnUInt32 nDestLength);
 ^
/usr/include/ni/XnOSStrings.h:33:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrCRC32(const XnChar* cpString, XnUInt32* nCRC32);
 ^
/usr/include/ni/XnOSStrings.h:34:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrNCRC32(XnUChar* cpBuffer, XnUInt32 nBufferSize, XnUInt32* nCRC32);
 ^
/usr/include/ni/XnOSStrings.h:35:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrFormat(XnChar* cpDestString, const XnUInt32 nDestLength, XnUInt32* pnCharsWritten, const XnChar* cpFormat, ...);
 ^
/usr/include/ni/XnOSStrings.h:36:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStrFormatV(XnChar* cpDestString, const XnUInt32 nDestLength, XnUInt32* pnCharsWritten, const XnChar* cpFormat, va_list args);
 ^
/usr/include/ni/XnOSStrings.h:37:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnInt32  XN_C_DECL xnOSStrCmp(const XnChar* cpFirstString, const XnChar* cpSecondString);
 ^
/usr/include/ni/XnOSStrings.h:38:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnInt32  XN_C_DECL xnOSStrCaseCmp(const XnChar* cpFirstString, const XnChar* cpSecondString);
 ^
/usr/include/ni/XnOSStrings.h:39:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void     XN_C_DECL xnOSItoA(XnInt32 nValue, XnChar* cpStr, XnInt32 nBase);
 ^
/usr/include/ni/XnOSStrings.h:41:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnChar* XN_C_DECL xnOSStrDup(const XnChar* strSource);
 ^
/usr/include/ni/XnOSStrings.h:42:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetEnvironmentVariable(const XnChar* strEnv, XnChar* strDest, XnUInt32 nDestSize);
 ^
/usr/include/ni/XnOSStrings.h:43:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSExpandEnvironmentStrings(const XnChar* strSrc, XnChar* strDest, XnUInt32 nDestSize);
 ^
/usr/include/ni/XnOSMemory.h:27:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSMalloc(const XnSizeT nAllocSize);
 ^
/usr/include/ni/XnOSMemory.h:28:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSMallocAligned(const XnSizeT nAllocSize, const XnSizeT nAlignment);
 ^
/usr/include/ni/XnOSMemory.h:29:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSCalloc(const XnSizeT nAllocNum, const XnSizeT nAllocSize);
 ^
/usr/include/ni/XnOSMemory.h:30:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSCallocAligned(const XnSizeT nAllocNum, const XnSizeT nAllocSize, const XnSizeT nAlignment);
 ^
/usr/include/ni/XnOSMemory.h:31:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSRealloc(void* pMemory, const XnSizeT nAllocSize);
 ^
/usr/include/ni/XnOSMemory.h:32:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSReallocAligned(void* pMemory, const XnSizeT nAllocSize, const XnSizeT nAlignment);
 ^
/usr/include/ni/XnOSMemory.h:33:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSRecalloc(void* pMemory, const XnSizeT nAllocNum, const XnSizeT nAllocSize);
 ^
/usr/include/ni/XnOSMemory.h:34:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnOSFree(const void* pMemBlock);
 ^
/usr/include/ni/XnOSMemory.h:35:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnOSFreeAligned(const void* pMemBlock);
 ^
/usr/include/ni/XnOSMemory.h:36:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnOSMemCopy(void* pDest, const void* pSource, XnSizeT nCount);
 ^
/usr/include/ni/XnOSMemory.h:37:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnInt32 XN_C_DECL xnOSMemCmp(const void *pBuf1, const void *pBuf2, XnSizeT nCount);
 ^
/usr/include/ni/XnOSMemory.h:38:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnOSMemSet(void* pDest, XnUInt8 nValue, XnSizeT nCount);
 ^
/usr/include/ni/XnOSMemory.h:39:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnOSMemMove(void* pDest, const void* pSource, XnSizeT nCount);
 ^
/usr/include/ni/XnOSMemory.h:40:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt64 XN_C_DECL xnOSEndianSwapUINT64(XnUInt64 nValue);
 ^
/usr/include/ni/XnOSMemory.h:41:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnOSEndianSwapUINT32(XnUInt32 nValue);
 ^
/usr/include/ni/XnOSMemory.h:42:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt16 XN_C_DECL xnOSEndianSwapUINT16(XnUInt16 nValue);
 ^
/usr/include/ni/XnOSMemory.h:43:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnFloat XN_C_DECL xnOSEndianSwapFLOAT(XnFloat fValue);
 ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnOS.h:61:2: error: ‘XnChar’ does not name a type
  XnChar csOSName[XN_MAX_OS_NAME_LENGTH];
  ^
/usr/include/ni/XnOS.h:62:2: error: ‘XnChar’ does not name a type
  XnChar csCPUName[XN_MAX_OS_NAME_LENGTH];
  ^
/usr/include/ni/XnOS.h:63:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nProcessorsCount;
  ^
/usr/include/ni/XnOS.h:64:2: error: ‘XnUInt64’ does not name a type
  XnUInt64 nTotalMemory;
  ^
/usr/include/ni/XnOS.h:67:17: error: typedef ‘XnBool’ is initialized (use decltype instead)
 typedef XnBool (XN_CALLBACK_TYPE* XnConditionFunc)(void* pConditionData);
                 ^
/usr/include/ni/XnOS.h:67:17: error: ‘XN_CALLBACK_TYPE’ was not declared in this scope
/usr/include/ni/XnOS.h:67:35: error: ‘XnConditionFunc’ was not declared in this scope
 typedef XnBool (XN_CALLBACK_TYPE* XnConditionFunc)(void* pConditionData);
                                   ^
/usr/include/ni/XnOS.h:73:8: error: ‘XnOSTimer’ does not name a type
 extern XnOSTimer g_xnOSHighResGlobalTimer;
        ^
In file included from /usr/include/ni/XnOS.h:27:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnOS.h:319:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSInit();
 ^
/usr/include/ni/XnOS.h:320:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSShutdown();
 ^
/usr/include/ni/XnOS.h:321:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetInfo(xnOSInfo* pOSInfo);
 ^
/usr/include/ni/XnOS.h:351:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void* XN_C_DECL xnOSLogMemAlloc(void* pMemBlock, XnAllocationType nAllocType, XnUInt32 nBytes, const XnChar* csFunction, const XnChar* csFile, XnUInt32 nLine, const XnChar* csAdditional);
 ^
/usr/include/ni/XnOS.h:356:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnOSLogMemFree(const void* pMemBlock);
 ^
/usr/include/ni/XnOS.h:361:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnOSWriteMemoryReport(const XnChar* csFileName);
 ^
/usr/include/ni/XnOS.h:446:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetFileList(const XnChar* cpSearchPattern, const XnChar* cpPrefixPath, XnChar cpFileList[][XN_FILE_MAX_PATH], const XnUInt32 nMaxFiles, XnUInt32* pnFoundFiles);
 ^
/usr/include/ni/XnOS.h:447:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSOpenFile(const XnChar* cpFileName, const XnUInt32 nFlags, XN_FILE_HANDLE* pFile);
 ^
/usr/include/ni/XnOS.h:448:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseFile(XN_FILE_HANDLE* pFile);
 ^
/usr/include/ni/XnOS.h:449:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSReadFile(const XN_FILE_HANDLE File, void* pBuffer, XnUInt32* pnBufferSize);
 ^
/usr/include/ni/XnOS.h:450:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWriteFile(const XN_FILE_HANDLE File, const void* pBuffer, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:451:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Use xnOSSeekFile64() instead") XN_C_DECL 
 ^
/usr/include/ni/XnOS.h:453:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSeekFile64(const XN_FILE_HANDLE File, const XnOSSeekType SeekType, const XnInt64 nOffset);
 ^
/usr/include/ni/XnOS.h:454:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Use xnOSTellFile64() instead") XN_C_DECL 
 ^
/usr/include/ni/XnOS.h:456:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSTellFile64(const XN_FILE_HANDLE File, XnUInt64* nFilePos);
 ^
/usr/include/ni/XnOS.h:457:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSFlushFile(const XN_FILE_HANDLE File);
 ^
/usr/include/ni/XnOS.h:458:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSDoesFileExist(const XnChar* cpFileName, XnBool* pbResult);
 ^
/usr/include/ni/XnOS.h:459:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSDoesDirecotyExist(const XnChar* cpDirName, XnBool* pbResult);
 ^
/usr/include/ni/XnOS.h:460:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSLoadFile(const XnChar* cpFileName, void* pBuffer, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:461:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSaveFile(const XnChar* cpFileName, const void* pBuffer, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:462:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSAppendFile(const XnChar* cpFileName, const void* pBuffer, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:463:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Use xnOSGetFileSize64() instead") XN_C_DECL 
 ^
/usr/include/ni/XnOS.h:465:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetFileSize64(const XnChar* cpFileName, XnUInt64* pnFileSize);
 ^
/usr/include/ni/XnOS.h:466:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateDirectory(const XnChar* cpDirName);
 ^
/usr/include/ni/XnOS.h:467:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetDirName(const XnChar* cpFilePath, XnChar* cpDirName, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:468:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetFileName(const XnChar* cpFilePath, XnChar* cpFileName, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:469:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetFullPathName(const XnChar* strFilePath, XnChar* strFullPath, XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:470:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetCurrentDir(XnChar* cpDirName, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:471:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSetCurrentDir(const XnChar* cpDirName);
 ^
/usr/include/ni/XnOS.h:472:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSDeleteFile(const XnChar* cpFileName);
 ^
/usr/include/ni/XnOS.h:473:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSDeleteEmptyDirectory(const XnChar* strDirName);
 ^
/usr/include/ni/XnOS.h:474:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSDeleteDirectoryTree(const XnChar* strDirName);
 ^
/usr/include/ni/XnOS.h:476:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetApplicationFilesDir(XnChar* cpDirName, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:477:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetApplicationLibDir(XnChar* cpDirName, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:481:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSReadStringFromINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, XnChar* cpDest, const XnUInt32 nDestLength);
 ^
/usr/include/ni/XnOS.h:482:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSReadFloatFromINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, XnFloat* fDest);
 ^
/usr/include/ni/XnOS.h:483:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSReadDoubleFromINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, XnDouble* fDest);
 ^
/usr/include/ni/XnOS.h:484:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSReadIntFromINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, XnUInt32* nDest);
 ^
/usr/include/ni/XnOS.h:485:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWriteStringToINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, const XnChar* cpSrc);
 ^
/usr/include/ni/XnOS.h:486:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWriteFloatToINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, const XnFloat fSrc);
 ^
/usr/include/ni/XnOS.h:487:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWriteDoubleToINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, const XnDouble fSrc);
 ^
/usr/include/ni/XnOS.h:488:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWriteIntToINI(const XnChar* cpINIFile, const XnChar* cpSection, const XnChar* cpKey, const XnUInt32 nSrc);
 ^
/usr/include/ni/XnOS.h:491:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSLoadLibrary(const XnChar* cpFileName, XN_LIB_HANDLE* pLibHandle);
 ^
/usr/include/ni/XnOS.h:492:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSFreeLibrary(const XN_LIB_HANDLE LibHandle);
 ^
/usr/include/ni/XnOS.h:493:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetProcAddress(const XN_LIB_HANDLE LibHandle, const XnChar* cpProcName, XnFarProc* pProcAddr);
 ^
/usr/include/ni/XnOS.h:498:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetEpochTime(XnUInt32* nEpochTime);
 ^
/usr/include/ni/XnOS.h:499:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetTimeStamp(XnUInt64* nTimeStamp);
 ^
/usr/include/ni/XnOS.h:500:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetHighResTimeStamp(XnUInt64* nTimeStamp);
 ^
/usr/include/ni/XnOS.h:501:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSleep(XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:502:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStartTimer(XnOSTimer* pTimer);
 ^
/usr/include/ni/XnOS.h:503:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStartHighResTimer(XnOSTimer* pTimer);
 ^
/usr/include/ni/XnOS.h:504:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSQueryTimer(XnOSTimer Timer, XnUInt64* pnTimeSinceStart);
 ^
/usr/include/ni/XnOS.h:505:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSStopTimer(XnOSTimer* pTimer);
 ^
/usr/include/ni/XnOS.h:506:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetMonoTime(struct timespec* pTime);
 ^
/usr/include/ni/XnOS.h:507:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetTimeout(struct timespec* pTime, XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:508:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetAbsTimeout(struct timespec* pTime, XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:519:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateThread(XN_THREAD_PROC_PROTO pThreadProc, const XN_THREAD_PARAM pThreadParam, XN_THREAD_HANDLE* pThreadHandle);
 ^
/usr/include/ni/XnOS.h:520:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSTerminateThread(XN_THREAD_HANDLE* pThreadHandle);
 ^
/usr/include/ni/XnOS.h:521:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseThread(XN_THREAD_HANDLE* pThreadHandle);
 ^
/usr/include/ni/XnOS.h:522:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWaitForThreadExit(XN_THREAD_HANDLE ThreadHandle, XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:523:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSetThreadPriority(XN_THREAD_HANDLE ThreadHandle, XnThreadPriority nPriority);
 ^
/usr/include/ni/XnOS.h:524:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetCurrentThreadID(XN_THREAD_ID* pThreadID);
 ^
/usr/include/ni/XnOS.h:525:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWaitAndTerminateThread(XN_THREAD_HANDLE* pThreadHandle, XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:528:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetCurrentProcessID(XN_PROCESS_ID* pProcID);
 ^
/usr/include/ni/XnOS.h:529:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateProcess(const XnChar* strExecutable, XnUInt32 nArgs, const XnChar** pstrArgs, XN_PROCESS_ID* pProcID);
 ^
/usr/include/ni/XnOS.h:532:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateMutex(XN_MUTEX_HANDLE* pMutexHandle);
 ^
/usr/include/ni/XnOS.h:533:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateNamedMutex(XN_MUTEX_HANDLE* pMutexHandle, const XnChar* cpMutexName);
 ^
/usr/include/ni/XnOS.h:534:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateNamedMutexEx(XN_MUTEX_HANDLE* pMutexHandle, const XnChar* cpMutexName, XnBool bAllowOtherUsers);
 ^
/usr/include/ni/XnOS.h:535:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseMutex(XN_MUTEX_HANDLE* pMutexHandle);
 ^
/usr/include/ni/XnOS.h:536:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSLockMutex(const XN_MUTEX_HANDLE MutexHandle, XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:537:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSUnLockMutex(const XN_MUTEX_HANDLE MutexHandle);
 ^
/usr/include/ni/XnOS.h:540:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateCriticalSection(XN_CRITICAL_SECTION_HANDLE* pCriticalSectionHandle);
 ^
/usr/include/ni/XnOS.h:541:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseCriticalSection(XN_CRITICAL_SECTION_HANDLE* pCriticalSectionHandle);
 ^
/usr/include/ni/XnOS.h:542:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSEnterCriticalSection(XN_CRITICAL_SECTION_HANDLE* pCriticalSectionHandle);
 ^
/usr/include/ni/XnOS.h:543:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSLeaveCriticalSection(XN_CRITICAL_SECTION_HANDLE* pCriticalSectionHandle);
 ^
/usr/include/ni/XnOS.h:546:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateEvent(XN_EVENT_HANDLE* pEventHandle, XnBool bManualReset);
 ^
/usr/include/ni/XnOS.h:547:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateNamedEvent(XN_EVENT_HANDLE* pEventHandle, const XnChar* cpEventName, XnBool bManualReset);
 ^
/usr/include/ni/XnOS.h:548:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateNamedEventEx(XN_EVENT_HANDLE* pEventHandle, const XnChar* cpEventName, XnBool bManualReset, XnBool bAllowOtherUsers);
 ^
/usr/include/ni/XnOS.h:549:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSOpenNamedEvent(XN_EVENT_HANDLE* pEventHandle, const XnChar* cpEventName);
 ^
/usr/include/ni/XnOS.h:550:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSOpenNamedEventEx(XN_EVENT_HANDLE* pEventHandle, const XnChar* cpEventName, XnBool bAllowOtherUsers);
 ^
/usr/include/ni/XnOS.h:551:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseEvent(XN_EVENT_HANDLE* pEventHandle);
 ^
/usr/include/ni/XnOS.h:552:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSetEvent(const XN_EVENT_HANDLE EventHandle);
 ^
/usr/include/ni/XnOS.h:553:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSResetEvent(const XN_EVENT_HANDLE EventHandle);
 ^
/usr/include/ni/XnOS.h:554:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWaitEvent(const XN_EVENT_HANDLE EventHandle, XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:555:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnOSIsEventSet(const XN_EVENT_HANDLE EventHandle);
 ^
/usr/include/ni/XnOS.h:558:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateSemaphore(XN_SEMAPHORE_HANDLE* pSemaphoreHandle, XnUInt32 nInitialCount);
 ^
/usr/include/ni/XnOS.h:559:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSLockSemaphore(XN_SEMAPHORE_HANDLE hSemaphore, XnUInt32 nMilliseconds);
 ^
/usr/include/ni/XnOS.h:560:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSUnlockSemaphore(XN_SEMAPHORE_HANDLE hSemaphore);
 ^
/usr/include/ni/XnOS.h:561:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseSemaphore(XN_SEMAPHORE_HANDLE* pSemaphoreHandle);
 ^
/usr/include/ni/XnOS.h:571:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSWaitForCondition(const XN_EVENT_HANDLE EventHandle, XnUInt32 nMilliseconds, XnConditionFunc pConditionFunc, void* pConditionData);
 ^
/usr/include/ni/XnOS.h:579:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSInitNetwork();
 ^
/usr/include/ni/XnOS.h:580:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSShutdownNetwork();
 ^
/usr/include/ni/XnOS.h:581:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateSocket(const XnOSSocketType SocketType, const XnChar* cpIPAddress, const XnUInt16 nPort, XN_SOCKET_HANDLE* SocketPtr);
 ^
/usr/include/ni/XnOS.h:582:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseSocket(XN_SOCKET_HANDLE Socket);
 ^
/usr/include/ni/XnOS.h:583:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSBindSocket(XN_SOCKET_HANDLE Socket);
 ^
/usr/include/ni/XnOS.h:584:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSListenSocket(XN_SOCKET_HANDLE Socket);
 ^
/usr/include/ni/XnOS.h:585:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSAcceptSocket(XN_SOCKET_HANDLE ListenSocket, XN_SOCKET_HANDLE* AcceptSocketPtr, XnUInt32 nMillisecsTimeout);
 ^
/usr/include/ni/XnOS.h:586:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSConnectSocket(XN_SOCKET_HANDLE Socket, XnUInt32 nMillisecsTimeout);
 ^
/usr/include/ni/XnOS.h:587:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSetSocketBufferSize(XN_SOCKET_HANDLE Socket, const XnUInt32 nSocketBufferSize);
 ^
/usr/include/ni/XnOS.h:588:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSendNetworkBuffer(XN_SOCKET_HANDLE Socket, const XnChar* cpBuffer, const XnUInt32 nBufferSize);
 ^
/usr/include/ni/XnOS.h:589:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSendToNetworkBuffer(XN_SOCKET_HANDLE Socket, const XnChar* cpBuffer, const XnUInt32 nBufferSize, XN_SOCKET_HANDLE SocketTo);
 ^
/usr/include/ni/XnOS.h:590:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSReceiveNetworkBuffer(XN_SOCKET_HANDLE Socket, XnChar* cpBuffer, XnUInt32* pnBufferSize, XnUInt32 nMillisecsTimeout);
 ^
/usr/include/ni/XnOS.h:591:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSReceiveFromNetworkBuffer(XN_SOCKET_HANDLE Socket, XnChar* cpBuffer, XnUInt32* pnBufferSize, XN_SOCKET_HANDLE* SocketFrom);
 ^
/usr/include/ni/XnOS.h:604:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateSharedMemory(const XnChar* strName, XnUInt32 nSize, XnUInt32 nAccessFlags, XN_SHARED_MEMORY_HANDLE* phSharedMem);
 ^
/usr/include/ni/XnOS.h:606:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCreateSharedMemoryEx(const XnChar* strName, XnUInt32 nSize, XnUInt32 nAccessFlags, XnBool bAllowOtherUsers, XN_SHARED_MEMORY_HANDLE* phSharedMem);
 ^
/usr/include/ni/XnOS.h:615:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSOpenSharedMemory(const XnChar* strName, XnUInt32 nAccessFlags, XN_SHARED_MEMORY_HANDLE* phSharedMem);
 ^
/usr/include/ni/XnOS.h:617:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSOpenSharedMemoryEx(const XnChar* strName, XnUInt32 nAccessFlags, XnBool bAllowOtherUsers, XN_SHARED_MEMORY_HANDLE* phSharedMem);
 ^
/usr/include/ni/XnOS.h:624:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSCloseSharedMemory(XN_SHARED_MEMORY_HANDLE hSharedMem);
 ^
/usr/include/ni/XnOS.h:632:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSSharedMemoryGetAddress(XN_SHARED_MEMORY_HANDLE hSharedMem, void** ppAddress);
 ^
/usr/include/ni/XnOS.h:635:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnOSWasKeyboardHit();
 ^
/usr/include/ni/XnOS.h:636:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnChar XN_C_DECL xnOSReadCharFromInput();
 ^
/usr/include/ni/XnOS.h:639:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnOSGetCurrentCallStack(XnUInt32 nFramesToSkip, XnChar** astrFrames, XnUInt32 nMaxNameLength, XnUInt32* pnFrames);
 ^
In file included from /usr/include/ni/XnOpenNI.h:27:0,
                 from /usr/include/ni/XnCppWrapper.h:27,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnTypes.h:89:9: error: ‘XnUInt32’ does not name a type
 typedef XnUInt32 XnLockHandle;
         ^
/usr/include/ni/XnTypes.h:94:9: error: ‘XnInt32’ does not name a type
 typedef XnInt32 XnProductionNodeType;
         ^
/usr/include/ni/XnTypes.h:155:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nMajor;
  ^
/usr/include/ni/XnTypes.h:156:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nMinor;
  ^
/usr/include/ni/XnTypes.h:157:2: error: ‘XnUInt16’ does not name a type
  XnUInt16 nMaintenance;
  ^
/usr/include/ni/XnTypes.h:158:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nBuild;
  ^
/usr/include/ni/XnTypes.h:167:2: error: ‘XnProductionNodeType’ does not name a type
  XnProductionNodeType Type;
  ^
/usr/include/ni/XnTypes.h:169:2: error: ‘XnChar’ does not name a type
  XnChar strVendor[XN_MAX_NAME_LENGTH];
  ^
/usr/include/ni/XnTypes.h:171:2: error: ‘XnChar’ does not name a type
  XnChar strName[XN_MAX_NAME_LENGTH];
  ^
/usr/include/ni/XnTypes.h:207:2: error: ‘XnChar’ does not name a type
  XnChar strVendor[XN_MAX_NAME_LENGTH];
  ^
/usr/include/ni/XnTypes.h:209:2: error: ‘XnChar’ does not name a type
  XnChar strKey[XN_MAX_LICENSE_LENGTH];
  ^
/usr/include/ni/XnTypes.h:229:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnStateChangedHandler)(XnNodeHandle hNode, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:237:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnErrorStateChangedHandler)(XnStatus errorState, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:244:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnFreeHandler)(const void* pData);
                               ^
/usr/include/ni/XnTypes.h:246:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnContextShuttingDownHandler)(XnContext* pContext, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:258:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnNodeCreationHandler)(XnContext* pContext, XnNodeHandle hCreatedNode, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:267:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnNodeDestructionHandler)(XnContext* pContext, const XnChar* strDestroyedNodeName, void* pCookie);
                               ^
In file included from /usr/include/ni/XnOpenNI.h:27:0,
                 from /usr/include/ni/XnCppWrapper.h:27,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnTypes.h:278:9: error: ‘XnUInt16’ does not name a type
 typedef XnUInt16 XnDepthPixel;
         ^
/usr/include/ni/XnTypes.h:286:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nRed;
  ^
/usr/include/ni/XnTypes.h:287:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nGreen;
  ^
/usr/include/ni/XnTypes.h:288:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nBlue;
  ^
/usr/include/ni/XnTypes.h:294:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nU;
  ^
/usr/include/ni/XnTypes.h:295:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nY1;
  ^
/usr/include/ni/XnTypes.h:296:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nV;
  ^
/usr/include/ni/XnTypes.h:297:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nY2;
  ^
/usr/include/ni/XnTypes.h:301:9: error: ‘XnUInt8’ does not name a type
 typedef XnUInt8 XnGrayscale8Pixel;
         ^
/usr/include/ni/XnTypes.h:304:9: error: ‘XnUInt16’ does not name a type
 typedef XnUInt16 XnGrayscale16Pixel;
         ^
/usr/include/ni/XnTypes.h:307:9: error: ‘XnGrayscale16Pixel’ does not name a type
 typedef XnGrayscale16Pixel XnIRPixel;
         ^
/usr/include/ni/XnTypes.h:310:9: error: ‘XnUInt16’ does not name a type
 typedef XnUInt16 XnLabel;
         ^
/usr/include/ni/XnTypes.h:438:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nXRes;
  ^
/usr/include/ni/XnTypes.h:440:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nYRes;
  ^
/usr/include/ni/XnTypes.h:442:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nFPS;
  ^
/usr/include/ni/XnTypes.h:460:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nSampleRate;
  ^
/usr/include/ni/XnTypes.h:461:2: error: ‘XnUInt16’ does not name a type
  XnUInt16 nBitsPerSample;
  ^
/usr/include/ni/XnTypes.h:462:2: error: ‘XnUInt8’ does not name a type
  XnUInt8 nChannels;
  ^
/usr/include/ni/XnTypes.h:470:2: error: ‘XnFloat’ does not name a type
  XnFloat X;
  ^
/usr/include/ni/XnTypes.h:471:2: error: ‘XnFloat’ does not name a type
  XnFloat Y;
  ^
/usr/include/ni/XnTypes.h:472:2: error: ‘XnFloat’ does not name a type
  XnFloat Z;
  ^
/usr/include/ni/XnTypes.h:492:2: error: ‘XnBool’ does not name a type
  XnBool bEnabled;
  ^
/usr/include/ni/XnTypes.h:494:2: error: ‘XnUInt16’ does not name a type
  XnUInt16 nXOffset;
  ^
/usr/include/ni/XnTypes.h:496:2: error: ‘XnUInt16’ does not name a type
  XnUInt16 nYOffset;
  ^
/usr/include/ni/XnTypes.h:498:2: error: ‘XnUInt16’ does not name a type
  XnUInt16 nXSize;
  ^
/usr/include/ni/XnTypes.h:500:2: error: ‘XnUInt16’ does not name a type
  XnUInt16 nYSize;
  ^
/usr/include/ni/XnTypes.h:509:2: error: ‘XnDouble’ does not name a type
  XnDouble fHFOV;
  ^
/usr/include/ni/XnTypes.h:511:2: error: ‘XnDouble’ does not name a type
  XnDouble fVFOV;
  ^
/usr/include/ni/XnTypes.h:525:2: error: ‘XnBool’ does not name a type
  XnBool m_bRGB24 : 1;
  ^
/usr/include/ni/XnTypes.h:526:2: error: ‘XnBool’ does not name a type
  XnBool m_bYUV422 : 1;
  ^
/usr/include/ni/XnTypes.h:527:2: error: ‘XnBool’ does not name a type
  XnBool m_bGrayscale8Bit : 1;
  ^
/usr/include/ni/XnTypes.h:528:2: error: ‘XnBool’ does not name a type
  XnBool m_bGrayscale16Bit : 1;
  ^
/usr/include/ni/XnTypes.h:529:2: error: ‘XnBool’ does not name a type
  XnBool m_bMJPEG : 1;
  ^
/usr/include/ni/XnTypes.h:530:2: error: ‘XnUInt’ does not name a type
  XnUInt m_nPadding : 3;
  ^
/usr/include/ni/XnTypes.h:531:2: error: ‘XnUInt’ does not name a type
  XnUInt m_nReserved : 24;
  ^
/usr/include/ni/XnTypes.h:549:9: error: ‘XnUInt32’ does not name a type
 typedef XnUInt32 XnUserID;
         ^
/usr/include/ni/XnTypes.h:550:9: error: ‘XnFloat’ does not name a type
 typedef XnFloat  XnConfidence;
         ^
/usr/include/ni/XnTypes.h:556:2: error: ‘XnFloat’ does not name a type
  XnFloat elements[9];
  ^
/usr/include/ni/XnTypes.h:582:2: error: ‘XnConfidence’ does not name a type
  XnConfidence fConfidence;
  ^
/usr/include/ni/XnTypes.h:597:2: error: ‘XnConfidence’ does not name a type
  XnConfidence fConfidence;
  ^
/usr/include/ni/XnTypes.h:720:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnUserHandler)(XnNodeHandle hNode, XnUserID user, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:732:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnHandCreate)(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:743:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnHandUpdate)(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:753:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnHandDestroy)(XnNodeHandle hNode, XnUserID user, XnFloat fTime, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:765:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnHandTouchingFOVEdge)(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, XnDirection eDir, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:776:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnGestureRecognized)(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pIDPosition, const XnPoint3D* pEndPosition, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:786:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnGestureProgress)(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, XnFloat fProgress, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:788:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnGestureIntermediateStageCompleted)(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:789:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnGestureReadyForNextIntermediateStage)(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:799:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnCalibrationStart)(XnNodeHandle hNode, XnUserID user, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:808:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnCalibrationEnd)(XnNodeHandle hNode, XnUserID user, XnBool bSuccess, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:810:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnCalibrationInProgress)(XnNodeHandle hNode, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:811:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnCalibrationComplete)(XnNodeHandle hNode, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:822:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnPoseDetectionCallback)(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:824:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnPoseDetectionInProgress)(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, XnPoseDetectionStatus poseDetectionError, void* pCookie);
                               ^
/usr/include/ni/XnTypes.h:842:9: error: ‘XnUInt32’ does not name a type
 typedef XnUInt32 XnCodecID;
         ^
/usr/include/ni/XnTypes.h:859:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Open)(void* pCookie);
            ^
/usr/include/ni/XnTypes.h:859:49: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Open)(void* pCookie);
                                                 ^
/usr/include/ni/XnTypes.h:869:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Write)(void* pCookie, const XnChar* strNodeName, 
            ^
/usr/include/ni/XnTypes.h:869:58: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* Write)(void* pCookie, const XnChar* strNodeName, 
                                                          ^
/usr/include/ni/XnTypes.h:870:22: error: ‘XnUInt32’ has not been declared
   const void* pData, XnUInt32 nSize);
                      ^
/usr/include/ni/XnTypes.h:870:36: error: ‘XnStatus’ declared as function returning a function
   const void* pData, XnUInt32 nSize);
                                    ^
/usr/include/ni/XnTypes.h:879:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Seek)(void* pCookie, XnOSSeekType seekType, const XnInt32 nOffset);
            ^
/usr/include/ni/XnTypes.h:879:80: error: ‘XnInt32’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* Seek)(void* pCookie, XnOSSeekType seekType, const XnInt32 nOffset);
                                                                                ^
/usr/include/ni/XnTypes.h:879:95: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Seek)(void* pCookie, XnOSSeekType seekType, const XnInt32 nOffset);
                                                                                               ^
/usr/include/ni/XnTypes.h:889:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* Tell)(void* pCookie);
            ^
/usr/include/ni/XnTypes.h:889:49: error: ‘XnUInt32’ declared as function returning a function
  XnUInt32 (XN_CALLBACK_TYPE* Tell)(void* pCookie);
                                                 ^
/usr/include/ni/XnTypes.h:896:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* Close)(void* pCookie);
                        ^
/usr/include/ni/XnTypes.h:905:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Seek64)(void* pCookie, XnOSSeekType seekType, const XnInt64 nOffset);
            ^
/usr/include/ni/XnTypes.h:905:82: error: ‘XnInt64’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* Seek64)(void* pCookie, XnOSSeekType seekType, const XnInt64 nOffset);
                                                                                  ^
/usr/include/ni/XnTypes.h:905:97: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Seek64)(void* pCookie, XnOSSeekType seekType, const XnInt64 nOffset);
                                                                                                 ^
/usr/include/ni/XnTypes.h:915:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt64 (XN_CALLBACK_TYPE* Tell64)(void* pCookie);
            ^
/usr/include/ni/XnTypes.h:915:51: error: ‘XnUInt64’ declared as function returning a function
  XnUInt64 (XN_CALLBACK_TYPE* Tell64)(void* pCookie);
                                                   ^
/usr/include/ni/XnTypes.h:931:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Open)(void* pCookie);
            ^
/usr/include/ni/XnTypes.h:931:49: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Open)(void* pCookie);
                                                 ^
/usr/include/ni/XnTypes.h:942:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Read)(void* pCookie, void* pBuffer, XnUInt32 nSize, XnUInt32* pnBytesRead);
            ^
/usr/include/ni/XnTypes.h:942:66: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Read)(void* pCookie, void* pBuffer, XnUInt32 nSize, XnUInt32* pnBytesRead);
                                                                  ^
/usr/include/ni/XnTypes.h:942:82: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Read)(void* pCookie, void* pBuffer, XnUInt32 nSize, XnUInt32* pnBytesRead);
                                                                                  ^
/usr/include/ni/XnTypes.h:942:103: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Read)(void* pCookie, void* pBuffer, XnUInt32 nSize, XnUInt32* pnBytesRead);
                                                                                                       ^
/usr/include/ni/XnTypes.h:951:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Seek)(void* pCookie, XnOSSeekType seekType, const XnInt32 nOffset);
            ^
/usr/include/ni/XnTypes.h:951:80: error: ‘XnInt32’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* Seek)(void* pCookie, XnOSSeekType seekType, const XnInt32 nOffset);
                                                                                ^
/usr/include/ni/XnTypes.h:951:95: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Seek)(void* pCookie, XnOSSeekType seekType, const XnInt32 nOffset);
                                                                                               ^
/usr/include/ni/XnTypes.h:960:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* Tell)(void* pCookie);
            ^
/usr/include/ni/XnTypes.h:960:49: error: ‘XnUInt32’ declared as function returning a function
  XnUInt32 (XN_CALLBACK_TYPE* Tell)(void* pCookie);
                                                 ^
/usr/include/ni/XnTypes.h:967:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* Close)(void* pCookie);
                        ^
/usr/include/ni/XnTypes.h:976:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Seek64)(void* pCookie, XnOSSeekType seekType, const XnInt64 nOffset);
            ^
/usr/include/ni/XnTypes.h:976:82: error: ‘XnInt64’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* Seek64)(void* pCookie, XnOSSeekType seekType, const XnInt64 nOffset);
                                                                                  ^
/usr/include/ni/XnTypes.h:976:97: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Seek64)(void* pCookie, XnOSSeekType seekType, const XnInt64 nOffset);
                                                                                                 ^
/usr/include/ni/XnTypes.h:986:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt64 (XN_CALLBACK_TYPE* Tell64)(void* pCookie);
            ^
/usr/include/ni/XnTypes.h:986:51: error: ‘XnUInt64’ declared as function returning a function
  XnUInt64 (XN_CALLBACK_TYPE* Tell64)(void* pCookie);
                                                   ^
/usr/include/ni/XnTypes.h:1001:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeAdded)
            ^
/usr/include/ni/XnTypes.h:1002:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName, XnProductionNodeType type,
                         ^
/usr/include/ni/XnTypes.h:1002:46: error: ‘XnProductionNodeType’ has not been declared
   (void* pCookie, const XnChar* strNodeName, XnProductionNodeType type,
                                              ^
/usr/include/ni/XnTypes.h:1003:3: error: ‘XnCodecID’ has not been declared
   XnCodecID compression);
   ^
/usr/include/ni/XnTypes.h:1003:24: error: ‘XnStatus’ declared as function returning a function
   XnCodecID compression);
                        ^
/usr/include/ni/XnTypes.h:1011:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeRemoved)
            ^
/usr/include/ni/XnTypes.h:1012:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName);
                         ^
/usr/include/ni/XnTypes.h:1012:44: error: ‘XnStatus’ declared as function returning a function
   (void* pCookie, const XnChar* strNodeName);
                                            ^
/usr/include/ni/XnTypes.h:1022:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeIntPropChanged)
            ^
/usr/include/ni/XnTypes.h:1023:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName, 
                         ^
/usr/include/ni/XnTypes.h:1024:9: error: ‘XnChar’ does not name a type
   const XnChar* strPropName, XnUInt64 nValue);
         ^
/usr/include/ni/XnTypes.h:1024:30: error: ‘XnUInt64’ has not been declared
   const XnChar* strPropName, XnUInt64 nValue);
                              ^
/usr/include/ni/XnTypes.h:1024:45: error: ‘XnStatus’ declared as function returning a function
   const XnChar* strPropName, XnUInt64 nValue);
                                             ^
/usr/include/ni/XnTypes.h:1034:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeRealPropChanged)
            ^
/usr/include/ni/XnTypes.h:1035:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName, 
                         ^
/usr/include/ni/XnTypes.h:1036:9: error: ‘XnChar’ does not name a type
   const XnChar* strPropName, XnDouble dValue);
         ^
/usr/include/ni/XnTypes.h:1036:30: error: ‘XnDouble’ has not been declared
   const XnChar* strPropName, XnDouble dValue);
                              ^
/usr/include/ni/XnTypes.h:1036:45: error: ‘XnStatus’ declared as function returning a function
   const XnChar* strPropName, XnDouble dValue);
                                             ^
/usr/include/ni/XnTypes.h:1046:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeStringPropChanged)
            ^
/usr/include/ni/XnTypes.h:1047:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName, 
                         ^
/usr/include/ni/XnTypes.h:1048:9: error: ‘XnChar’ does not name a type
   const XnChar* strPropName, const XnChar* strValue);
         ^
/usr/include/ni/XnTypes.h:1048:36: error: ‘XnChar’ does not name a type
   const XnChar* strPropName, const XnChar* strValue);
                                    ^
/usr/include/ni/XnTypes.h:1048:52: error: ‘XnStatus’ declared as function returning a function
   const XnChar* strPropName, const XnChar* strValue);
                                                    ^
/usr/include/ni/XnTypes.h:1059:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeGeneralPropChanged)
            ^
/usr/include/ni/XnTypes.h:1060:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName, 
                         ^
/usr/include/ni/XnTypes.h:1061:9: error: ‘XnChar’ does not name a type
   const XnChar* strPropName, XnUInt32 nBufferSize, const void* pBuffer);
         ^
/usr/include/ni/XnTypes.h:1061:30: error: ‘XnUInt32’ has not been declared
   const XnChar* strPropName, XnUInt32 nBufferSize, const void* pBuffer);
                              ^
/usr/include/ni/XnTypes.h:1061:71: error: ‘XnStatus’ declared as function returning a function
   const XnChar* strPropName, XnUInt32 nBufferSize, const void* pBuffer);
                                                                       ^
/usr/include/ni/XnTypes.h:1069:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeStateReady)
            ^
/usr/include/ni/XnTypes.h:1070:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName);
                         ^
/usr/include/ni/XnTypes.h:1070:44: error: ‘XnStatus’ declared as function returning a function
   (void* pCookie, const XnChar* strNodeName);
                                            ^
/usr/include/ni/XnTypes.h:1081:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* OnNodeNewData)
            ^
/usr/include/ni/XnTypes.h:1082:25: error: ‘XnChar’ does not name a type
   (void* pCookie, const XnChar* strNodeName,
                         ^
/usr/include/ni/XnTypes.h:1083:3: error: ‘XnUInt64’ has not been declared
   XnUInt64 nTimeStamp, XnUInt32 nFrame, const void* pData, XnUInt32 nSize);
   ^
/usr/include/ni/XnTypes.h:1083:24: error: ‘XnUInt32’ has not been declared
   XnUInt64 nTimeStamp, XnUInt32 nFrame, const void* pData, XnUInt32 nSize);
                        ^
/usr/include/ni/XnTypes.h:1083:60: error: ‘XnUInt32’ has not been declared
   XnUInt64 nTimeStamp, XnUInt32 nFrame, const void* pData, XnUInt32 nSize);
                                                            ^
/usr/include/ni/XnTypes.h:1083:74: error: ‘XnStatus’ declared as function returning a function
   XnUInt64 nTimeStamp, XnUInt32 nFrame, const void* pData, XnUInt32 nSize);
                                                                          ^
/usr/include/ni/XnTypes.h:1090:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 X;
  ^
/usr/include/ni/XnTypes.h:1091:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 Y;
  ^
/usr/include/ni/XnTypes.h:1098:2: error: ‘XnUInt64’ does not name a type
  XnUInt64 nTimestamp;
  ^
/usr/include/ni/XnTypes.h:1101:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nFrameID;
  ^
/usr/include/ni/XnTypes.h:1104:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nDataSize;
  ^
/usr/include/ni/XnTypes.h:1107:2: error: ‘XnBool’ does not name a type
  XnBool bIsNew;
  ^
/usr/include/ni/XnTypes.h:1130:2: error: ‘XnUInt32’ does not name a type
  XnUInt32 nFPS;
  ^
/usr/include/ni/XnTypes.h:1140:8: error: ‘XnDepthPixel’ does not name a type
  const XnDepthPixel* pData;
        ^
/usr/include/ni/XnTypes.h:1143:2: error: ‘XnDepthPixel’ does not name a type
  XnDepthPixel nZRes;
  ^
/usr/include/ni/XnTypes.h:1153:8: error: ‘XnUInt8’ does not name a type
  const XnUInt8* pData;
        ^
/usr/include/ni/XnTypes.h:1163:8: error: ‘XnIRPixel’ does not name a type
  const XnIRPixel* pData;
        ^
/usr/include/ni/XnTypes.h:1175:8: error: ‘XnUInt8’ does not name a type
  const XnUInt8* pData;
        ^
/usr/include/ni/XnTypes.h:1184:8: error: ‘XnLabel’ does not name a type
  const XnLabel* pData;
        ^
In file included from /usr/include/ni/XnOS.h:27:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnQueries.h:45:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQueryAllocate(XnNodeQuery** ppQuery);
 ^
/usr/include/ni/XnQueries.h:52:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnNodeQueryFree(XnNodeQuery* pQuery);
 ^
/usr/include/ni/XnQueries.h:60:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetVendor(XnNodeQuery* pQuery, const XnChar* strVendor);
 ^
/usr/include/ni/XnQueries.h:68:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetName(XnNodeQuery* pQuery, const XnChar* strName);
 ^
/usr/include/ni/XnQueries.h:76:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetMinVersion(XnNodeQuery* pQuery, const XnVersion* pMinVersion);
 ^
/usr/include/ni/XnQueries.h:84:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetMaxVersion(XnNodeQuery* pQuery, const XnVersion* pMaxVersion);
 ^
/usr/include/ni/XnQueries.h:93:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQueryAddSupportedCapability(XnNodeQuery* pQuery, const XnChar* strNeededCapability);
 ^
/usr/include/ni/XnQueries.h:103:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQueryAddSupportedMapOutputMode(XnNodeQuery* pQuery, const XnMapOutputMode* pMapOutputMode);
 ^
/usr/include/ni/XnQueries.h:112:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetSupportedMinUserPositions(XnNodeQuery* pQuery, const XnUInt32 nCount);
 ^
/usr/include/ni/XnQueries.h:120:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetExistingNodeOnly(XnNodeQuery* pQuery, XnBool bExistingNode);
 ^
/usr/include/ni/XnQueries.h:128:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetNonExistingNodeOnly(XnNodeQuery* pQuery, XnBool bNonExistingNode);
 ^
/usr/include/ni/XnQueries.h:136:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQueryAddNeededNode(XnNodeQuery* pQuery, const XnChar* strInstanceName);
 ^
/usr/include/ni/XnQueries.h:144:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQuerySetCreationInfo(XnNodeQuery* pQuery, const XnChar* strCreationInfo);
 ^
/usr/include/ni/XnQueries.h:154:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeQueryFilterList(XnContext* pContext, const XnNodeQuery* pQuery, XnNodeInfoList* pList);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:91:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListAllocate(XnNodeInfoList** ppList);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:98:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnNodeInfoListFree(XnNodeInfoList* pList);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:108:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListAdd(XnNodeInfoList* pList, const XnProductionNodeDescription* pDescription, const XnChar* strCreationInfo, XnNodeInfoList* pNeededNodes);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:122:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListAddEx(XnNodeInfoList* pList, const XnProductionNodeDescription* pDescription, const XnChar* strCreationInfo, XnNodeInfoList* pNeededNodes, const void* pAdditionalData, XnFreeHandler pFreeHandler);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:130:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListAddNode(XnNodeInfoList* pList, XnNodeInfo* pNode);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:138:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListAddNodeFromList(XnNodeInfoList* pList, XnNodeInfoListIterator otherListIt);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:146:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListRemove(XnNodeInfoList* pList, XnNodeInfoListIterator it);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:153:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListClear(XnNodeInfoList* pList);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:162:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoListAppend(XnNodeInfoList* pList, XnNodeInfoList* pOther);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:169:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnNodeInfoListIsEmpty(XnNodeInfoList* pList);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:178:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeInfoListIterator XN_C_DECL xnNodeInfoListGetFirst(XnNodeInfoList* pList);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:187:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeInfoListIterator XN_C_DECL xnNodeInfoListGetLast(XnNodeInfoList* pList);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:194:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnNodeInfoListIteratorIsValid(XnNodeInfoListIterator it);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:203:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeInfo* XN_C_DECL xnNodeInfoListGetCurrent(XnNodeInfoListIterator it);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:212:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeInfoListIterator XN_C_DECL xnNodeInfoListGetNext(XnNodeInfoListIterator it);
 ^
/usr/include/ni/XnPrdNodeInfoList.h:221:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeInfoListIterator XN_C_DECL xnNodeInfoListGetPrevious(XnNodeInfoListIterator it);
 ^
/usr/include/ni/XnContext.h:100:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnInit(XnContext** ppContext);
 ^
/usr/include/ni/XnContext.h:111:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnContextRunXmlScriptFromFileEx(XnContext* pContext, const XnChar* strFileName, XnEnumerationErrors* pErrors, XnNodeHandle* phScriptNode);
 ^
/usr/include/ni/XnContext.h:124:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use xnContextRunXmlScriptFromFileEx() instead") xnContextRunXmlScriptFromFile(XnContext* pContext, const XnChar* strFileName, XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnContext.h:135:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnContextRunXmlScriptEx(XnContext* pContext, const XnChar* xmlScript, XnEnumerationErrors* pErrors, XnNodeHandle* phScriptNode);
 ^
/usr/include/ni/XnContext.h:148:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use xnContextRunXmlScriptEx() instead") XN_C_DECL xnContextRunXmlScript(XnContext* pContext, const XnChar* xmlScript, XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnContext.h:159:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnInitFromXmlFileEx(const XnChar* strFileName, XnContext** ppContext, XnEnumerationErrors* pErrors, XnNodeHandle* phScriptNode);
 ^
/usr/include/ni/XnContext.h:172:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use xnInitFromXmlFileEx() instead") XN_C_DECL xnInitFromXmlFile(const XnChar* strFileName, XnContext** ppContext, XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnContext.h:181:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnContextOpenFileRecordingEx(XnContext* pContext, const XnChar* strFileName, XnNodeHandle* phPlayerNode);
 ^
/usr/include/ni/XnContext.h:193:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use xnContextOpenFileRecordingEx() instead") XN_C_DECL xnContextOpenFileRecording(XnContext* pContext, const XnChar* strFileName);
 ^
/usr/include/ni/XnContext.h:200:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnContextAddRef(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:208:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnContextRelease(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:218:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_API_DEPRECATED("Use xnContextRelease() instead") XN_C_DECL xnShutdown(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:226:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnForceShutdown(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:232:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnContextRegisterForShutdown(XnContext* pContext, XnContextShuttingDownHandler pHandler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnContext.h:238:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnContextUnregisterFromShutdown(XnContext* pContext, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnContext.h:257:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerateProductionTrees(
 ^
/usr/include/ni/XnContext.h:273:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateProductionTree(
 ^
/usr/include/ni/XnContext.h:290:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateAnyProductionTree(
 ^
/usr/include/ni/XnContext.h:309:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateMockNode(
 ^
/usr/include/ni/XnContext.h:327:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateMockNodeBasedOn(
 ^
/usr/include/ni/XnContext.h:339:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnProductionNodeAddRef(XnNodeHandle hNode);
 ^
/usr/include/ni/XnContext.h:347:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use xnProductionNodeAddRef() instead.") XN_C_DECL xnRefProductionNode(XnNodeHandle hNode);
 ^
/usr/include/ni/XnContext.h:355:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnProductionNodeRelease(XnNodeHandle hNode);
 ^
/usr/include/ni/XnContext.h:364:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_API_DEPRECATED("Please use xnProductionNodeRelease() instead.") XN_C_DECL xnUnrefProductionNode(XnNodeHandle hNode);
 ^
/usr/include/ni/XnContext.h:373:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerateExistingNodes(XnContext* pContext, XnNodeInfoList** ppList);
 ^
/usr/include/ni/XnContext.h:383:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerateExistingNodesByType(XnContext* pContext, XnProductionNodeType type, XnNodeInfoList** ppList);
 ^
/usr/include/ni/XnContext.h:392:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnFindExistingRefNodeByType(
 ^
/usr/include/ni/XnContext.h:398:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use xnFindExistingRefNodeByType() instead") XN_C_DECL xnFindExistingNodeByType(
 ^
/usr/include/ni/XnContext.h:413:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetRefNodeHandleByName(
 ^
/usr/include/ni/XnContext.h:419:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use xnGetRefNodeHandleByName() instead") XN_C_DECL xnGetNodeHandleByName(
 ^
/usr/include/ni/XnContext.h:437:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnWaitAndUpdateAll(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:445:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnWaitOneUpdateAll(XnContext* pContext, XnNodeHandle hNode);
 ^
/usr/include/ni/XnContext.h:452:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnWaitAnyUpdateAll(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:460:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnWaitNoneUpdateAll(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:467:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStartGeneratingAll(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:474:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopGeneratingAll(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:483:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetGlobalMirror(XnContext* pContext, XnBool bMirror);
 ^
/usr/include/ni/XnContext.h:490:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnGetGlobalMirror(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:499:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetGlobalErrorState(XnContext* pContext);
 ^
/usr/include/ni/XnContext.h:509:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToGlobalErrorStateChange
 ^
/usr/include/ni/XnContext.h:519:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromGlobalErrorStateChange
 ^
/usr/include/ni/XnContext.h:530:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToNodeCreation
 ^
/usr/include/ni/XnContext.h:540:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromNodeCreation
 ^
/usr/include/ni/XnContext.h:551:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToNodeDestruction
 ^
/usr/include/ni/XnContext.h:561:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromNodeDestruction
 ^
/usr/include/ni/XnLicensing.h:46:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnAddLicense(XnContext* pContext, const XnLicense* pLicense);
 ^
/usr/include/ni/XnLicensing.h:56:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerateLicenses(
 ^
/usr/include/ni/XnLicensing.h:67:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeLicensesList(XnLicense* aLicenses);
 ^
In file included from /usr/include/ni/XnUtils.h:35:0,
                 from /usr/include/ni/XnOpenNI.h:30,
                 from /usr/include/ni/XnCppWrapper.h:27,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnModuleInterface.h:62:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleGetExportedInterfacePtr)(XnModuleExportedProductionNodeInterface* pInterface);
                               ^
/usr/include/ni/XnModuleInterface.h:63:19: error: typedef ‘XnStatus’ is initialized (use decltype instead)
 typedef XnStatus (XN_C_DECL* XnModuleLoadPtr)();
                   ^
/usr/include/ni/XnModuleInterface.h:63:19: error: ‘XN_C_DECL’ was not declared in this scope
/usr/include/ni/XnModuleInterface.h:63:30: error: ‘XnModuleLoadPtr’ was not declared in this scope
 typedef XnStatus (XN_C_DECL* XnModuleLoadPtr)();
                              ^
/usr/include/ni/XnModuleInterface.h:64:24: error: expected ‘)’ before ‘*’ token
 typedef void (XN_C_DECL* XnModuleUnloadPtr)();
                        ^
/usr/include/ni/XnModuleInterface.h:65:19: error: typedef ‘XnUInt32’ is initialized (use decltype instead)
 typedef XnUInt32 (XN_C_DECL* XnModuleGetExportedNodesCountPtr)();
                   ^
/usr/include/ni/XnModuleInterface.h:65:19: error: ‘XN_C_DECL’ was not declared in this scope
/usr/include/ni/XnModuleInterface.h:65:30: error: ‘XnModuleGetExportedNodesCountPtr’ was not declared in this scope
 typedef XnUInt32 (XN_C_DECL* XnModuleGetExportedNodesCountPtr)();
                              ^
/usr/include/ni/XnModuleInterface.h:66:19: error: typedef ‘XnStatus’ is initialized (use decltype instead)
 typedef XnStatus (XN_C_DECL* XnModuleGetExportedNodesEntryPointsPtr)(XnModuleGetExportedInterfacePtr* aEntryPoints, XnUInt32 nCount);
                   ^
/usr/include/ni/XnModuleInterface.h:66:19: error: ‘XN_C_DECL’ was not declared in this scope
/usr/include/ni/XnModuleInterface.h:66:30: error: ‘XnModuleGetExportedNodesEntryPointsPtr’ was not declared in this scope
 typedef XnStatus (XN_C_DECL* XnModuleGetExportedNodesEntryPointsPtr)(XnModuleGetExportedInterfacePtr* aEntryPoints, XnUInt32 nCount);
                              ^
In file included from /usr/include/ni/XnUtils.h:35:0,
                 from /usr/include/ni/XnOpenNI.h:30,
                 from /usr/include/ni/XnCppWrapper.h:27,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnModuleInterface.h:67:24: error: expected ‘)’ before ‘*’ token
 typedef void (XN_C_DECL* XnModuleGetOpenNIVersionPtr)(XnVersion* pVersion);
                        ^
/usr/include/ni/XnModuleInterface.h:71:2: error: ‘XnModuleLoadPtr’ does not name a type
  XnModuleLoadPtr pLoadFunc;
  ^
/usr/include/ni/XnModuleInterface.h:72:2: error: ‘XnModuleUnloadPtr’ does not name a type
  XnModuleUnloadPtr pUnloadFunc;
  ^
/usr/include/ni/XnModuleInterface.h:73:2: error: ‘XnModuleGetExportedNodesCountPtr’ does not name a type
  XnModuleGetExportedNodesCountPtr pGetCountFunc;
  ^
/usr/include/ni/XnModuleInterface.h:74:2: error: ‘XnModuleGetExportedNodesEntryPointsPtr’ does not name a type
  XnModuleGetExportedNodesEntryPointsPtr pGetEntryPointsFunc;
  ^
/usr/include/ni/XnModuleInterface.h:75:2: error: ‘XnModuleGetOpenNIVersionPtr’ does not name a type
  XnModuleGetOpenNIVersionPtr pGetVersionFunc;
  ^
/usr/include/ni/XnModuleInterface.h:79:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleStateChangedHandler)(void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:82:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleUserHandler)(XnUserID user, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:85:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleHandTouchingFOVEdge)(XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, XnDirection eDir, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:88:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleHandCreate)(XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:89:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleHandUpdate)(XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:90:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleHandDestroy)(XnUserID user, XnFloat fTime, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:93:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleGestureRecognized)(const XnChar* strGesture, const XnPoint3D* pIDPosition, const XnPoint3D* pEndPosition, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:94:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleGestureProgress)(const XnChar* strGesture, const XnPoint3D* pPosition, XnFloat fProgress, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:95:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleGestureIntermediateStageCompleted)(const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:96:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleGestureReadyForNextIntermediateStage)(const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:99:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleCalibrationStart)(XnUserID user, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:100:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleCalibrationEnd)(XnUserID user, XnBool bSuccess, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:101:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleCalibrationInProgress)(XnUserID user, XnCalibrationStatus calibrationError, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:102:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModuleCalibrationComplete)(XnUserID user, XnCalibrationStatus calibrationError, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:105:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModulePoseDetectionCallback)(const XnChar* strPose, XnUserID user, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:106:31: error: expected ‘)’ before ‘*’ token
 typedef void (XN_CALLBACK_TYPE* XnModulePoseDetectionInProgressCallback)(const XnChar* strPose, XnUserID user, XnPoseDetectionStatus poseError, void* pCookie);
                               ^
/usr/include/ni/XnModuleInterface.h:115:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* GetDescription)
                        ^
/usr/include/ni/XnModuleInterface.h:125:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateProductionTrees)
            ^
/usr/include/ni/XnModuleInterface.h:128:31: error: ‘XnStatus’ declared as function returning a function
   XnEnumerationErrors* pErrors);
                               ^
/usr/include/ni/XnModuleInterface.h:140:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Create)
            ^
/usr/include/ni/XnModuleInterface.h:142:9: error: ‘XnChar’ does not name a type
   const XnChar* strInstanceName, 
         ^
/usr/include/ni/XnModuleInterface.h:143:9: error: ‘XnChar’ does not name a type
   const XnChar* strCreationInfo,
         ^
/usr/include/ni/XnModuleInterface.h:145:9: error: ‘XnChar’ does not name a type
   const XnChar* strConfigurationDir,
         ^
/usr/include/ni/XnModuleInterface.h:146:33: error: ‘XnStatus’ declared as function returning a function
   XnModuleNodeHandle* phInstance);
                                 ^
/usr/include/ni/XnModuleInterface.h:153:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* Destroy)
                        ^
/usr/include/ni/XnModuleInterface.h:165:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* ProductionNode)(struct XnModuleProductionNodeInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:166:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Device)(struct XnModuleDeviceInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:167:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Generator)(struct XnModuleGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:168:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* MapGenerator)(struct XnModuleMapGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:169:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Depth)(struct XnModuleDepthGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:170:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Image)(struct XnModuleImageGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:171:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* IR)(struct XnModuleIRGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:172:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* User)(struct XnModuleUserGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:173:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Hands)(struct XnModuleHandsGeneratorInterface* pInterace);
                         ^
/usr/include/ni/XnModuleInterface.h:174:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Gesture)(struct XnModuleGestureGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:175:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Scene)(struct XnModuleSceneAnalyzerInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:176:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Audio)(struct XnModuleAudioGeneratorInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:177:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Recorder)(struct XnModuleRecorderInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:178:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Player)(struct XnModulePlayerInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:179:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Codec)(struct XnModuleCodecInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:180:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* Script)(struct XnModuleScriptNodeInterface* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:182:25: error: expected ‘)’ before ‘*’ token
   void (XN_CALLBACK_TYPE* General)(void* pInterface);
                         ^
/usr/include/ni/XnModuleInterface.h:189:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* InitNotifications)(XnModuleNodeHandle hInstance, XnNodeNotifications* pNotifications, void* pCookie);
            ^
/usr/include/ni/XnModuleInterface.h:189:129: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* InitNotifications)(XnModuleNodeHandle hInstance, XnNodeNotifications* pNotifications, void* pCookie);
                                                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:190:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* StopNotifications)(XnModuleNodeHandle hInstance);
                        ^
/usr/include/ni/XnModuleInterface.h:202:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetLockState)(XnModuleNodeHandle hInstance, XnBool bLocked);
            ^
/usr/include/ni/XnModuleInterface.h:202:74: error: ‘XnBool’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetLockState)(XnModuleNodeHandle hInstance, XnBool bLocked);
                                                                          ^
/usr/include/ni/XnModuleInterface.h:202:88: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetLockState)(XnModuleNodeHandle hInstance, XnBool bLocked);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:209:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* GetLockState)(XnModuleNodeHandle hInstance);
          ^
/usr/include/ni/XnModuleInterface.h:209:70: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* GetLockState)(XnModuleNodeHandle hInstance);
                                                                      ^
/usr/include/ni/XnModuleInterface.h:219:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToLockChange)
            ^
/usr/include/ni/XnModuleInterface.h:220:34: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hInstance, XnModuleStateChangedHandler handler,
                                  ^
/usr/include/ni/XnModuleInterface.h:221:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:229:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromLockChange)
                        ^
/usr/include/ni/XnModuleInterface.h:241:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetErrorState)(XnModuleNodeHandle hInstance);
            ^
/usr/include/ni/XnModuleInterface.h:241:73: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetErrorState)(XnModuleNodeHandle hInstance);
                                                                         ^
/usr/include/ni/XnModuleInterface.h:251:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToErrorStateChange)
            ^
/usr/include/ni/XnModuleInterface.h:252:34: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hInstance, XnModuleStateChangedHandler handler,
                                  ^
/usr/include/ni/XnModuleInterface.h:253:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:261:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromErrorStateChange)
                        ^
/usr/include/ni/XnModuleInterface.h:279:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
            ^
/usr/include/ni/XnModuleInterface.h:279:77: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
                                                                             ^
/usr/include/ni/XnModuleInterface.h:279:93: error: ‘XnInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
                                                                                             ^
/usr/include/ni/XnModuleInterface.h:279:109: error: ‘XnInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:279:125: error: ‘XnInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
                                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:279:142: error: ‘XnInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
                                                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:279:162: error: ‘XnBool’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
                                                                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:279:187: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetRange)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
                                                                                                                                                                                           ^
/usr/include/ni/XnModuleInterface.h:288:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Get)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnValue);
            ^
/usr/include/ni/XnModuleInterface.h:288:72: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* Get)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnValue);
                                                                        ^
/usr/include/ni/XnModuleInterface.h:288:88: error: ‘XnInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Get)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnValue);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:288:104: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Get)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32* pnValue);
                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:297:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Set)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32 nValue);
            ^
/usr/include/ni/XnModuleInterface.h:297:72: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* Set)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32 nValue);
                                                                        ^
/usr/include/ni/XnModuleInterface.h:297:88: error: ‘XnInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Set)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32 nValue);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:297:102: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Set)(XnModuleNodeHandle hGenerator, const XnChar* strCap, XnInt32 nValue);
                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:308:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToValueChange)
            ^
/usr/include/ni/XnModuleInterface.h:309:41: error: ‘XnChar’ does not name a type
   (XnModuleNodeHandle hGenerator, const XnChar* strCap, XnModuleStateChangedHandler handler,
                                         ^
/usr/include/ni/XnModuleInterface.h:309:57: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, const XnChar* strCap, XnModuleStateChangedHandler handler,
                                                         ^
/usr/include/ni/XnModuleInterface.h:310:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:319:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromValueChange)
                        ^
/usr/include/ni/XnModuleInterface.h:332:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsCapabilitySupported)(
          ^
/usr/include/ni/XnModuleInterface.h:334:9: error: ‘XnChar’ does not name a type
   const XnChar* strCapabilityName
         ^
/usr/include/ni/XnModuleInterface.h:335:3: error: ‘XnBool’ declared as function returning a function
   );
   ^
/usr/include/ni/XnModuleInterface.h:344:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64 nValue);
            ^
/usr/include/ni/XnModuleInterface.h:344:82: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* SetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64 nValue);
                                                                                  ^
/usr/include/ni/XnModuleInterface.h:344:99: error: ‘XnUInt64’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64 nValue);
                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:344:114: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64 nValue);
                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:345:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble dValue);
            ^
/usr/include/ni/XnModuleInterface.h:345:83: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* SetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble dValue);
                                                                                   ^
/usr/include/ni/XnModuleInterface.h:345:100: error: ‘XnDouble’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble dValue);
                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:345:115: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble dValue);
                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:346:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, const XnChar* strValue);
            ^
/usr/include/ni/XnModuleInterface.h:346:85: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* SetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, const XnChar* strValue);
                                                                                     ^
/usr/include/ni/XnModuleInterface.h:346:108: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* SetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, const XnChar* strValue);
                                                                                                            ^
/usr/include/ni/XnModuleInterface.h:346:124: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, const XnChar* strValue);
                                                                                                                            ^
/usr/include/ni/XnModuleInterface.h:347:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, const void* pBuffer);
            ^
/usr/include/ni/XnModuleInterface.h:347:86: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* SetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, const void* pBuffer);
                                                                                      ^
/usr/include/ni/XnModuleInterface.h:347:103: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, const void* pBuffer);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:347:144: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, const void* pBuffer);
                                                                                                                                                ^
/usr/include/ni/XnModuleInterface.h:356:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64* pnValue);
            ^
/usr/include/ni/XnModuleInterface.h:356:82: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* GetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64* pnValue);
                                                                                  ^
/usr/include/ni/XnModuleInterface.h:356:99: error: ‘XnUInt64’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64* pnValue);
                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:356:116: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetIntProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt64* pnValue);
                                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:357:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble* pdValue);
            ^
/usr/include/ni/XnModuleInterface.h:357:83: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* GetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble* pdValue);
                                                                                   ^
/usr/include/ni/XnModuleInterface.h:357:100: error: ‘XnDouble’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble* pdValue);
                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:357:117: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetRealProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnDouble* pdValue);
                                                                                                                     ^
/usr/include/ni/XnModuleInterface.h:358:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnChar* csValue, XnUInt32 nBufSize);
            ^
/usr/include/ni/XnModuleInterface.h:358:85: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* GetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnChar* csValue, XnUInt32 nBufSize);
                                                                                     ^
/usr/include/ni/XnModuleInterface.h:358:102: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnChar* csValue, XnUInt32 nBufSize);
                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:358:119: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnChar* csValue, XnUInt32 nBufSize);
                                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:358:136: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetStringProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnChar* csValue, XnUInt32 nBufSize);
                                                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:359:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, void* pBuffer);
            ^
/usr/include/ni/XnModuleInterface.h:359:86: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* GetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, void* pBuffer);
                                                                                      ^
/usr/include/ni/XnModuleInterface.h:359:103: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, void* pBuffer);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:359:138: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetGeneralProperty)(XnModuleNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, void* pBuffer);
                                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:381:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetDeviceName)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
            ^
/usr/include/ni/XnModuleInterface.h:381:75: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetDeviceName)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                           ^
/usr/include/ni/XnModuleInterface.h:381:94: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetDeviceName)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                                              ^
/usr/include/ni/XnModuleInterface.h:381:116: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetDeviceName)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:394:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetVendorSpecificData)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
            ^
/usr/include/ni/XnModuleInterface.h:394:83: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetVendorSpecificData)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                                   ^
/usr/include/ni/XnModuleInterface.h:394:102: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetVendorSpecificData)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:394:124: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetVendorSpecificData)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                                                                            ^
/usr/include/ni/XnModuleInterface.h:407:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSerialNumber)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
            ^
/usr/include/ni/XnModuleInterface.h:407:77: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSerialNumber)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                             ^
/usr/include/ni/XnModuleInterface.h:407:96: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSerialNumber)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                                                ^
/usr/include/ni/XnModuleInterface.h:407:118: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetSerialNumber)(XnModuleNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
                                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:427:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetMirror)(XnModuleNodeHandle hInstance, XnBool bMirror);
            ^
/usr/include/ni/XnModuleInterface.h:427:71: error: ‘XnBool’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetMirror)(XnModuleNodeHandle hInstance, XnBool bMirror);
                                                                       ^
/usr/include/ni/XnModuleInterface.h:427:85: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetMirror)(XnModuleNodeHandle hInstance, XnBool bMirror);
                                                                                     ^
/usr/include/ni/XnModuleInterface.h:434:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsMirrored)(XnModuleNodeHandle hInstance);
          ^
/usr/include/ni/XnModuleInterface.h:434:68: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsMirrored)(XnModuleNodeHandle hInstance);
                                                                    ^
/usr/include/ni/XnModuleInterface.h:444:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToMirrorChange)
            ^
/usr/include/ni/XnModuleInterface.h:445:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:446:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:454:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromMirrorChange)
                        ^
/usr/include/ni/XnModuleInterface.h:470:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsViewPointSupported)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
          ^
/usr/include/ni/XnModuleInterface.h:470:100: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsViewPointSupported)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:478:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
            ^
/usr/include/ni/XnModuleInterface.h:478:94: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
                                                                                              ^
/usr/include/ni/XnModuleInterface.h:486:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsViewPointAs)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
          ^
/usr/include/ni/XnModuleInterface.h:486:93: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsViewPointAs)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
                                                                                             ^
/usr/include/ni/XnModuleInterface.h:493:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* ResetViewPoint)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:493:75: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* ResetViewPoint)(XnModuleNodeHandle hGenerator);
                                                                           ^
/usr/include/ni/XnModuleInterface.h:503:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToViewPointChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:503:88: error: ‘XnModuleStateChangedHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToViewPointChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:503:168: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToViewPointChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:511:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromViewPointChange)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:523:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetPixelCoordinatesInViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther, XnUInt32 x, XnUInt32 y, XnUInt32* pAltX, XnUInt32* pAltY);
            ^
/usr/include/ni/XnModuleInterface.h:523:114: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetPixelCoordinatesInViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther, XnUInt32 x, XnUInt32 y, XnUInt32* pAltX, XnUInt32* pAltY);
                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:523:126: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetPixelCoordinatesInViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther, XnUInt32 x, XnUInt32 y, XnUInt32* pAltX, XnUInt32* pAltY);
                                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:523:138: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetPixelCoordinatesInViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther, XnUInt32 x, XnUInt32 y, XnUInt32* pAltX, XnUInt32* pAltY);
                                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:523:155: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetPixelCoordinatesInViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther, XnUInt32 x, XnUInt32 y, XnUInt32* pAltX, XnUInt32* pAltY);
                                                                                                                                                           ^
/usr/include/ni/XnModuleInterface.h:523:170: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetPixelCoordinatesInViewPoint)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther, XnUInt32 x, XnUInt32 y, XnUInt32* pAltX, XnUInt32* pAltY);
                                                                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:537:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* CanFrameSyncWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
          ^
/usr/include/ni/XnModuleInterface.h:537:96: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* CanFrameSyncWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
                                                                                                ^
/usr/include/ni/XnModuleInterface.h:545:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* FrameSyncWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
            ^
/usr/include/ni/XnModuleInterface.h:545:95: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* FrameSyncWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
                                                                                               ^
/usr/include/ni/XnModuleInterface.h:553:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopFrameSyncWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
            ^
/usr/include/ni/XnModuleInterface.h:553:99: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StopFrameSyncWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:561:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsFrameSyncedWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
          ^
/usr/include/ni/XnModuleInterface.h:561:97: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsFrameSyncedWith)(XnModuleNodeHandle hGenerator, XnNodeHandle hOther);
                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:571:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToFrameSyncChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:571:88: error: ‘XnModuleStateChangedHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToFrameSyncChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:571:168: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToFrameSyncChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:579:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromFrameSyncChange)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:596:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StartGenerating)
            ^
/usr/include/ni/XnModuleInterface.h:597:33: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:604:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsGenerating)
          ^
/usr/include/ni/XnModuleInterface.h:605:33: error: ‘XnBool’ declared as function returning a function
   (XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:612:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* StopGenerating)
                        ^
/usr/include/ni/XnModuleInterface.h:623:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToGenerationRunningChange)
            ^
/usr/include/ni/XnModuleInterface.h:624:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:625:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:633:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromGenerationRunningChange)
                        ^
/usr/include/ni/XnModuleInterface.h:643:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToNewDataAvailable)
            ^
/usr/include/ni/XnModuleInterface.h:644:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:645:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:653:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromNewDataAvailable)
                        ^
/usr/include/ni/XnModuleInterface.h:662:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsNewDataAvailable)
          ^
/usr/include/ni/XnModuleInterface.h:663:35: error: ‘XnUInt64’ has not been declared
   (XnModuleNodeHandle hGenerator, XnUInt64* pnTimestamp);
                                   ^
/usr/include/ni/XnModuleInterface.h:663:56: error: ‘XnBool’ declared as function returning a function
   (XnModuleNodeHandle hGenerator, XnUInt64* pnTimestamp);
                                                        ^
/usr/include/ni/XnModuleInterface.h:671:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* UpdateData)
            ^
/usr/include/ni/XnModuleInterface.h:672:33: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:679:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* GetDataSize)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:679:72: error: ‘XnUInt32’ declared as function returning a function
  XnUInt32 (XN_CALLBACK_TYPE* GetDataSize)(XnModuleNodeHandle hGenerator);
                                                                        ^
/usr/include/ni/XnModuleInterface.h:686:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt64 (XN_CALLBACK_TYPE* GetTimestamp)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:686:73: error: ‘XnUInt64’ declared as function returning a function
  XnUInt64 (XN_CALLBACK_TYPE* GetTimestamp)(XnModuleNodeHandle hGenerator);
                                                                         ^
/usr/include/ni/XnModuleInterface.h:693:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* GetFrameID)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:693:71: error: ‘XnUInt32’ declared as function returning a function
  XnUInt32 (XN_CALLBACK_TYPE* GetFrameID)(XnModuleNodeHandle hGenerator);
                                                                       ^
/usr/include/ni/XnModuleInterface.h:706:31: error: expected ‘)’ before ‘*’ token
  const void* (XN_CALLBACK_TYPE* GetData)(XnModuleNodeHandle hGenerator);
                               ^
/usr/include/ni/XnModuleInterface.h:706:15: error: expected ‘;’ at end of member declaration
  const void* (XN_CALLBACK_TYPE* GetData)(XnModuleNodeHandle hGenerator);
               ^
/usr/include/ni/XnModuleInterface.h:706:33: error: expected ‘;’ at end of member declaration
  const void* (XN_CALLBACK_TYPE* GetData)(XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:706:40: error: expected unqualified-id before ‘)’ token
  const void* (XN_CALLBACK_TYPE* GetData)(XnModuleNodeHandle hGenerator);
                                        ^
/usr/include/ni/XnModuleInterface.h:719:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetOutputStream)
            ^
/usr/include/ni/XnModuleInterface.h:720:94: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, void *pStreamToken, XnRecorderOutputStreamInterface *pStream);
                                                                                              ^
/usr/include/ni/XnModuleInterface.h:735:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetInputStream)
            ^
/usr/include/ni/XnModuleInterface.h:736:92: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, void *pStreamCookie, XnPlayerInputStreamInterface *pStream);
                                                                                            ^
/usr/include/ni/XnModuleInterface.h:743:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* ReadNext)(XnModuleNodeHandle hInstance);
            ^
/usr/include/ni/XnModuleInterface.h:743:68: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* ReadNext)(XnModuleNodeHandle hInstance);
                                                                    ^
/usr/include/ni/XnModuleInterface.h:753:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetNodeNotifications)
            ^
/usr/include/ni/XnModuleInterface.h:754:105: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, void *pNodeNotificationsCookie, XnNodeNotifications *pNodeNotifications);
                                                                                                         ^
/usr/include/ni/XnModuleInterface.h:756:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetRawNodeNotifications)
            ^
/usr/include/ni/XnModuleInterface.h:757:111: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, void *pRawNodeNotificationsCookie, XnNodeNotifications *pRawNodeNotifications);
                                                                                                               ^
/usr/include/ni/XnModuleInterface.h:765:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetRepeat)
            ^
/usr/include/ni/XnModuleInterface.h:766:34: error: ‘XnBool’ has not been declared
   (XnModuleNodeHandle hInstance, XnBool bRepeat);
                                  ^
/usr/include/ni/XnModuleInterface.h:766:48: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, XnBool bRepeat);
                                                ^
/usr/include/ni/XnModuleInterface.h:768:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SeekToTimeStamp)
            ^
/usr/include/ni/XnModuleInterface.h:769:34: error: ‘XnInt64’ has not been declared
   (XnModuleNodeHandle hInstance, XnInt64 nTimeOffset, XnPlayerSeekOrigin origin);
                                  ^
/usr/include/ni/XnModuleInterface.h:769:80: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, XnInt64 nTimeOffset, XnPlayerSeekOrigin origin);
                                                                                ^
/usr/include/ni/XnModuleInterface.h:771:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SeekToFrame)
            ^
/usr/include/ni/XnModuleInterface.h:772:40: error: ‘XnChar’ does not name a type
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnInt32 nFrameOffset, XnPlayerSeekOrigin origin);
                                        ^
/usr/include/ni/XnModuleInterface.h:772:61: error: ‘XnInt32’ has not been declared
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnInt32 nFrameOffset, XnPlayerSeekOrigin origin);
                                                             ^
/usr/include/ni/XnModuleInterface.h:772:108: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnInt32 nFrameOffset, XnPlayerSeekOrigin origin);
                                                                                                            ^
/usr/include/ni/XnModuleInterface.h:774:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* TellTimestamp)
            ^
/usr/include/ni/XnModuleInterface.h:775:34: error: ‘XnUInt64’ has not been declared
   (XnModuleNodeHandle hInstance, XnUInt64* pnTimestamp);
                                  ^
/usr/include/ni/XnModuleInterface.h:775:55: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, XnUInt64* pnTimestamp);
                                                       ^
/usr/include/ni/XnModuleInterface.h:777:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* TellFrame)
            ^
/usr/include/ni/XnModuleInterface.h:778:40: error: ‘XnChar’ does not name a type
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnUInt32* pnFrame);
                                        ^
/usr/include/ni/XnModuleInterface.h:778:61: error: ‘XnUInt32’ has not been declared
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnUInt32* pnFrame);
                                                             ^
/usr/include/ni/XnModuleInterface.h:778:78: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnUInt32* pnFrame);
                                                                              ^
/usr/include/ni/XnModuleInterface.h:780:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetNumFrames)
            ^
/usr/include/ni/XnModuleInterface.h:781:40: error: ‘XnChar’ does not name a type
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnUInt32* pnFrames);
                                        ^
/usr/include/ni/XnModuleInterface.h:781:61: error: ‘XnUInt32’ has not been declared
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnUInt32* pnFrames);
                                                             ^
/usr/include/ni/XnModuleInterface.h:781:79: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hInstance, const XnChar* strNodeName, XnUInt32* pnFrames);
                                                                               ^
/usr/include/ni/XnModuleInterface.h:783:8: error: ‘XnChar’ does not name a type
  const XnChar* (XN_CALLBACK_TYPE* GetSupportedFormat)
        ^
/usr/include/ni/XnModuleInterface.h:786:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsEOF)
          ^
/usr/include/ni/XnModuleInterface.h:787:32: error: ‘XnBool’ declared as function returning a function
   (XnModuleNodeHandle hInstance);
                                ^
/usr/include/ni/XnModuleInterface.h:797:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToEndOfFileReached)
            ^
/usr/include/ni/XnModuleInterface.h:798:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:799:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:807:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromEndOfFileReached)
                        ^
/usr/include/ni/XnModuleInterface.h:823:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetCropping)(XnModuleNodeHandle hGenerator, const XnCropping* pCropping);
            ^
/usr/include/ni/XnModuleInterface.h:823:101: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetCropping)(XnModuleNodeHandle hGenerator, const XnCropping* pCropping);
                                                                                                     ^
/usr/include/ni/XnModuleInterface.h:831:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetCropping)(XnModuleNodeHandle hGenerator, XnCropping* pCropping);
            ^
/usr/include/ni/XnModuleInterface.h:831:95: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetCropping)(XnModuleNodeHandle hGenerator, XnCropping* pCropping);
                                                                                               ^
/usr/include/ni/XnModuleInterface.h:841:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToCroppingChange)
            ^
/usr/include/ni/XnModuleInterface.h:842:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:843:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:851:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromCroppingChange)
                        ^
/usr/include/ni/XnModuleInterface.h:864:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetPowerLineFrequency)(XnModuleNodeHandle hGenerator, XnPowerLineFrequency nFrequency);
            ^
/usr/include/ni/XnModuleInterface.h:864:115: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetPowerLineFrequency)(XnModuleNodeHandle hGenerator, XnPowerLineFrequency nFrequency);
                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:871:40: error: expected ‘)’ before ‘*’ token
  XnPowerLineFrequency (XN_CALLBACK_TYPE* GetPowerLineFrequency)(XnModuleNodeHandle hGenerator);
                                        ^
/usr/include/ni/XnModuleInterface.h:881:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPowerLineFrequencyChange)
            ^
/usr/include/ni/XnModuleInterface.h:882:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:883:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:891:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromPowerLineFrequencyChange)
                        ^
/usr/include/ni/XnModuleInterface.h:909:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* GetSupportedMapOutputModesCount)
            ^
/usr/include/ni/XnModuleInterface.h:910:33: error: ‘XnUInt32’ declared as function returning a function
   (XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:921:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSupportedMapOutputModes)
            ^
/usr/include/ni/XnModuleInterface.h:923:28: error: ‘XnUInt32’ has not been declared
   XnMapOutputMode* aModes, XnUInt32* pnCount);
                            ^
/usr/include/ni/XnModuleInterface.h:923:45: error: ‘XnStatus’ declared as function returning a function
   XnMapOutputMode* aModes, XnUInt32* pnCount);
                                             ^
/usr/include/ni/XnModuleInterface.h:931:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetMapOutputMode)
            ^
/usr/include/ni/XnModuleInterface.h:932:69: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hGenerator, const XnMapOutputMode* pOutputMode);
                                                                     ^
/usr/include/ni/XnModuleInterface.h:940:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetMapOutputMode)
            ^
/usr/include/ni/XnModuleInterface.h:941:63: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hGenerator, XnMapOutputMode* pOutputMode);
                                                               ^
/usr/include/ni/XnModuleInterface.h:951:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToMapOutputModeChange)
            ^
/usr/include/ni/XnModuleInterface.h:952:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:953:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:961:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromMapOutputModeChange)
                        ^
/usr/include/ni/XnModuleInterface.h:972:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* GetBytesPerPixel)
            ^
/usr/include/ni/XnModuleInterface.h:973:33: error: ‘XnUInt32’ declared as function returning a function
   (XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:989:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* GetSupportedUserPositionsCount)
            ^
/usr/include/ni/XnModuleInterface.h:990:33: error: ‘XnUInt32’ declared as function returning a function
   (XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:999:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetUserPosition)(
            ^
/usr/include/ni/XnModuleInterface.h:1001:3: error: ‘XnUInt32’ has not been declared
   XnUInt32 nIndex, 
   ^
/usr/include/ni/XnModuleInterface.h:1002:35: error: ‘XnStatus’ declared as function returning a function
   const XnBoundingBox3D* pPosition);
                                   ^
/usr/include/ni/XnModuleInterface.h:1011:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetUserPosition)
            ^
/usr/include/ni/XnModuleInterface.h:1012:35: error: ‘XnUInt32’ has not been declared
   (XnModuleNodeHandle hGenerator, XnUInt32 nIndex, XnBoundingBox3D* pPosition);
                                   ^
/usr/include/ni/XnModuleInterface.h:1012:78: error: ‘XnStatus’ declared as function returning a function
   (XnModuleNodeHandle hGenerator, XnUInt32 nIndex, XnBoundingBox3D* pPosition);
                                                                              ^
/usr/include/ni/XnModuleInterface.h:1022:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToUserPositionChange)
            ^
/usr/include/ni/XnModuleInterface.h:1023:35: error: ‘XnModuleStateChangedHandler’ has not been declared
   (XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                   ^
/usr/include/ni/XnModuleInterface.h:1024:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:1032:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromUserPositionChange)
                        ^
/usr/include/ni/XnModuleInterface.h:1050:2: error: ‘XnDepthPixel’ does not name a type
  XnDepthPixel* (XN_CALLBACK_TYPE* GetDepthMap)
  ^
/usr/include/ni/XnModuleInterface.h:1058:16: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnDepthPixel (XN_CALLBACK_TYPE* GetDeviceMaxDepth)
                ^
/usr/include/ni/XnModuleInterface.h:1059:33: error: ‘XnDepthPixel’ declared as function returning a function
   (XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:1069:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* GetFieldOfView)(XnModuleNodeHandle hGenerator, XnFieldOfView* pFOV);
                        ^
/usr/include/ni/XnModuleInterface.h:1079:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToFieldOfViewChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
            ^
/usr/include/ni/XnModuleInterface.h:1079:90: error: ‘XnModuleStateChangedHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToFieldOfViewChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1080:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:1088:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromFieldOfViewChange)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1106:2: error: ‘XnUInt8’ does not name a type
  XnUInt8* (XN_CALLBACK_TYPE* GetImageMap)(
  ^
/usr/include/ni/XnModuleInterface.h:1116:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsPixelFormatSupported)(XnModuleNodeHandle hGenerator, XnPixelFormat Format);
          ^
/usr/include/ni/XnModuleInterface.h:1116:103: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsPixelFormatSupported)(XnModuleNodeHandle hGenerator, XnPixelFormat Format);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1124:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetPixelFormat)(XnModuleNodeHandle hGenerator, XnPixelFormat Format);
            ^
/usr/include/ni/XnModuleInterface.h:1124:97: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetPixelFormat)(XnModuleNodeHandle hGenerator, XnPixelFormat Format);
                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1131:33: error: expected ‘)’ before ‘*’ token
  XnPixelFormat (XN_CALLBACK_TYPE* GetPixelFormat)(XnModuleNodeHandle hGenerator);
                                 ^
/usr/include/ni/XnModuleInterface.h:1141:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPixelFormatChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
            ^
/usr/include/ni/XnModuleInterface.h:1141:90: error: ‘XnModuleStateChangedHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPixelFormatChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1142:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:1150:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromPixelFormatChange)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1163:2: error: ‘XnIRPixel’ does not name a type
  XnIRPixel* (XN_CALLBACK_TYPE* GetIRMap)(
  ^
/usr/include/ni/XnModuleInterface.h:1174:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* AddGesture)(XnModuleNodeHandle hGenerator, const XnChar* strGesture, XnBoundingBox3D* pArea);
            ^
/usr/include/ni/XnModuleInterface.h:1174:79: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* AddGesture)(XnModuleNodeHandle hGenerator, const XnChar* strGesture, XnBoundingBox3D* pArea);
                                                                               ^
/usr/include/ni/XnModuleInterface.h:1174:121: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* AddGesture)(XnModuleNodeHandle hGenerator, const XnChar* strGesture, XnBoundingBox3D* pArea);
                                                                                                                         ^
/usr/include/ni/XnModuleInterface.h:1175:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RemoveGesture)(XnModuleNodeHandle hGenerator, const XnChar* strGesture);
            ^
/usr/include/ni/XnModuleInterface.h:1175:82: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* RemoveGesture)(XnModuleNodeHandle hGenerator, const XnChar* strGesture);
                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1175:100: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RemoveGesture)(XnModuleNodeHandle hGenerator, const XnChar* strGesture);
                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1176:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
            ^
/usr/include/ni/XnModuleInterface.h:1176:80: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
                                                                                ^
/usr/include/ni/XnModuleInterface.h:1176:103: error: ‘XnUInt16’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1176:122: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1177:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
            ^
/usr/include/ni/XnModuleInterface.h:1177:80: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
                                                                                ^
/usr/include/ni/XnModuleInterface.h:1177:103: error: ‘XnUInt16’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1177:122: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* EnumerateGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt16* nGestures);
                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1178:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsGestureAvailable)(XnModuleNodeHandle hInstance, const XnChar* strGesture);
          ^
/usr/include/ni/XnModuleInterface.h:1178:84: error: ‘XnChar’ does not name a type
  XnBool (XN_CALLBACK_TYPE* IsGestureAvailable)(XnModuleNodeHandle hInstance, const XnChar* strGesture);
                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1178:102: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsGestureAvailable)(XnModuleNodeHandle hInstance, const XnChar* strGesture);
                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1179:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsGestureProgressSupported)(XnModuleNodeHandle hGenerator, const XnChar* strGesture);
          ^
/usr/include/ni/XnModuleInterface.h:1179:93: error: ‘XnChar’ does not name a type
  XnBool (XN_CALLBACK_TYPE* IsGestureProgressSupported)(XnModuleNodeHandle hGenerator, const XnChar* strGesture);
                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1179:111: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsGestureProgressSupported)(XnModuleNodeHandle hGenerator, const XnChar* strGesture);
                                                                                                               ^
/usr/include/ni/XnModuleInterface.h:1180:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterGestureCallbacks)(XnModuleNodeHandle hGenerator, XnModuleGestureRecognized RecognizedCB, XnModuleGestureProgress ProgressCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1180:87: error: ‘XnModuleGestureRecognized’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterGestureCallbacks)(XnModuleNodeHandle hGenerator, XnModuleGestureRecognized RecognizedCB, XnModuleGestureProgress ProgressCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1180:127: error: ‘XnModuleGestureProgress’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterGestureCallbacks)(XnModuleNodeHandle hGenerator, XnModuleGestureRecognized RecognizedCB, XnModuleGestureProgress ProgressCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                               ^
/usr/include/ni/XnModuleInterface.h:1180:206: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterGestureCallbacks)(XnModuleNodeHandle hGenerator, XnModuleGestureRecognized RecognizedCB, XnModuleGestureProgress ProgressCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1181:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterGestureCallbacks)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1182:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1182:86: error: ‘XnModuleStateChangedHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1182:166: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1183:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromGestureChange)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1185:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
            ^
/usr/include/ni/XnModuleInterface.h:1185:83: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1185:106: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1185:128: error: ‘XnUInt16’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1185:147: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetAllActiveGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1186:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateAllGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
            ^
/usr/include/ni/XnModuleInterface.h:1186:83: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateAllGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1186:106: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateAllGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1186:128: error: ‘XnUInt16’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateAllGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1186:147: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* EnumerateAllGestures)(XnModuleNodeHandle hGenerator, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
                                                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1188:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureIntermediateStageCompleted)(XnModuleNodeHandle hGenerator, XnModuleGestureIntermediateStageCompleted GestureIntermediateStageCompletedCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1188:106: error: ‘XnModuleGestureIntermediateStageCompleted’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureIntermediateStageCompleted)(XnModuleNodeHandle hGenerator, XnModuleGestureIntermediateStageCompleted GestureIntermediateStageCompletedCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1188:228: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureIntermediateStageCompleted)(XnModuleNodeHandle hGenerator, XnModuleGestureIntermediateStageCompleted GestureIntermediateStageCompletedCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1189:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromGestureIntermediateStageCompleted)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1190:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureReadyForNextIntermediateStage)(XnModuleNodeHandle hGenerator, XnModuleGestureReadyForNextIntermediateStage ReadyForNextIntermediateStageCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1190:109: error: ‘XnModuleGestureReadyForNextIntermediateStage’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureReadyForNextIntermediateStage)(XnModuleNodeHandle hGenerator, XnModuleGestureReadyForNextIntermediateStage ReadyForNextIntermediateStageCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1190:230: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToGestureReadyForNextIntermediateStage)(XnModuleNodeHandle hGenerator, XnModuleGestureReadyForNextIntermediateStage ReadyForNextIntermediateStageCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1191:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromGestureReadyForNextIntermediateStage)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1200:8: error: ‘XnLabel’ does not name a type
  const XnLabel* (XN_CALLBACK_TYPE* GetLabelMap)(XnModuleNodeHandle hGenerator);
        ^
/usr/include/ni/XnModuleInterface.h:1201:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetFloor)(XnModuleNodeHandle hGenerator, XnPlane3D* pPlane);
            ^
/usr/include/ni/XnModuleInterface.h:1201:88: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetFloor)(XnModuleNodeHandle hGenerator, XnPlane3D* pPlane);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1209:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToHandTouchingFOVEdge)(XnModuleNodeHandle hGenerator, XnModuleHandTouchingFOVEdge, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1209:92: error: ‘XnModuleHandTouchingFOVEdge’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToHandTouchingFOVEdge)(XnModuleNodeHandle hGenerator, XnModuleHandTouchingFOVEdge, void* pCookie, XnCallbackHandle* phCallback);
                                                                                            ^
/usr/include/ni/XnModuleInterface.h:1209:164: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToHandTouchingFOVEdge)(XnModuleNodeHandle hGenerator, XnModuleHandTouchingFOVEdge, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1210:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromHandTouchingFOVEdge)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1217:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterHandCallbacks)(XnModuleNodeHandle hGenerator, XnModuleHandCreate CreateCB, XnModuleHandUpdate UpdateCB, XnModuleHandDestroy DestroyCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1217:84: error: ‘XnModuleHandCreate’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterHandCallbacks)(XnModuleNodeHandle hGenerator, XnModuleHandCreate CreateCB, XnModuleHandUpdate UpdateCB, XnModuleHandDestroy DestroyCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1217:113: error: ‘XnModuleHandUpdate’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterHandCallbacks)(XnModuleNodeHandle hGenerator, XnModuleHandCreate CreateCB, XnModuleHandUpdate UpdateCB, XnModuleHandDestroy DestroyCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1217:142: error: ‘XnModuleHandDestroy’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterHandCallbacks)(XnModuleNodeHandle hGenerator, XnModuleHandCreate CreateCB, XnModuleHandUpdate UpdateCB, XnModuleHandDestroy DestroyCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1217:216: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterHandCallbacks)(XnModuleNodeHandle hGenerator, XnModuleHandCreate CreateCB, XnModuleHandUpdate UpdateCB, XnModuleHandDestroy DestroyCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1218:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterHandCallbacks)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1219:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
            ^
/usr/include/ni/XnModuleInterface.h:1219:75: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                           ^
/usr/include/ni/XnModuleInterface.h:1219:88: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StopTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1220:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopTrackingAll)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:1220:76: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StopTrackingAll)(XnModuleNodeHandle hGenerator);
                                                                            ^
/usr/include/ni/XnModuleInterface.h:1221:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StartTracking)(XnModuleNodeHandle hGenerator, const XnPoint3D* pPosition);
            ^
/usr/include/ni/XnModuleInterface.h:1221:102: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StartTracking)(XnModuleNodeHandle hGenerator, const XnPoint3D* pPosition);
                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1222:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetSmoothing)(XnModuleNodeHandle hGenerator, XnFloat fSmoothingFactor);
            ^
/usr/include/ni/XnModuleInterface.h:1222:75: error: ‘XnFloat’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetSmoothing)(XnModuleNodeHandle hGenerator, XnFloat fSmoothingFactor);
                                                                           ^
/usr/include/ni/XnModuleInterface.h:1222:99: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetSmoothing)(XnModuleNodeHandle hGenerator, XnFloat fSmoothingFactor);
                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1233:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsJointAvailable)(XnModuleNodeHandle hGenerator, XnSkeletonJoint eJoint);
          ^
/usr/include/ni/XnModuleInterface.h:1233:99: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsJointAvailable)(XnModuleNodeHandle hGenerator, XnSkeletonJoint eJoint);
                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1234:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsProfileAvailable)(XnModuleNodeHandle hGenerator, XnSkeletonProfile eProfile);
          ^
/usr/include/ni/XnModuleInterface.h:1234:105: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsProfileAvailable)(XnModuleNodeHandle hGenerator, XnSkeletonProfile eProfile);
                                                                                                         ^
/usr/include/ni/XnModuleInterface.h:1235:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetSkeletonProfile)(XnModuleNodeHandle hGenerator, XnSkeletonProfile eProfile);
            ^
/usr/include/ni/XnModuleInterface.h:1235:107: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetSkeletonProfile)(XnModuleNodeHandle hGenerator, XnSkeletonProfile eProfile);
                                                                                                           ^
/usr/include/ni/XnModuleInterface.h:1236:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetJointActive)(XnModuleNodeHandle hGenerator, XnSkeletonJoint eJoint, XnBool bState);
            ^
/usr/include/ni/XnModuleInterface.h:1236:101: error: ‘XnBool’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetJointActive)(XnModuleNodeHandle hGenerator, XnSkeletonJoint eJoint, XnBool bState);
                                                                                                     ^
/usr/include/ni/XnModuleInterface.h:1236:114: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetJointActive)(XnModuleNodeHandle hGenerator, XnSkeletonJoint eJoint, XnBool bState);
                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1237:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsJointActive)(XnModuleNodeHandle hGenerator, XnSkeletonJoint eJoint);
          ^
/usr/include/ni/XnModuleInterface.h:1237:96: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsJointActive)(XnModuleNodeHandle hGenerator, XnSkeletonJoint eJoint);
                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1238:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToJointConfigurationChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1238:97: error: ‘XnModuleStateChangedHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToJointConfigurationChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1238:177: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToJointConfigurationChange)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1239:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromJointConfigurationChange)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1240:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateActiveJoints)(XnModuleNodeHandle hGenerator, XnSkeletonJoint* pJoints, XnUInt16* pnJoints);
            ^
/usr/include/ni/XnModuleInterface.h:1240:110: error: ‘XnUInt16’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* EnumerateActiveJoints)(XnModuleNodeHandle hGenerator, XnSkeletonJoint* pJoints, XnUInt16* pnJoints);
                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1240:128: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* EnumerateActiveJoints)(XnModuleNodeHandle hGenerator, XnSkeletonJoint* pJoints, XnUInt16* pnJoints);
                                                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1241:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJoint)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointTransformation* pJoint);
            ^
/usr/include/ni/XnModuleInterface.h:1241:79: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJoint)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointTransformation* pJoint);
                                                                               ^
/usr/include/ni/XnModuleInterface.h:1241:155: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJoint)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointTransformation* pJoint);
                                                                                                                                                           ^
/usr/include/ni/XnModuleInterface.h:1242:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJointPosition)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointPosition* pJoint);
            ^
/usr/include/ni/XnModuleInterface.h:1242:87: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJointPosition)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointPosition* pJoint);
                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1242:157: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJointPosition)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointPosition* pJoint);
                                                                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1243:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJointOrientation)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointOrientation* pJoint);
            ^
/usr/include/ni/XnModuleInterface.h:1243:90: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJointOrientation)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointOrientation* pJoint);
                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1243:163: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetSkeletonJointOrientation)(XnModuleNodeHandle hGenerator, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointOrientation* pJoint);
                                                                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1244:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
          ^
/usr/include/ni/XnModuleInterface.h:1244:71: error: ‘XnUserID’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                       ^
/usr/include/ni/XnModuleInterface.h:1244:84: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1245:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsCalibrated)(XnModuleNodeHandle hGenerator, XnUserID user);
          ^
/usr/include/ni/XnModuleInterface.h:1245:73: error: ‘XnUserID’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsCalibrated)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                         ^
/usr/include/ni/XnModuleInterface.h:1245:86: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsCalibrated)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1246:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsCalibrating)(XnModuleNodeHandle hGenerator, XnUserID user);
          ^
/usr/include/ni/XnModuleInterface.h:1246:74: error: ‘XnUserID’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsCalibrating)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                          ^
/usr/include/ni/XnModuleInterface.h:1246:87: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsCalibrating)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1247:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RequestCalibration)(XnModuleNodeHandle hGenerator, XnUserID user, XnBool bForce);
            ^
/usr/include/ni/XnModuleInterface.h:1247:81: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RequestCalibration)(XnModuleNodeHandle hGenerator, XnUserID user, XnBool bForce);
                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1247:96: error: ‘XnBool’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RequestCalibration)(XnModuleNodeHandle hGenerator, XnUserID user, XnBool bForce);
                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1247:109: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RequestCalibration)(XnModuleNodeHandle hGenerator, XnUserID user, XnBool bForce);
                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1248:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* AbortCalibration)(XnModuleNodeHandle hGenerator, XnUserID user);
            ^
/usr/include/ni/XnModuleInterface.h:1248:79: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* AbortCalibration)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                               ^
/usr/include/ni/XnModuleInterface.h:1248:92: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* AbortCalibration)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                            ^
/usr/include/ni/XnModuleInterface.h:1249:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
            ^
/usr/include/ni/XnModuleInterface.h:1249:82: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1249:97: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1249:111: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
                                                                                                               ^
/usr/include/ni/XnModuleInterface.h:1250:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
            ^
/usr/include/ni/XnModuleInterface.h:1250:82: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1250:97: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1250:111: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationData)(XnModuleNodeHandle hGenerator, XnUserID user, XnUInt32 nSlot);
                                                                                                               ^
/usr/include/ni/XnModuleInterface.h:1251:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* ClearCalibrationData)(XnModuleNodeHandle hGenerator, XnUInt32 nSlot);
            ^
/usr/include/ni/XnModuleInterface.h:1251:83: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* ClearCalibrationData)(XnModuleNodeHandle hGenerator, XnUInt32 nSlot);
                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1251:97: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* ClearCalibrationData)(XnModuleNodeHandle hGenerator, XnUInt32 nSlot);
                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1252:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsCalibrationData)(XnModuleNodeHandle hGenerator, XnUInt32 nSlot);
          ^
/usr/include/ni/XnModuleInterface.h:1252:78: error: ‘XnUInt32’ has not been declared
  XnBool (XN_CALLBACK_TYPE* IsCalibrationData)(XnModuleNodeHandle hGenerator, XnUInt32 nSlot);
                                                                              ^
/usr/include/ni/XnModuleInterface.h:1252:92: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* IsCalibrationData)(XnModuleNodeHandle hGenerator, XnUInt32 nSlot);
                                                                                            ^
/usr/include/ni/XnModuleInterface.h:1253:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StartTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
            ^
/usr/include/ni/XnModuleInterface.h:1253:76: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StartTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                            ^
/usr/include/ni/XnModuleInterface.h:1253:89: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StartTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                         ^
/usr/include/ni/XnModuleInterface.h:1254:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
            ^
/usr/include/ni/XnModuleInterface.h:1254:75: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                           ^
/usr/include/ni/XnModuleInterface.h:1254:88: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StopTracking)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1255:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Reset)(XnModuleNodeHandle hGenerator, XnUserID user);
            ^
/usr/include/ni/XnModuleInterface.h:1255:68: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Reset)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                    ^
/usr/include/ni/XnModuleInterface.h:1255:81: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Reset)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1256:10: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnBool (XN_CALLBACK_TYPE* NeedPoseForCalibration)(XnModuleNodeHandle hGenerator);
          ^
/usr/include/ni/XnModuleInterface.h:1256:81: error: ‘XnBool’ declared as function returning a function
  XnBool (XN_CALLBACK_TYPE* NeedPoseForCalibration)(XnModuleNodeHandle hGenerator);
                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1257:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetCalibrationPose)(XnModuleNodeHandle hGenerator, XnChar* strPose);
            ^
/usr/include/ni/XnModuleInterface.h:1257:81: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetCalibrationPose)(XnModuleNodeHandle hGenerator, XnChar* strPose);
                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1257:96: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetCalibrationPose)(XnModuleNodeHandle hGenerator, XnChar* strPose);
                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1258:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetSmoothing)(XnModuleNodeHandle hGenerator, XnFloat fSmoothingFactor);
            ^
/usr/include/ni/XnModuleInterface.h:1258:75: error: ‘XnFloat’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetSmoothing)(XnModuleNodeHandle hGenerator, XnFloat fSmoothingFactor);
                                                                           ^
/usr/include/ni/XnModuleInterface.h:1258:99: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetSmoothing)(XnModuleNodeHandle hGenerator, XnFloat fSmoothingFactor);
                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1259:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterCalibrationCallbacks)(XnModuleNodeHandle hGenerator, XnModuleCalibrationStart CalibrationStartCB, XnModuleCalibrationEnd CalibrationEndCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1259:91: error: ‘XnModuleCalibrationStart’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterCalibrationCallbacks)(XnModuleNodeHandle hGenerator, XnModuleCalibrationStart CalibrationStartCB, XnModuleCalibrationEnd CalibrationEndCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                           ^
/usr/include/ni/XnModuleInterface.h:1259:136: error: ‘XnModuleCalibrationEnd’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterCalibrationCallbacks)(XnModuleNodeHandle hGenerator, XnModuleCalibrationStart CalibrationStartCB, XnModuleCalibrationEnd CalibrationEndCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1259:220: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterCalibrationCallbacks)(XnModuleNodeHandle hGenerator, XnModuleCalibrationStart CalibrationStartCB, XnModuleCalibrationEnd CalibrationEndCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                                            ^
/usr/include/ni/XnModuleInterface.h:1260:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterCalibrationCallbacks)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1262:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationDataToFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
            ^
/usr/include/ni/XnModuleInterface.h:1262:88: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationDataToFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1262:109: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationDataToFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1262:128: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SaveCalibrationDataToFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
                                                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1263:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationDataFromFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
            ^
/usr/include/ni/XnModuleInterface.h:1263:90: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationDataFromFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1263:111: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationDataFromFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
                                                                                                               ^
/usr/include/ni/XnModuleInterface.h:1263:130: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* LoadCalibrationDataFromFile)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strFileName);
                                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1265:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationInProgress)(XnModuleNodeHandle hGenerator, XnModuleCalibrationInProgress CalibrationInProgressCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1265:94: error: ‘XnModuleCalibrationInProgress’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationInProgress)(XnModuleNodeHandle hGenerator, XnModuleCalibrationInProgress CalibrationInProgressCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1265:192: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationInProgress)(XnModuleNodeHandle hGenerator, XnModuleCalibrationInProgress CalibrationInProgressCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1266:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromCalibrationInProgress)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1267:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationComplete)(XnModuleNodeHandle hGenerator, XnModuleCalibrationComplete CalibrationCompleteCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1267:92: error: ‘XnModuleCalibrationComplete’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationComplete)(XnModuleNodeHandle hGenerator, XnModuleCalibrationComplete CalibrationCompleteCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                            ^
/usr/include/ni/XnModuleInterface.h:1267:186: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationComplete)(XnModuleNodeHandle hGenerator, XnModuleCalibrationComplete CalibrationCompleteCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1268:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromCalibrationComplete)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1270:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationStart)(XnModuleNodeHandle hGenerator, XnModuleCalibrationStart handler, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1270:89: error: ‘XnModuleCalibrationStart’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationStart)(XnModuleNodeHandle hGenerator, XnModuleCalibrationStart handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                         ^
/usr/include/ni/XnModuleInterface.h:1270:166: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToCalibrationStart)(XnModuleNodeHandle hGenerator, XnModuleCalibrationStart handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1271:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromCalibrationStart)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1276:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* GetNumberOfPoses)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:1276:77: error: ‘XnUInt32’ declared as function returning a function
  XnUInt32 (XN_CALLBACK_TYPE* GetNumberOfPoses)(XnModuleNodeHandle hGenerator);
                                                                             ^
/usr/include/ni/XnModuleInterface.h:1277:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32* pnPoses);
            ^
/usr/include/ni/XnModuleInterface.h:1277:80: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32* pnPoses);
                                                                                ^
/usr/include/ni/XnModuleInterface.h:1277:100: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32* pnPoses);
                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1277:117: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32* pnPoses);
                                                                                                                     ^
/usr/include/ni/XnModuleInterface.h:1278:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StartPoseDetection)(XnModuleNodeHandle hGenerator, const XnChar* strPose, XnUserID user);
            ^
/usr/include/ni/XnModuleInterface.h:1278:87: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* StartPoseDetection)(XnModuleNodeHandle hGenerator, const XnChar* strPose, XnUserID user);
                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1278:104: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StartPoseDetection)(XnModuleNodeHandle hGenerator, const XnChar* strPose, XnUserID user);
                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1278:117: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StartPoseDetection)(XnModuleNodeHandle hGenerator, const XnChar* strPose, XnUserID user);
                                                                                                                     ^
/usr/include/ni/XnModuleInterface.h:1279:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopPoseDetection)(XnModuleNodeHandle hGenerator, XnUserID user);
            ^
/usr/include/ni/XnModuleInterface.h:1279:80: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopPoseDetection)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                ^
/usr/include/ni/XnModuleInterface.h:1279:93: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StopPoseDetection)(XnModuleNodeHandle hGenerator, XnUserID user);
                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1280:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseCallbacks)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback StartPoseCB, XnModulePoseDetectionCallback EndCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1280:86: error: ‘XnModulePoseDetectionCallback’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseCallbacks)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback StartPoseCB, XnModulePoseDetectionCallback EndCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1280:129: error: ‘XnModulePoseDetectionCallback’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseCallbacks)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback StartPoseCB, XnModulePoseDetectionCallback EndCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1280:209: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseCallbacks)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback StartPoseCB, XnModulePoseDetectionCallback EndCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1281:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromPoseCallbacks)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1283:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32 nNameLength, XnUInt32* pnPoses);
            ^
/usr/include/ni/XnModuleInterface.h:1283:83: error: ‘XnChar’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32 nNameLength, XnUInt32* pnPoses);
                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1283:103: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32 nNameLength, XnUInt32* pnPoses);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1283:125: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetAllAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32 nNameLength, XnUInt32* pnPoses);
                                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1283:142: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetAllAvailablePoses)(XnModuleNodeHandle hGenerator, XnChar** pstrPoses, XnUInt32 nNameLength, XnUInt32* pnPoses);
                                                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1285:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseDetectionInProgress)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionInProgressCallback PoseProgressCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1285:96: error: ‘XnModulePoseDetectionInProgressCallback’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseDetectionInProgress)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionInProgressCallback PoseProgressCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                ^
/usr/include/ni/XnModuleInterface.h:1285:195: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseDetectionInProgress)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionInProgressCallback PoseProgressCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1286:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromPoseDetectionInProgress)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1288:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseDetected)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1288:85: error: ‘XnModulePoseDetectionCallback’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseDetected)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                     ^
/usr/include/ni/XnModuleInterface.h:1288:167: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToPoseDetected)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1289:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromPoseDetected)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1290:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToOutOfPose)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1290:82: error: ‘XnModulePoseDetectionCallback’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToOutOfPose)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1290:164: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToOutOfPose)(XnModuleNodeHandle hGenerator, XnModulePoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1291:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromOutOfPose)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1293:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopSinglePoseDetection)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strPose);
            ^
/usr/include/ni/XnModuleInterface.h:1293:86: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* StopSinglePoseDetection)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strPose);
                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1293:107: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* StopSinglePoseDetection)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strPose);
                                                                                                           ^
/usr/include/ni/XnModuleInterface.h:1293:122: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* StopSinglePoseDetection)(XnModuleNodeHandle hGenerator, XnUserID user, const XnChar* strPose);
                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1301:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt16 (XN_CALLBACK_TYPE* GetNumberOfUsers)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:1301:77: error: ‘XnUInt16’ declared as function returning a function
  XnUInt16 (XN_CALLBACK_TYPE* GetNumberOfUsers)(XnModuleNodeHandle hGenerator);
                                                                             ^
/usr/include/ni/XnModuleInterface.h:1302:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetUsers)(XnModuleNodeHandle hGenerator, XnUserID* pUsers, XnUInt16* pnUsers);
            ^
/usr/include/ni/XnModuleInterface.h:1302:71: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetUsers)(XnModuleNodeHandle hGenerator, XnUserID* pUsers, XnUInt16* pnUsers);
                                                                       ^
/usr/include/ni/XnModuleInterface.h:1302:89: error: ‘XnUInt16’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetUsers)(XnModuleNodeHandle hGenerator, XnUserID* pUsers, XnUInt16* pnUsers);
                                                                                         ^
/usr/include/ni/XnModuleInterface.h:1302:106: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetUsers)(XnModuleNodeHandle hGenerator, XnUserID* pUsers, XnUInt16* pnUsers);
                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1303:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetCoM)(XnModuleNodeHandle hGenerator, XnUserID user, XnPoint3D* pCoM);
            ^
/usr/include/ni/XnModuleInterface.h:1303:69: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetCoM)(XnModuleNodeHandle hGenerator, XnUserID user, XnPoint3D* pCoM);
                                                                     ^
/usr/include/ni/XnModuleInterface.h:1303:99: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetCoM)(XnModuleNodeHandle hGenerator, XnUserID user, XnPoint3D* pCoM);
                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1304:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetUserPixels)(XnModuleNodeHandle hGenerator, XnUserID user, XnSceneMetaData* pScene);
            ^
/usr/include/ni/XnModuleInterface.h:1304:76: error: ‘XnUserID’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetUserPixels)(XnModuleNodeHandle hGenerator, XnUserID user, XnSceneMetaData* pScene);
                                                                            ^
/usr/include/ni/XnModuleInterface.h:1304:114: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetUserPixels)(XnModuleNodeHandle hGenerator, XnUserID user, XnSceneMetaData* pScene);
                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1305:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterUserCallbacks)(XnModuleNodeHandle hGenerator, XnModuleUserHandler NewUserCB, XnModuleUserHandler LostUserCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1305:84: error: ‘XnModuleUserHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterUserCallbacks)(XnModuleNodeHandle hGenerator, XnModuleUserHandler NewUserCB, XnModuleUserHandler LostUserCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1305:115: error: ‘XnModuleUserHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterUserCallbacks)(XnModuleNodeHandle hGenerator, XnModuleUserHandler NewUserCB, XnModuleUserHandler LostUserCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1305:190: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterUserCallbacks)(XnModuleNodeHandle hGenerator, XnModuleUserHandler NewUserCB, XnModuleUserHandler LostUserCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1306:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterUserCallbacks)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1317:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToUserExit)(XnModuleNodeHandle hGenerator, XnModuleUserHandler UserExitCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1317:81: error: ‘XnModuleUserHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToUserExit)(XnModuleNodeHandle hGenerator, XnModuleUserHandler UserExitCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1317:156: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToUserExit)(XnModuleNodeHandle hGenerator, XnModuleUserHandler UserExitCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                            ^
/usr/include/ni/XnModuleInterface.h:1318:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromUserExit)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1319:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToUserReEnter)(XnModuleNodeHandle hGenerator, XnModuleUserHandler UserReEnterCB, void* pCookie, XnCallbackHandle* phCallback);
            ^
/usr/include/ni/XnModuleInterface.h:1319:84: error: ‘XnModuleUserHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToUserReEnter)(XnModuleNodeHandle hGenerator, XnModuleUserHandler UserReEnterCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1319:162: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* RegisterToUserReEnter)(XnModuleNodeHandle hGenerator, XnModuleUserHandler UserReEnterCB, void* pCookie, XnCallbackHandle* phCallback);
                                                                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1320:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromUserReEnter)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1329:2: error: ‘XnUChar’ does not name a type
  XnUChar* (XN_CALLBACK_TYPE* GetAudioBuffer)(XnModuleNodeHandle hGenerator);
  ^
/usr/include/ni/XnModuleInterface.h:1330:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnUInt32 (XN_CALLBACK_TYPE* GetSupportedWaveOutputModesCount)(XnModuleNodeHandle hGenerator);
            ^
/usr/include/ni/XnModuleInterface.h:1330:93: error: ‘XnUInt32’ declared as function returning a function
  XnUInt32 (XN_CALLBACK_TYPE* GetSupportedWaveOutputModesCount)(XnModuleNodeHandle hGenerator);
                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1331:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSupportedWaveOutputModes)(XnModuleNodeHandle hGenerator, XnWaveOutputMode* aSupportedModes, XnUInt32* pnCount);
            ^
/usr/include/ni/XnModuleInterface.h:1331:125: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetSupportedWaveOutputModes)(XnModuleNodeHandle hGenerator, XnWaveOutputMode* aSupportedModes, XnUInt32* pnCount);
                                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1331:142: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetSupportedWaveOutputModes)(XnModuleNodeHandle hGenerator, XnWaveOutputMode* aSupportedModes, XnUInt32* pnCount);
                                                                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1332:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* SetWaveOutputMode)(XnModuleNodeHandle hGenerator, const XnWaveOutputMode* OutputMode);
            ^
/usr/include/ni/XnModuleInterface.h:1332:114: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* SetWaveOutputMode)(XnModuleNodeHandle hGenerator, const XnWaveOutputMode* OutputMode);
                                                                                                                  ^
/usr/include/ni/XnModuleInterface.h:1333:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* GetWaveOutputMode)(XnModuleNodeHandle hGenerator, XnWaveOutputMode* OutputMode);
            ^
/usr/include/ni/XnModuleInterface.h:1333:108: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* GetWaveOutputMode)(XnModuleNodeHandle hGenerator, XnWaveOutputMode* OutputMode);
                                                                                                            ^
/usr/include/ni/XnModuleInterface.h:1334:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToWaveOutputModeChanges)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
            ^
/usr/include/ni/XnModuleInterface.h:1334:94: error: ‘XnModuleStateChangedHandler’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* RegisterToWaveOutputModeChanges)(XnModuleNodeHandle hGenerator, XnModuleStateChangedHandler handler,
                                                                                              ^
/usr/include/ni/XnModuleInterface.h:1335:46: error: ‘XnStatus’ declared as function returning a function
   void* pCookie, XnCallbackHandle* phCallback);
                                              ^
/usr/include/ni/XnModuleInterface.h:1336:24: error: expected ‘)’ before ‘*’ token
  void (XN_CALLBACK_TYPE* UnregisterFromWaveOutputModeChanges)(XnModuleNodeHandle hGenerator, XnCallbackHandle hCallback);
                        ^
/usr/include/ni/XnModuleInterface.h:1344:13: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnCodecID (XN_CALLBACK_TYPE* GetCodecID)(XnModuleNodeHandle hCodec);
             ^
/usr/include/ni/XnModuleInterface.h:1344:68: error: ‘XnCodecID’ declared as function returning a function
  XnCodecID (XN_CALLBACK_TYPE* GetCodecID)(XnModuleNodeHandle hCodec);
                                                                    ^
/usr/include/ni/XnModuleInterface.h:1345:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Init)(XnModuleNodeHandle hCodec, XnNodeHandle hNode);
            ^
/usr/include/ni/XnModuleInterface.h:1345:81: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Init)(XnModuleNodeHandle hCodec, XnNodeHandle hNode);
                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1346:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* CompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
            ^
/usr/include/ni/XnModuleInterface.h:1346:89: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* CompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                         ^
/usr/include/ni/XnModuleInterface.h:1346:120: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* CompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                                                        ^
/usr/include/ni/XnModuleInterface.h:1346:139: error: ‘XnUInt’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* CompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                                                                           ^
/usr/include/ni/XnModuleInterface.h:1346:161: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* CompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                                                                                                 ^
/usr/include/ni/XnModuleInterface.h:1347:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* DecompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
            ^
/usr/include/ni/XnModuleInterface.h:1347:91: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* DecompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                           ^
/usr/include/ni/XnModuleInterface.h:1347:122: error: ‘XnUInt32’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* DecompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                                                          ^
/usr/include/ni/XnModuleInterface.h:1347:141: error: ‘XnUInt’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* DecompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                                                                             ^
/usr/include/ni/XnModuleInterface.h:1347:163: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* DecompressData)(XnModuleNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten);
                                                                                                                                                                   ^
/usr/include/ni/XnModuleInterface.h:1355:8: error: ‘XnChar’ does not name a type
  const XnChar* (XN_CALLBACK_TYPE* GetSupportedFormat)(XnModuleNodeHandle hScript);
        ^
/usr/include/ni/XnModuleInterface.h:1356:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* LoadScriptFromFile)(XnModuleNodeHandle hScript, const XnChar* strFileName);
            ^
/usr/include/ni/XnModuleInterface.h:1356:84: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* LoadScriptFromFile)(XnModuleNodeHandle hScript, const XnChar* strFileName);
                                                                                    ^
/usr/include/ni/XnModuleInterface.h:1356:103: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* LoadScriptFromFile)(XnModuleNodeHandle hScript, const XnChar* strFileName);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1357:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* LoadScriptFromString)(XnModuleNodeHandle hScript, const XnChar* strScript);
            ^
/usr/include/ni/XnModuleInterface.h:1357:86: error: ‘XnChar’ does not name a type
  XnStatus (XN_CALLBACK_TYPE* LoadScriptFromString)(XnModuleNodeHandle hScript, const XnChar* strScript);
                                                                                      ^
/usr/include/ni/XnModuleInterface.h:1357:103: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* LoadScriptFromString)(XnModuleNodeHandle hScript, const XnChar* strScript);
                                                                                                       ^
/usr/include/ni/XnModuleInterface.h:1358:12: error: ‘XN_CALLBACK_TYPE’ has not been declared
  XnStatus (XN_CALLBACK_TYPE* Run)(XnModuleNodeHandle hScript, XnNodeInfoList* pCreatedNodes, XnEnumerationErrors* pErrors);
            ^
/usr/include/ni/XnModuleInterface.h:1358:122: error: ‘XnStatus’ declared as function returning a function
  XnStatus (XN_CALLBACK_TYPE* Run)(XnModuleNodeHandle hScript, XnNodeInfoList* pCreatedNodes, XnEnumerationErrors* pErrors);
                                                                                                                          ^
In file included from /usr/include/ni/XnOS.h:27:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnUtils.h:51:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetVersion(XnVersion* pVersion);
 ^
/usr/include/ni/XnUtils.h:65:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnProductionNodeTypeToString(XnProductionNodeType Type);
 ^
/usr/include/ni/XnUtils.h:73:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnProductionNodeTypeFromString(const XnChar* strType, XnProductionNodeType* pType);
 ^
/usr/include/ni/XnUtils.h:80:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsTypeGenerator(XnProductionNodeType type);
 ^
/usr/include/ni/XnUtils.h:88:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsTypeDerivedFrom(XnProductionNodeType type, XnProductionNodeType base);
 ^
/usr/include/ni/XnUtils.h:102:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnPixelFormatToString(XnPixelFormat format);
 ^
/usr/include/ni/XnUtils.h:110:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnPixelFormatFromString(const XnChar* strName, XnPixelFormat* pFormat);
 ^
/usr/include/ni/XnUtils.h:117:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetBytesPerPixelForPixelFormat(XnPixelFormat format);
 ^
/usr/include/ni/XnUtils.h:131:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnResolutionGetXRes(XnResolution resolution);
 ^
/usr/include/ni/XnUtils.h:138:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnResolutionGetYRes(XnResolution resolution);
 ^
/usr/include/ni/XnUtils.h:146:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnResolution XN_C_DECL xnResolutionGetFromXYRes(XnUInt32 xRes, XnUInt32 yRes);
 ^
/usr/include/ni/XnUtils.h:153:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnResolution XN_C_DECL xnResolutionGetFromName(const XnChar* strName);
 ^
/usr/include/ni/XnUtils.h:160:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnResolutionGetName(XnResolution resolution);
 ^
/usr/include/ni/XnUtils.h:177:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnInt32 XN_C_DECL xnVersionCompare(const XnVersion* pVersion1, const XnVersion* pVersion2);
 ^
/usr/include/ni/XnUtils.h:179:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnVersionToString(const XnVersion* pVersion, XnChar* csResult, XnUInt32 nSize);
 ^
/usr/include/ni/XnUtils.h:188:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnProductionNodeDescriptionToString(const XnProductionNodeDescription* pDescription, XnChar* csResult, XnUInt32 nSize);
 ^
/usr/include/ni/XnUtils.h:197:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnPoint3D XN_C_DECL xnCreatePoint3D(XnFloat x, XnFloat y, XnFloat z);
 ^
/usr/include/ni/XnUtils.h:198:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnPlane3D XN_C_DECL xnCreatePlane3D(XnPoint3D ptPoint, XnVector3D vNormal);
 ^
/usr/include/ni/XnUtils.h:207:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterModule(const XnChar* strModule, const XnChar* strConfigDir);
 ^
/usr/include/ni/XnUtils.h:208:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnUnregisterModule(const XnChar* strModule);
 ^
/usr/include/ni/XnUtils.h:209:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnPrintRegisteredModules();
 ^
/usr/include/ni/XnUtils.h:218:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterGlobalLicense(XnLicense* pLicense);
 ^
/usr/include/ni/XnUtils.h:219:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnUnregisterGlobalLicense(XnLicense* pLicense);
 ^
/usr/include/ni/XnUtils.h:220:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnPrintRegisteredLicenses();
 ^
/usr/include/ni/XnUtils.h:234:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnOutputMetaData* XN_C_DECL xnAllocateOutputMetaData();
 ^
/usr/include/ni/XnUtils.h:240:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeOutputMetaData(const XnOutputMetaData* pMetaData);
 ^
/usr/include/ni/XnUtils.h:247:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCopyOutputMetaData(XnOutputMetaData* pDestination, const XnOutputMetaData* pSource);
 ^
/usr/include/ni/XnUtils.h:254:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnMapMetaData* XN_C_DECL xnAllocateMapMetaData();
 ^
/usr/include/ni/XnUtils.h:260:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeMapMetaData(const XnMapMetaData* pMetaData);
 ^
/usr/include/ni/XnUtils.h:267:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCopyMapMetaData(XnMapMetaData* pDestination, const XnMapMetaData* pSource);
 ^
/usr/include/ni/XnUtils.h:274:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnDepthMetaData* XN_C_DECL xnAllocateDepthMetaData();
 ^
/usr/include/ni/XnUtils.h:280:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeDepthMetaData(const XnDepthMetaData* pMetaData);
 ^
/usr/include/ni/XnUtils.h:288:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCopyDepthMetaData(XnDepthMetaData* pDestination, const XnDepthMetaData* pSource);
 ^
/usr/include/ni/XnUtils.h:295:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnImageMetaData* XN_C_DECL xnAllocateImageMetaData();
 ^
/usr/include/ni/XnUtils.h:301:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeImageMetaData(const XnImageMetaData* pMetaData);
 ^
/usr/include/ni/XnUtils.h:309:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCopyImageMetaData(XnImageMetaData* pDestination, const XnImageMetaData* pSource);
 ^
/usr/include/ni/XnUtils.h:316:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnIRMetaData* XN_C_DECL xnAllocateIRMetaData();
 ^
/usr/include/ni/XnUtils.h:322:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeIRMetaData(const XnIRMetaData* pMetaData);
 ^
/usr/include/ni/XnUtils.h:330:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCopyIRMetaData(XnIRMetaData* pDestination, const XnIRMetaData* pSource);
 ^
/usr/include/ni/XnUtils.h:337:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnAudioMetaData* XN_C_DECL xnAllocateAudioMetaData();
 ^
/usr/include/ni/XnUtils.h:343:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeAudioMetaData(const XnAudioMetaData* pMetaData);
 ^
/usr/include/ni/XnUtils.h:351:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCopyAudioMetaData(XnAudioMetaData* pDestination, const XnAudioMetaData* pSource);
 ^
/usr/include/ni/XnUtils.h:358:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnSceneMetaData* XN_C_DECL xnAllocateSceneMetaData();
 ^
/usr/include/ni/XnUtils.h:364:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnFreeSceneMetaData(const XnSceneMetaData* pMetaData);
 ^
/usr/include/ni/XnUtils.h:372:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCopySceneMetaData(XnSceneMetaData* pDestination, const XnSceneMetaData* pSource);
 ^
/usr/include/ni/XnUtils.h:393:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnAutoEnumerateOverSingleInput(XnContext* pContext, XnNodeInfoList* pList, XnProductionNodeDescription* pDescription, const XnChar* strCreationInfo, XnProductionNodeType InputType, XnEnumerationErrors* pErrors, XnNodeQuery* pQuery);
 ^
/usr/include/ni/XnUtils.h:402:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterExtensionNode(const XnChar* strTypeName, XnProductionNodeType baseType, XnProductionNodeType* pTypeID);
 ^
/usr/include/ni/XnUtils.h:409:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnModuleNodeHandle XN_C_DECL xnGetModuleNodeHandle(XnNodeHandle hNode);
 ^
/usr/include/ni/XnUtils.h:419:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterModuleWithOpenNI(XnOpenNIModuleInterface* pInterface, const XnChar* strConfigDir, const XnChar* strName);
 ^
/usr/include/ni/XnPrdNodeInfo.h:51:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoAllocate(const XnProductionNodeDescription* pDescription, const XnChar* strCreationInfo, XnNodeInfoList* pNeededNodes, XnNodeInfo** ppNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:58:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnNodeInfoFree(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:67:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoSetInstanceName(XnNodeInfo* pNodeInfo, const XnChar* strInstanceName);
 ^
/usr/include/ni/XnPrdNodeInfo.h:74:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnProductionNodeDescription* XN_C_DECL xnNodeInfoGetDescription(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:83:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnNodeInfoGetTreeStringRepresentation(XnNodeInfo* pNodeInfo, XnChar* csResult, XnUInt32 nSize);
 ^
/usr/include/ni/XnPrdNodeInfo.h:90:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnNodeInfoGetInstanceName(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:97:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnNodeInfoGetCreationInfo(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:104:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeInfoList* XN_C_DECL xnNodeInfoGetNeededNodes(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:112:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeHandle XN_C_DECL xnNodeInfoGetRefHandle(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:114:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeHandle XN_API_DEPRECATED("Please use xnNodeInfoGetRefHandle() instead") XN_C_DECL xnNodeInfoGetHandle(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNodeInfo.h:121:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const void* XN_C_DECL xnNodeInfoGetAdditionalData(XnNodeInfo* pNodeInfo);
 ^
/usr/include/ni/XnPrdNode.h:53:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnNodeInfo* XN_C_DECL xnGetNodeInfo(XnNodeHandle hNode);
 ^
/usr/include/ni/XnPrdNode.h:60:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnGetNodeName(XnNodeHandle hNode);
 ^
/usr/include/ni/XnPrdNode.h:68:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnContext* XN_C_DECL xnGetRefContextFromNodeHandle(XnNodeHandle hNode);
 ^
/usr/include/ni/XnPrdNode.h:71:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnContextPtr XN_API_DEPRECATED("Please use xnGetRefContextFromNodeHandle() instead") XN_C_DECL xnGetContextFromNodeHandle(XnNodeHandle hNode);
 ^
/usr/include/ni/XnPrdNode.h:79:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsCapabilitySupported(XnNodeHandle hInstance, const XnChar* strCapabilityName);
 ^
/usr/include/ni/XnPrdNode.h:88:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetIntProperty(XnNodeHandle hInstance, const XnChar* strName, XnUInt64 nValue);
 ^
/usr/include/ni/XnPrdNode.h:96:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetRealProperty(XnNodeHandle hInstance, const XnChar* strName, XnDouble dValue);
 ^
/usr/include/ni/XnPrdNode.h:104:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetStringProperty(XnNodeHandle hInstance, const XnChar* strName, const XnChar* strValue);
 ^
/usr/include/ni/XnPrdNode.h:113:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetGeneralProperty(XnNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, const void* pBuffer);
 ^
/usr/include/ni/XnPrdNode.h:122:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetIntProperty(XnNodeHandle hInstance, const XnChar* strName, XnUInt64* pnValue);
 ^
/usr/include/ni/XnPrdNode.h:130:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetRealProperty(XnNodeHandle hInstance, const XnChar* strName, XnDouble* pdValue);
 ^
/usr/include/ni/XnPrdNode.h:139:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetStringProperty(XnNodeHandle hInstance, const XnChar* strName, XnChar* csValue, XnUInt32 nBufSize);
 ^
/usr/include/ni/XnPrdNode.h:148:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetGeneralProperty(XnNodeHandle hInstance, const XnChar* strName, XnUInt32 nBufferSize, void* pBuffer);
 ^
/usr/include/ni/XnPrdNode.h:156:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnLockNodeForChanges(XnNodeHandle hInstance, XnLockHandle* phLock);
 ^
/usr/include/ni/XnPrdNode.h:164:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnUnlockNodeForChanges(XnNodeHandle hInstance, XnLockHandle hLock);
 ^
/usr/include/ni/XnPrdNode.h:175:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnLockedNodeStartChanges(XnNodeHandle hInstance, XnLockHandle hLock);
 ^
/usr/include/ni/XnPrdNode.h:183:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnLockedNodeEndChanges(XnNodeHandle hInstance, XnLockHandle hLock);
 ^
/usr/include/ni/XnPrdNode.h:191:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnAddNeededNode(XnNodeHandle hInstance, XnNodeHandle hNeededNode);
 ^
/usr/include/ni/XnPrdNode.h:202:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRemoveNeededNode(XnNodeHandle hInstance, XnNodeHandle hNeededNode);
 ^
/usr/include/ni/XnPrdNode.h:227:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateDevice(XnContext* pContext, XnNodeHandle* phDevice, XnNodeQuery* pQuery, XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnPrdNode.h:255:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetDeviceName(XnNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
 ^
/usr/include/ni/XnPrdNode.h:268:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetVendorSpecificData(XnNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
 ^
/usr/include/ni/XnPrdNode.h:281:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetSerialNumber(XnNodeHandle hInstance, XnChar* strBuffer, XnUInt32* pnBufferSize);
 ^
/usr/include/ni/XnPrdNode.h:310:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetNodeErrorState(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:320:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToNodeErrorStateChange
 ^
/usr/include/ni/XnPrdNode.h:330:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromNodeErrorStateChange
 ^
/usr/include/ni/XnPrdNode.h:380:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetGeneralIntRange(XnNodeHandle hNode, const XnChar* strCap, XnInt32* pnMin, XnInt32* pnMax, XnInt32* pnStep, XnInt32* pnDefault, XnBool* pbIsAutoSupported);
 ^
/usr/include/ni/XnPrdNode.h:389:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetGeneralIntValue(XnNodeHandle hNode, const XnChar* strCap, XnInt32* pnValue);
 ^
/usr/include/ni/XnPrdNode.h:398:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetGeneralIntValue(XnNodeHandle hNode, const XnChar* strCap, XnInt32 nValue);
 ^
/usr/include/ni/XnPrdNode.h:409:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToGeneralIntValueChange
 ^
/usr/include/ni/XnPrdNode.h:420:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromGeneralIntValueChange
 ^
/usr/include/ni/XnPrdNode.h:451:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStartGenerating(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:460:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsGenerating(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:469:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopGenerating(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:479:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToGenerationRunningChange
 ^
/usr/include/ni/XnPrdNode.h:489:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromGenerationRunningChange
 ^
/usr/include/ni/XnPrdNode.h:510:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToNewDataAvailable
 ^
/usr/include/ni/XnPrdNode.h:520:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromNewDataAvailable
 ^
/usr/include/ni/XnPrdNode.h:529:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsNewDataAvailable(XnNodeHandle hInstance, XnUInt64* pnTimestamp);
 ^
/usr/include/ni/XnPrdNode.h:545:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnWaitAndUpdateData(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:560:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsDataNew(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:569:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const void* XN_C_DECL xnGetData(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:578:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetDataSize(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:587:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt64 XN_C_DECL xnGetTimestamp(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:596:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetFrameID(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:621:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetMirror(XnNodeHandle hInstance, XnBool bMirror);
 ^
/usr/include/ni/XnPrdNode.h:628:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsMirrored(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:638:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToMirrorChange
 ^
/usr/include/ni/XnPrdNode.h:648:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromMirrorChange
 ^
/usr/include/ni/XnPrdNode.h:677:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsViewPointSupported(XnNodeHandle hInstance, XnNodeHandle hOther);
 ^
/usr/include/ni/XnPrdNode.h:685:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetViewPoint(XnNodeHandle hInstance, XnNodeHandle hOther);
 ^
/usr/include/ni/XnPrdNode.h:692:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnResetViewPoint(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:700:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsViewPointAs(XnNodeHandle hInstance, XnNodeHandle hOther);
 ^
/usr/include/ni/XnPrdNode.h:710:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToViewPointChange(XnNodeHandle hInstance, XnStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:718:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromViewPointChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:732:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetPixelCoordinatesInViewPoint(XnNodeHandle hInstance, XnNodeHandle hOther, XnUInt32 x, XnUInt32 y, XnUInt32* pAltX, XnUInt32* pAltY);
 ^
/usr/include/ni/XnPrdNode.h:757:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnCanFrameSyncWith(XnNodeHandle hInstance, XnNodeHandle hOther);
 ^
/usr/include/ni/XnPrdNode.h:765:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnFrameSyncWith(XnNodeHandle hInstance, XnNodeHandle hOther);
 ^
/usr/include/ni/XnPrdNode.h:773:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopFrameSyncWith(XnNodeHandle hInstance, XnNodeHandle hOther);
 ^
/usr/include/ni/XnPrdNode.h:781:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsFrameSyncedWith(XnNodeHandle hInstance, XnNodeHandle hOther);
 ^
/usr/include/ni/XnPrdNode.h:791:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToFrameSyncChange(XnNodeHandle hInstance, XnStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:799:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromFrameSyncChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:822:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetSupportedMapOutputModesCount(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:834:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetSupportedMapOutputModes(XnNodeHandle hInstance, XnMapOutputMode* aModes, XnUInt32* pnCount);
 ^
/usr/include/ni/XnPrdNode.h:844:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetMapOutputMode(XnNodeHandle hInstance, const XnMapOutputMode* pOutputMode);
 ^
/usr/include/ni/XnPrdNode.h:854:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetMapOutputMode(XnNodeHandle hInstance, XnMapOutputMode* pOutputMode);
 ^
/usr/include/ni/XnPrdNode.h:866:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToMapOutputModeChange(XnNodeHandle hInstance, XnStateChangedHandler handler,
 ^
/usr/include/ni/XnPrdNode.h:875:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromMapOutputModeChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:884:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetBytesPerPixel(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:913:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetCropping(XnNodeHandle hInstance, const XnCropping* pCropping);
 ^
/usr/include/ni/XnPrdNode.h:923:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetCropping(XnNodeHandle hInstance, XnCropping* pCropping);
 ^
/usr/include/ni/XnPrdNode.h:933:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToCroppingChange(XnNodeHandle hInstance, XnStateChangedHandler handler,
 ^
/usr/include/ni/XnPrdNode.h:942:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromCroppingChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:964:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetPowerLineFrequency(XnNodeHandle hGenerator, XnPowerLineFrequency nFrequency);
 ^
/usr/include/ni/XnPrdNode.h:972:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnPowerLineFrequency XN_C_DECL xnGetPowerLineFrequency(XnNodeHandle hGenerator);
 ^
/usr/include/ni/XnPrdNode.h:982:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToPowerLineFrequencyChange
 ^
/usr/include/ni/XnPrdNode.h:992:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromPowerLineFrequencyChange
 ^
/usr/include/ni/XnPrdNode.h:1017:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateDepthGenerator(
 ^
/usr/include/ni/XnPrdNode.h:1030:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnDepthPixel XN_C_DECL xnGetDeviceMaxDepth(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1040:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetDepthFieldOfView(XnNodeHandle hInstance, XnFieldOfView* pFOV);
 ^
/usr/include/ni/XnPrdNode.h:1052:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToDepthFieldOfViewChange(XnNodeHandle hInstance, XnStateChangedHandler handler,
 ^
/usr/include/ni/XnPrdNode.h:1061:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromDepthFieldOfViewChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1073:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnConvertProjectiveToRealWorld(
 ^
/usr/include/ni/XnPrdNode.h:1086:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnConvertRealWorldToProjective(
 ^
/usr/include/ni/XnPrdNode.h:1096:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnDepthPixel* XN_C_DECL xnGetDepthMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1104:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnGetDepthMetaData(XnNodeHandle hInstance, XnDepthMetaData* pMetaData);
 ^
/usr/include/ni/XnPrdNode.h:1127:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetSupportedUserPositionsCount(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1138:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetUserPosition(XnNodeHandle hInstance, XnUInt32 nIndex, const XnBoundingBox3D* pPosition);
 ^
/usr/include/ni/XnPrdNode.h:1149:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetUserPosition(XnNodeHandle hInstance, XnUInt32 nIndex, XnBoundingBox3D* pPosition);
 ^
/usr/include/ni/XnPrdNode.h:1161:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToUserPositionChange(XnNodeHandle hInstance, XnStateChangedHandler handler,
 ^
/usr/include/ni/XnPrdNode.h:1170:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromUserPositionChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1195:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateImageGenerator(
 ^
/usr/include/ni/XnPrdNode.h:1210:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnRGB24Pixel* XN_C_DECL xnGetRGB24ImageMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1220:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnYUV422DoublePixel* XN_C_DECL xnGetYUV422ImageMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1230:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnGrayscale8Pixel* XN_C_DECL xnGetGrayscale8ImageMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1240:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnGrayscale16Pixel* XN_C_DECL xnGetGrayscale16ImageMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1254:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt8* XN_C_DECL xnGetImageMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1262:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsPixelFormatSupported(XnNodeHandle hInstance, XnPixelFormat Format);
 ^
/usr/include/ni/XnPrdNode.h:1272:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetPixelFormat(XnNodeHandle hInstance, XnPixelFormat Format);
 ^
/usr/include/ni/XnPrdNode.h:1281:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnPixelFormat XN_C_DECL xnGetPixelFormat(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1293:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToPixelFormatChange(XnNodeHandle hInstance, XnStateChangedHandler handler,
 ^
/usr/include/ni/XnPrdNode.h:1302:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromPixelFormatChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1310:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnGetImageMetaData(XnNodeHandle hInstance, XnImageMetaData* pMetaData);
 ^
/usr/include/ni/XnPrdNode.h:1334:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateIRGenerator(
 ^
/usr/include/ni/XnPrdNode.h:1348:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnIRPixel* XN_C_DECL xnGetIRMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1356:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnGetIRMetaData(XnNodeHandle hInstance, XnIRMetaData* pMetaData);
 ^
/usr/include/ni/XnPrdNode.h:1380:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateGestureGenerator(
 ^
/usr/include/ni/XnPrdNode.h:1394:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnAddGesture(XnNodeHandle hInstance, const XnChar* strGesture, XnBoundingBox3D* pArea);
 ^
/usr/include/ni/XnPrdNode.h:1401:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRemoveGesture(XnNodeHandle hInstance, const XnChar* strGesture);
 ^
/usr/include/ni/XnPrdNode.h:1409:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetActiveGestures(XnNodeHandle hInstance, XnChar** pstrGestures, XnUInt16* nGestures);
 ^
/usr/include/ni/XnPrdNode.h:1418:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetAllActiveGestures(XnNodeHandle hInstance, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
 ^
/usr/include/ni/XnPrdNode.h:1426:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerateGestures(XnNodeHandle hInstance, XnChar** pstrGestures, XnUInt16* nGestures);
 ^
/usr/include/ni/XnPrdNode.h:1435:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerateAllGestures(XnNodeHandle hInstance, XnChar** pstrGestures, XnUInt32 nNameLength, XnUInt16* nGestures);
 ^
/usr/include/ni/XnPrdNode.h:1443:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt16 XN_C_DECL xnGetNumberOfAvailableGestures(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1452:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsGestureAvailable(XnNodeHandle hInstance, const XnChar* strGesture);
 ^
/usr/include/ni/XnPrdNode.h:1459:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsGestureProgressSupported(XnNodeHandle hInstance, const XnChar* strGesture);
 ^
/usr/include/ni/XnPrdNode.h:1469:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterGestureCallbacks(XnNodeHandle hInstance, XnGestureRecognized RecognizedCB, XnGestureProgress ProgressCB, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1476:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterGestureCallbacks(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1485:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToGestureChange(XnNodeHandle hInstance, XnStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1492:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromGestureChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1502:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToGestureIntermediateStageCompleted(XnNodeHandle hInstance, XnGestureIntermediateStageCompleted handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1509:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromGestureIntermediateStageCompleted(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1518:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToGestureReadyForNextIntermediateStage(XnNodeHandle hInstance, XnGestureReadyForNextIntermediateStage handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1525:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromGestureReadyForNextIntermediateStage(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1548:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateSceneAnalyzer(
 ^
/usr/include/ni/XnPrdNode.h:1560:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnLabel* XN_C_DECL xnGetLabelMap(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1567:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetFloor(XnNodeHandle hInstance, XnPlane3D* pPlane);
 ^
/usr/include/ni/XnPrdNode.h:1575:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnGetSceneMetaData(XnNodeHandle hInstance, XnSceneMetaData* pMetaData);
 ^
/usr/include/ni/XnPrdNode.h:1599:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateUserGenerator(
 ^
/usr/include/ni/XnPrdNode.h:1611:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt16 XN_C_DECL xnGetNumberOfUsers(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1619:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetUsers(XnNodeHandle hInstance, XnUserID* pUsers, XnUInt16* pnUsers);
 ^
/usr/include/ni/XnPrdNode.h:1627:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetUserCoM(XnNodeHandle hInstance, XnUserID user, XnPoint3D* pCoM);
 ^
/usr/include/ni/XnPrdNode.h:1640:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetUserPixels(XnNodeHandle hInstance, XnUserID user, XnSceneMetaData* pScene);
 ^
/usr/include/ni/XnPrdNode.h:1650:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterUserCallbacks(XnNodeHandle hInstance, XnUserHandler NewUserCB, XnUserHandler LostUserCB, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1657:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterUserCallbacks(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1667:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToUserExit(XnNodeHandle hInstance, XnUserHandler handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1674:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromUserExit(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1683:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToUserReEnter(XnNodeHandle hInstance, XnUserHandler handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1690:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromUserReEnter(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1711:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsJointAvailable(XnNodeHandle hInstance, XnSkeletonJoint eJoint);
 ^
/usr/include/ni/XnPrdNode.h:1718:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsProfileAvailable(XnNodeHandle hInstance, XnSkeletonProfile eProfile);
 ^
/usr/include/ni/XnPrdNode.h:1725:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetSkeletonProfile(XnNodeHandle hInstance, XnSkeletonProfile eProfile);
 ^
/usr/include/ni/XnPrdNode.h:1733:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetJointActive(XnNodeHandle hInstance, XnSkeletonJoint eJoint, XnBool bState);
 ^
/usr/include/ni/XnPrdNode.h:1740:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsJointActive(XnNodeHandle hInstance, XnSkeletonJoint eJoint);
 ^
/usr/include/ni/XnPrdNode.h:1749:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToJointConfigurationChange(XnNodeHandle hInstance, XnStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1756:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromJointConfigurationChange(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1764:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerateActiveJoints(XnNodeHandle hInstance, XnSkeletonJoint* pJoints, XnUInt16* pnJoints);
 ^
/usr/include/ni/XnPrdNode.h:1773:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetSkeletonJoint(XnNodeHandle hInstance, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointTransformation* pJoint);
 ^
/usr/include/ni/XnPrdNode.h:1782:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetSkeletonJointPosition(XnNodeHandle hInstance, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointPosition* pJoint);
 ^
/usr/include/ni/XnPrdNode.h:1791:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetSkeletonJointOrientation(XnNodeHandle hInstance, XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointOrientation* pJoint);
 ^
/usr/include/ni/XnPrdNode.h:1798:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsSkeletonTracking(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:1805:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsSkeletonCalibrated(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:1812:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsSkeletonCalibrating(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:1820:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRequestSkeletonCalibration(XnNodeHandle hInstance, XnUserID user, XnBool bForce);
 ^
/usr/include/ni/XnPrdNode.h:1827:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnAbortSkeletonCalibration(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:1835:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSaveSkeletonCalibrationDataToFile(XnNodeHandle hInstance, XnUserID user, const XnChar* strFileName);
 ^
/usr/include/ni/XnPrdNode.h:1843:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnLoadSkeletonCalibrationDataFromFile(XnNodeHandle hInstance, XnUserID user, const XnChar* strFileName);
 ^
/usr/include/ni/XnPrdNode.h:1851:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSaveSkeletonCalibrationData(XnNodeHandle hInstance, XnUserID user, XnUInt32 nSlot);
 ^
/usr/include/ni/XnPrdNode.h:1859:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnLoadSkeletonCalibrationData(XnNodeHandle hInstance, XnUserID user, XnUInt32 nSlot);
 ^
/usr/include/ni/XnPrdNode.h:1866:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnClearSkeletonCalibrationData(XnNodeHandle hInstance, XnUInt32 nSlot);
 ^
/usr/include/ni/XnPrdNode.h:1873:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsSkeletonCalibrationData(XnNodeHandle hInstance, XnUInt32 nSlot);
 ^
/usr/include/ni/XnPrdNode.h:1880:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStartSkeletonTracking(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:1887:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopSkeletonTracking(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:1894:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnResetSkeleton(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:1900:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnNeedPoseForSkeletonCalibration(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:1907:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetSkeletonCalibrationPose(XnNodeHandle hInstance, XnChar* strPose);
 ^
/usr/include/ni/XnPrdNode.h:1914:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetSkeletonSmoothing(XnNodeHandle hInstance, XnFloat fFactor);
 ^
/usr/include/ni/XnPrdNode.h:1924:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use RegisterToCalibrationStart/Complete") XN_C_DECL xnRegisterCalibrationCallbacks(XnNodeHandle hInstance, XnCalibrationStart CalibrationStartCB, XnCalibrationEnd CalibrationEndCB, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1931:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_API_DEPRECATED("Please use UnregisterFromCalibrationStart/Complete") XN_C_DECL xnUnregisterCalibrationCallbacks(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1940:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToCalibrationStart(XnNodeHandle hInstance, XnCalibrationStart handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1947:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromCalibrationStart(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1957:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToCalibrationInProgress(XnNodeHandle hInstance, XnCalibrationInProgress handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1964:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromCalibrationInProgress(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:1973:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToCalibrationComplete(XnNodeHandle hInstance, XnCalibrationComplete handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:1980:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromCalibrationComplete(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2000:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetNumberOfPoses(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:2008:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetAvailablePoses(XnNodeHandle hInstance, XnChar** pstrPoses, XnUInt32* pnPoses);
 ^
/usr/include/ni/XnPrdNode.h:2017:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetAllAvailablePoses(XnNodeHandle hInstance, XnChar** pstrPoses, XnUInt32 nNameLength, XnUInt32* pnPoses);
 ^
/usr/include/ni/XnPrdNode.h:2026:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsPoseSupported(XnNodeHandle hInstance, const XnChar* strPose);
 ^
/usr/include/ni/XnPrdNode.h:2041:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus xnGetPoseStatus(XnNodeHandle hInstance, XnUserID userID, const XnChar* poseName, XnUInt64* poseTime, XnPoseDetectionStatus* eStatus, XnPoseDetectionState* eState);
 ^
/usr/include/ni/XnPrdNode.h:2049:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStartPoseDetection(XnNodeHandle hInstance,const  XnChar* strPose, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:2056:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopPoseDetection(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:2064:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopSinglePoseDetection(XnNodeHandle hInstance, XnUserID user, const XnChar* strPose);
 ^
/usr/include/ni/XnPrdNode.h:2074:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_API_DEPRECATED("Please use PoseDetected and/or OutOfPose callbacks") XN_C_DECL xnRegisterToPoseCallbacks(XnNodeHandle hInstance, XnPoseDetectionCallback PoseDetectionStartCB, XnPoseDetectionCallback PoseDetectionEndCB, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:2081:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_API_DEPRECATED("Please use PoseDetected and/or OutOfPose callbacks") XN_C_DECL xnUnregisterFromPoseCallbacks(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2091:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus xnRegisterToPoseDetected(XnNodeHandle hInstance, XnPoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:2098:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void xnUnregisterFromPoseDetected(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2108:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus xnRegisterToOutOfPose(XnNodeHandle hInstance, XnPoseDetectionCallback handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:2115:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void xnUnregisterFromOutOfPose(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2125:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToPoseDetectionInProgress(XnNodeHandle hInstance, XnPoseDetectionInProgress handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:2132:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromPoseDetectionInProgress(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2156:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateHandsGenerator(
 ^
/usr/include/ni/XnPrdNode.h:2173:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterHandCallbacks(XnNodeHandle hInstance, XnHandCreate CreateCB, XnHandUpdate UpdateCB, XnHandDestroy DestroyCB, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:2180:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterHandCallbacks(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2187:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopTracking(XnNodeHandle hInstance, XnUserID user);
 ^
/usr/include/ni/XnPrdNode.h:2193:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStopTrackingAll(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:2200:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnStartTracking(XnNodeHandle hInstance, const XnPoint3D* pPosition);
 ^
/usr/include/ni/XnPrdNode.h:2207:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetTrackingSmoothing(XnNodeHandle hInstance, XnFloat fFactor);
 ^
/usr/include/ni/XnPrdNode.h:2229:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToHandTouchingFOVEdge(XnNodeHandle hInstance, XnHandTouchingFOVEdge handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:2236:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromHandTouchingFOVEdge(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2259:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateAudioGenerator(
 ^
/usr/include/ni/XnPrdNode.h:2266:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUChar* XN_C_DECL xnGetAudioBuffer(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:2267:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnUInt32 XN_C_DECL xnGetSupportedWaveOutputModesCount(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:2268:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetSupportedWaveOutputModes(XnNodeHandle hInstance, XnWaveOutputMode* aSupportedModes, XnUInt32* pnCount);
 ^
/usr/include/ni/XnPrdNode.h:2269:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetWaveOutputMode(XnNodeHandle hInstance, const XnWaveOutputMode* OutputMode);
 ^
/usr/include/ni/XnPrdNode.h:2270:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetWaveOutputMode(XnNodeHandle hInstance, XnWaveOutputMode* OutputMode);
 ^
/usr/include/ni/XnPrdNode.h:2271:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToWaveOutputModeChanges(XnNodeHandle hInstance, XnStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
 ^
/usr/include/ni/XnPrdNode.h:2272:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromWaveOutputModeChanges(XnNodeHandle hInstance, XnCallbackHandle hCallback);
 ^
/usr/include/ni/XnPrdNode.h:2280:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnGetAudioMetaData(XnNodeHandle hInstance, XnAudioMetaData* pMetaData);
 ^
/usr/include/ni/XnPrdNode.h:2294:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnMockDepthSetData(XnNodeHandle hInstance, XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnDepthPixel* pData);
 ^
/usr/include/ni/XnPrdNode.h:2295:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnMockImageSetData(XnNodeHandle hInstance, XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnUInt8* pData);
 ^
/usr/include/ni/XnPrdNode.h:2296:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnMockIRSetData(XnNodeHandle hInstance, XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnIRPixel* pData);
 ^
/usr/include/ni/XnPrdNode.h:2297:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnMockAudioSetData(XnNodeHandle hInstance, XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnUInt8* pData);
 ^
/usr/include/ni/XnPrdNode.h:2298:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnMockRawSetData(XnNodeHandle hInstance, XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const void* pData);
 ^
/usr/include/ni/XnPrdNode.h:2314:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateCodec(XnContext* pContext, XnCodecID codecID, XnNodeHandle hInitializerNode, XnNodeHandle* phCodec);
 ^
/usr/include/ni/XnPrdNode.h:2315:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnCodecID XN_C_DECL xnGetCodecID(XnNodeHandle hCodec);
 ^
/usr/include/ni/XnPrdNode.h:2316:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEncodeData(XnNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, 
 ^
/usr/include/ni/XnPrdNode.h:2318:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnDecodeData(XnNodeHandle hCodec, const void* pSrc, XnUInt32 nSrcSize, 
 ^
/usr/include/ni/XnPrdNode.h:2341:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateRecorder(XnContext* pContext, const XnChar* strFormatName, XnNodeHandle* phRecorder);
 ^
/usr/include/ni/XnPrdNode.h:2350:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetRecorderDestination(XnNodeHandle hRecorder, XnRecordMedium destType, const XnChar* strDest);
 ^
/usr/include/ni/XnPrdNode.h:2360:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetRecorderDestination(XnNodeHandle hRecorder, XnRecordMedium* pDestType, XnChar* strDest, XnUInt32 nBufSize);
 ^
/usr/include/ni/XnPrdNode.h:2372:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnAddNodeToRecording(XnNodeHandle hRecorder, XnNodeHandle hNode, XnCodecID compression);
 ^
/usr/include/ni/XnPrdNode.h:2381:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRemoveNodeFromRecording(XnNodeHandle hRecorder, XnNodeHandle hNode);
 ^
/usr/include/ni/XnPrdNode.h:2388:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRecord(XnNodeHandle hRecorder);
 ^
/usr/include/ni/XnPrdNode.h:2395:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnGetRecorderFormat(XnNodeHandle hRecorder);
 ^
/usr/include/ni/XnPrdNode.h:2418:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreatePlayer(XnContext* pContext, const XnChar* strFormatName, XnNodeHandle* phPlayer);
 ^
/usr/include/ni/XnPrdNode.h:2429:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetPlayerRepeat(XnNodeHandle hPlayer, XnBool bRepeat);
 ^
/usr/include/ni/XnPrdNode.h:2442:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetPlayerSource(XnNodeHandle hPlayer, XnRecordMedium sourceType, const XnChar* strSource);
 ^
/usr/include/ni/XnPrdNode.h:2454:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetPlayerSource(XnNodeHandle hPlayer, XnRecordMedium* pSourceType, XnChar* strSource, XnUInt32 nBufSize);
 ^
/usr/include/ni/XnPrdNode.h:2463:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnPlayerReadNext(XnNodeHandle hPlayer);
 ^
/usr/include/ni/XnPrdNode.h:2482:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSeekPlayerToTimeStamp(XnNodeHandle hPlayer, XnInt64 nTimeOffset, XnPlayerSeekOrigin origin);
 ^
/usr/include/ni/XnPrdNode.h:2503:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSeekPlayerToFrame(XnNodeHandle hPlayer, const XnChar* strNodeName, XnInt32 nFrameOffset, XnPlayerSeekOrigin origin);
 ^
/usr/include/ni/XnPrdNode.h:2511:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnTellPlayerTimestamp(XnNodeHandle hPlayer, XnUInt64* pnTimestamp);
 ^
/usr/include/ni/XnPrdNode.h:2522:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnTellPlayerFrame(XnNodeHandle hPlayer, const XnChar* strNodeName, XnUInt32* pnFrame);
 ^
/usr/include/ni/XnPrdNode.h:2531:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnGetPlayerNumFrames(XnNodeHandle hPlayer, const XnChar* strNodeName, XnUInt32* pnFrames);
 ^
/usr/include/ni/XnPrdNode.h:2539:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnGetPlayerSupportedFormat(XnNodeHandle hPlayer);
 ^
/usr/include/ni/XnPrdNode.h:2550:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumeratePlayerNodes(XnNodeHandle hPlayer, XnNodeInfoList** ppList);
 ^
/usr/include/ni/XnPrdNode.h:2560:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnIsPlayerAtEOF(XnNodeHandle hPlayer);
 ^
/usr/include/ni/XnPrdNode.h:2572:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnRegisterToEndOfFileReached
 ^
/usr/include/ni/XnPrdNode.h:2582:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnUnregisterFromEndOfFileReached
 ^
/usr/include/ni/XnPrdNode.h:2596:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnSetPlaybackSpeed(XnNodeHandle hInstance, XnDouble dSpeed);
 ^
/usr/include/ni/XnPrdNode.h:2604:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnDouble XN_C_DECL xnGetPlaybackSpeed(XnNodeHandle hInstance);
 ^
/usr/include/ni/XnPrdNode.h:2620:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnCreateScriptNode(XnContext* pContext, const XnChar* strFormat, XnNodeHandle* phScript);
 ^
/usr/include/ni/XnPrdNode.h:2621:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnChar* XN_C_DECL xnScriptNodeGetSupportedFormat(XnNodeHandle hScript);
 ^
/usr/include/ni/XnPrdNode.h:2622:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnLoadScriptFromFile(XnNodeHandle hScript, const XnChar* strFileName);
 ^
/usr/include/ni/XnPrdNode.h:2623:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnLoadScriptFromString(XnNodeHandle hScript, const XnChar* strScript);
 ^
/usr/include/ni/XnPrdNode.h:2624:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnScriptNodeRun(XnNodeHandle hScript, XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnEnumerationErrors.h:68:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerationErrorsAllocate(XnEnumerationErrors** ppErrors);
 ^
/usr/include/ni/XnEnumerationErrors.h:75:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API void XN_C_DECL xnEnumerationErrorsFree(const XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnEnumerationErrors.h:84:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerationErrorsAdd(XnEnumerationErrors* pErrors, const XnProductionNodeDescription* pDesc, XnStatus nError);
 ^
/usr/include/ni/XnEnumerationErrors.h:93:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerationErrorsToString(const XnEnumerationErrors* pErrors, XnChar* csBuffer, XnUInt32 nSize);
 ^
/usr/include/ni/XnEnumerationErrors.h:100:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerationErrorsClear(XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnEnumerationErrors.h:107:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnEnumerationErrorsIterator XN_C_DECL xnEnumerationErrorsGetFirst(const XnEnumerationErrors* pErrors);
 ^
/usr/include/ni/XnEnumerationErrors.h:114:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnEnumerationErrorsIterator XN_C_DECL xnEnumerationErrorsGetNext(XnEnumerationErrorsIterator it);
 ^
/usr/include/ni/XnEnumerationErrors.h:121:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnBool XN_C_DECL xnEnumerationErrorsIteratorIsValid(XnEnumerationErrorsIterator it);
 ^
/usr/include/ni/XnEnumerationErrors.h:128:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API const XnProductionNodeDescription* XN_C_DECL xnEnumerationErrorsGetCurrentDescription(XnEnumerationErrorsIterator it);
 ^
/usr/include/ni/XnEnumerationErrors.h:135:1: error: ‘XN_API_IMPORT’ does not name a type
 XN_C_API XnStatus XN_C_DECL xnEnumerationErrorsGetCurrentError(XnEnumerationErrorsIterator it);
 ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:100:32: error: expected ‘)’ before ‘*’ token
  typedef void (XN_CALLBACK_TYPE* StateChangedHandler)(ProductionNode& node, void* pCookie);
                                ^
/usr/include/ni/XnCppWrapper.h:105:19: error: typedef ‘xn::XnStatus’ is initialized (use decltype instead)
  typedef XnStatus (*_XnRegisterStateChangeFuncPtr)(XnNodeHandle hNode, XnStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                   ^
/usr/include/ni/XnCppWrapper.h:105:21: error: ‘_XnRegisterStateChangeFuncPtr’ was not declared in this scope
  typedef XnStatus (*_XnRegisterStateChangeFuncPtr)(XnNodeHandle hNode, XnStateChangedHandler handler, void* pCookie, XnCallbackHandle* phCallback);
                     ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:108:9: error: ‘XnStatus’ does not name a type
  static XnStatus _RegisterToStateChange(_XnRegisterStateChangeFuncPtr xnFunc, XnNodeHandle hNode, StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback);
         ^
/usr/include/ni/XnCppWrapper.h:122:19: error: expected ‘)’ before ‘nMajor’
   Version(XnUInt8 nMajor, XnUInt8 nMinor, XnUInt16 nMaintenance, XnUInt32 nBuild)
                   ^
/usr/include/ni/XnCppWrapper.h:162:3: error: ‘XnUInt8’ does not name a type
   XnUInt8 Major() const { return m_version.nMajor; }
   ^
/usr/include/ni/XnCppWrapper.h:163:3: error: ‘XnUInt8’ does not name a type
   XnUInt8 Minor() const { return m_version.nMinor; }
   ^
/usr/include/ni/XnCppWrapper.h:164:3: error: ‘XnUInt16’ does not name a type
   XnUInt16 Maintenance() const { return m_version.nMaintenance; }
   ^
/usr/include/ni/XnCppWrapper.h:165:3: error: ‘XnUInt32’ does not name a type
   XnUInt32 Build() const { return m_version.nBuild; }
   ^
/usr/include/ni/XnCppWrapper.h:167:3: error: ‘XnUInt8’ does not name a type
   XnUInt8& Major() { return m_version.nMajor; }
   ^
/usr/include/ni/XnCppWrapper.h:168:3: error: ‘XnUInt8’ does not name a type
   XnUInt8& Minor() { return m_version.nMinor; }
   ^
/usr/include/ni/XnCppWrapper.h:169:3: error: ‘XnUInt16’ does not name a type
   XnUInt16& Maintenance() { return m_version.nMaintenance; }
   ^
/usr/include/ni/XnCppWrapper.h:170:3: error: ‘XnUInt32’ does not name a type
   XnUInt32& Build() { return m_version.nBuild; }
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘bool xn::Version::operator==(const xn::Version&) const’:
/usr/include/ni/XnCppWrapper.h:132:57: error: ‘xnVersionCompare’ was not declared in this scope
    return (xnVersionCompare(&m_version, &other.m_version) == 0);
                                                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘bool xn::Version::operator!=(const xn::Version&) const’:
/usr/include/ni/XnCppWrapper.h:136:57: error: ‘xnVersionCompare’ was not declared in this scope
    return (xnVersionCompare(&m_version, &other.m_version) != 0);
                                                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘bool xn::Version::operator<(const xn::Version&) const’:
/usr/include/ni/XnCppWrapper.h:140:57: error: ‘xnVersionCompare’ was not declared in this scope
    return (xnVersionCompare(&m_version, &other.m_version) < 0);
                                                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘bool xn::Version::operator<=(const xn::Version&) const’:
/usr/include/ni/XnCppWrapper.h:144:57: error: ‘xnVersionCompare’ was not declared in this scope
    return (xnVersionCompare(&m_version, &other.m_version) <= 0);
                                                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘bool xn::Version::operator>(const xn::Version&) const’:
/usr/include/ni/XnCppWrapper.h:148:57: error: ‘xnVersionCompare’ was not declared in this scope
    return (xnVersionCompare(&m_version, &other.m_version) > 0);
                                                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘bool xn::Version::operator>=(const xn::Version&) const’:
/usr/include/ni/XnCppWrapper.h:152:57: error: ‘xnVersionCompare’ was not declared in this scope
    return (xnVersionCompare(&m_version, &other.m_version) >= 0);
                                                         ^
/usr/include/ni/XnCppWrapper.h: In static member function ‘static xn::Version xn::Version::Current()’:
/usr/include/ni/XnCppWrapper.h:158:25: error: ‘xnGetVersion’ was not declared in this scope
    xnGetVersion(&version);
                         ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:205:31: error: ‘XnUInt8’ does not name a type
   inline OutputMetaData(const XnUInt8** ppData) : m_ppData(ppData), m_nAllocatedSize(0), m_pAllocatedData(NULL)
                               ^
/usr/include/ni/XnCppWrapper.h:218:10: error: ‘XnUInt64’ does not name a type
   inline XnUInt64 Timestamp() const { return m_output.nTimestamp; }
          ^
/usr/include/ni/XnCppWrapper.h:223:10: error: ‘XnUInt64’ does not name a type
   inline XnUInt64& Timestamp() { return m_output.nTimestamp; }
          ^
/usr/include/ni/XnCppWrapper.h:229:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 FrameID() const { return m_output.nFrameID; }
          ^
/usr/include/ni/XnCppWrapper.h:235:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& FrameID() { return m_output.nFrameID; }
          ^
/usr/include/ni/XnCppWrapper.h:245:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 DataSize() const { return m_output.nDataSize; }
          ^
/usr/include/ni/XnCppWrapper.h:255:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& DataSize() { return m_output.nDataSize; }
          ^
/usr/include/ni/XnCppWrapper.h:261:10: error: ‘XnBool’ does not name a type
   inline XnBool IsDataNew() const { return m_output.bIsNew; }
          ^
/usr/include/ni/XnCppWrapper.h:267:10: error: ‘XnBool’ does not name a type
   inline XnBool& IsDataNew() { return m_output.bIsNew; }
          ^
/usr/include/ni/XnCppWrapper.h:282:16: error: ‘XnUInt8’ does not name a type
   inline const XnUInt8* Data() const { return *m_ppData; }
                ^
/usr/include/ni/XnCppWrapper.h:287:16: error: ‘XnUInt8’ does not name a type
   inline const XnUInt8*& Data() { return *m_ppData; }
                ^
/usr/include/ni/XnCppWrapper.h:292:10: error: ‘XnUInt8’ does not name a type
   inline XnUInt8* WritableData()
          ^
/usr/include/ni/XnCppWrapper.h:306:3: error: ‘XnStatus’ does not name a type
   XnStatus AllocateData(XnUInt32 nBytes)
   ^
/usr/include/ni/XnCppWrapper.h:343:3: error: ‘XnStatus’ does not name a type
   XnStatus MakeDataWritable()
   ^
/usr/include/ni/XnCppWrapper.h:369:3: error: ‘XnUInt8’ does not name a type
   XnUInt8* m_pAllocatedData;
   ^
/usr/include/ni/XnCppWrapper.h:374:9: error: ‘XnUInt8’ does not name a type
   const XnUInt8** m_ppData;
         ^
/usr/include/ni/XnCppWrapper.h:375:3: error: ‘XnUInt32’ does not name a type
   XnUInt32 m_nAllocatedSize;
   ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::OutputMetaData::OutputMetaData(const int**)’:
/usr/include/ni/XnCppWrapper.h:205:51: error: class ‘xn::OutputMetaData’ does not have any field named ‘m_ppData’
   inline OutputMetaData(const XnUInt8** ppData) : m_ppData(ppData), m_nAllocatedSize(0), m_pAllocatedData(NULL)
                                                   ^
/usr/include/ni/XnCppWrapper.h:205:69: error: class ‘xn::OutputMetaData’ does not have any field named ‘m_nAllocatedSize’
   inline OutputMetaData(const XnUInt8** ppData) : m_ppData(ppData), m_nAllocatedSize(0), m_pAllocatedData(NULL)
                                                                     ^
/usr/include/ni/XnCppWrapper.h:205:90: error: class ‘xn::OutputMetaData’ does not have any field named ‘m_pAllocatedData’
   inline OutputMetaData(const XnUInt8** ppData) : m_ppData(ppData), m_nAllocatedSize(0), m_pAllocatedData(NULL)
                                                                                          ^
/usr/include/ni/XnCppWrapper.h:207:53: error: ‘xnOSMemSet’ was not declared in this scope
    xnOSMemSet(&m_output, 0, sizeof(XnOutputMetaData));
                                                     ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::OutputMetaData::Free()’:
/usr/include/ni/XnCppWrapper.h:331:8: error: ‘m_nAllocatedSize’ was not declared in this scope
    if (m_nAllocatedSize != 0)
        ^
/usr/include/ni/XnCppWrapper.h:333:21: error: ‘m_pAllocatedData’ was not declared in this scope
     xnOSFreeAligned(m_pAllocatedData);
                     ^
/usr/include/ni/XnCppWrapper.h:333:37: error: ‘xnOSFreeAligned’ was not declared in this scope
     xnOSFreeAligned(m_pAllocatedData);
                                     ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:399:50: error: ‘XnUInt8’ does not name a type
   inline MapMetaData(XnPixelFormat format, const XnUInt8** ppData) : OutputMetaData(ppData)
                                                  ^
/usr/include/ni/XnCppWrapper.h:411:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 XRes() const { return m_map.Res.X; }
          ^
/usr/include/ni/XnCppWrapper.h:417:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& XRes() { return m_map.Res.X; }
          ^
/usr/include/ni/XnCppWrapper.h:424:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 YRes() const { return m_map.Res.Y; }
          ^
/usr/include/ni/XnCppWrapper.h:430:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& YRes() { return m_map.Res.Y; }
          ^
/usr/include/ni/XnCppWrapper.h:440:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 XOffset() const { return m_map.Offset.X; }
          ^
/usr/include/ni/XnCppWrapper.h:449:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& XOffset() { return m_map.Offset.X; }
          ^
/usr/include/ni/XnCppWrapper.h:459:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 YOffset() const { return m_map.Offset.Y; }
          ^
/usr/include/ni/XnCppWrapper.h:468:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& YOffset() { return m_map.Offset.Y; }
          ^
/usr/include/ni/XnCppWrapper.h:474:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 FullXRes() const { return m_map.FullRes.X; }
          ^
/usr/include/ni/XnCppWrapper.h:481:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& FullXRes() { return m_map.FullRes.X; }
          ^
/usr/include/ni/XnCppWrapper.h:486:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 FullYRes() const { return m_map.FullRes.Y; }
          ^
/usr/include/ni/XnCppWrapper.h:490:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& FullYRes() { return m_map.FullRes.Y; }
          ^
/usr/include/ni/XnCppWrapper.h:495:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 FPS() const { return m_map.nFPS; }
          ^
/usr/include/ni/XnCppWrapper.h:499:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& FPS() { return m_map.nFPS; }
          ^
/usr/include/ni/XnCppWrapper.h:518:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 BytesPerPixel() const
          ^
/usr/include/ni/XnCppWrapper.h:544:3: error: ‘XnStatus’ does not name a type
   XnStatus AllocateData(XnUInt32 nXRes, XnUInt32 nYRes)
   ^
/usr/include/ni/XnCppWrapper.h:567:3: error: ‘XnStatus’ does not name a type
   XnStatus ReAdjust(XnUInt32 nXRes, XnUInt32 nYRes, const XnUInt8* pExternalBuffer)
   ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::MapMetaData::MapMetaData(XnPixelFormat, const int**)’:
/usr/include/ni/XnCppWrapper.h:401:47: error: ‘xnOSMemSet’ was not declared in this scope
    xnOSMemSet(&m_map, 0, sizeof(XnMapMetaData));
                                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:611:34: error: ‘XnUInt32’ has not been declared
   inline Map(_pixelType*& pData, XnUInt32& nXRes, XnUInt32 &nYRes) :
                                  ^
/usr/include/ni/XnCppWrapper.h:611:51: error: ‘XnUInt32’ has not been declared
   inline Map(_pixelType*& pData, XnUInt32& nXRes, XnUInt32 &nYRes) :
                                                   ^
/usr/include/ni/XnCppWrapper.h:622:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 XRes() const { return m_nXRes; }
          ^
/usr/include/ni/XnCppWrapper.h:630:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 YRes() const { return m_nYRes; }
          ^
/usr/include/ni/XnCppWrapper.h:643:39: error: declaration of ‘operator[]’ as non-function
   inline const _pixelType& operator[](XnUInt32 nIndex) const
                                       ^
/usr/include/ni/XnCppWrapper.h:643:37: error: expected ‘;’ at end of member declaration
   inline const _pixelType& operator[](XnUInt32 nIndex) const
                                     ^
/usr/include/ni/XnCppWrapper.h:643:48: error: expected ‘)’ before ‘nIndex’
   inline const _pixelType& operator[](XnUInt32 nIndex) const
                                                ^
/usr/include/ni/XnCppWrapper.h:659:33: error: declaration of ‘operator[]’ as non-function
   inline _pixelType& operator[](XnUInt32 nIndex)
                                 ^
/usr/include/ni/XnCppWrapper.h:659:31: error: expected ‘;’ at end of member declaration
   inline _pixelType& operator[](XnUInt32 nIndex)
                               ^
/usr/include/ni/XnCppWrapper.h:659:42: error: expected ‘)’ before ‘nIndex’
   inline _pixelType& operator[](XnUInt32 nIndex)
                                          ^
/usr/include/ni/XnCppWrapper.h:673:39: error: declaration of ‘operator()’ as non-function
   inline const _pixelType& operator()(XnUInt32 x, XnUInt32 y) const
                                       ^
/usr/include/ni/XnCppWrapper.h:673:37: error: expected ‘;’ at end of member declaration
   inline const _pixelType& operator()(XnUInt32 x, XnUInt32 y) const
                                     ^
/usr/include/ni/XnCppWrapper.h:673:48: error: expected ‘)’ before ‘x’
   inline const _pixelType& operator()(XnUInt32 x, XnUInt32 y) const
                                                ^
/usr/include/ni/XnCppWrapper.h:686:33: error: declaration of ‘operator()’ as non-function
   inline _pixelType& operator()(XnUInt32 x, XnUInt32 y)
                                 ^
/usr/include/ni/XnCppWrapper.h:686:31: error: expected ‘;’ at end of member declaration
   inline _pixelType& operator()(XnUInt32 x, XnUInt32 y)
                               ^
/usr/include/ni/XnCppWrapper.h:686:42: error: expected ‘)’ before ‘x’
   inline _pixelType& operator()(XnUInt32 x, XnUInt32 y)
                                          ^
/usr/include/ni/XnCppWrapper.h:698:3: error: ‘XnUInt32’ does not name a type
   XnUInt32& m_nXRes;
   ^
/usr/include/ni/XnCppWrapper.h:699:3: error: ‘XnUInt32’ does not name a type
   XnUInt32& m_nYRes;
   ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::Map<_pixelType>::Map(_pixelType*&, int&, int&)’:
/usr/include/ni/XnCppWrapper.h:612:20: error: class ‘xn::Map<_pixelType>’ does not have any field named ‘m_nXRes’
    m_pData(pData), m_nXRes(nXRes), m_nYRes(nYRes)
                    ^
/usr/include/ni/XnCppWrapper.h:612:36: error: class ‘xn::Map<_pixelType>’ does not have any field named ‘m_nYRes’
    m_pData(pData), m_nXRes(nXRes), m_nYRes(nYRes)
                                    ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:706:14: error: ‘XnDepthPixel’ was not declared in this scope
  typedef Map<XnDepthPixel> DepthMap;
              ^
/usr/include/ni/XnCppWrapper.h:706:26: error: template argument 1 is invalid
  typedef Map<XnDepthPixel> DepthMap;
                          ^
/usr/include/ni/XnCppWrapper.h:706:36: error: invalid type in declaration before ‘;’ token
  typedef Map<XnDepthPixel> DepthMap;
                                    ^
/usr/include/ni/XnCppWrapper.h:708:14: error: ‘XnUInt8’ was not declared in this scope
  typedef Map<XnUInt8> ImageMap;
              ^
/usr/include/ni/XnCppWrapper.h:708:21: error: template argument 1 is invalid
  typedef Map<XnUInt8> ImageMap;
                     ^
/usr/include/ni/XnCppWrapper.h:708:31: error: invalid type in declaration before ‘;’ token
  typedef Map<XnUInt8> ImageMap;
                               ^
/usr/include/ni/XnCppWrapper.h:712:14: error: ‘XnGrayscale16Pixel’ was not declared in this scope
  typedef Map<XnGrayscale16Pixel> Grayscale16Map;
              ^
/usr/include/ni/XnCppWrapper.h:712:32: error: template argument 1 is invalid
  typedef Map<XnGrayscale16Pixel> Grayscale16Map;
                                ^
/usr/include/ni/XnCppWrapper.h:712:48: error: invalid type in declaration before ‘;’ token
  typedef Map<XnGrayscale16Pixel> Grayscale16Map;
                                                ^
/usr/include/ni/XnCppWrapper.h:714:14: error: ‘XnGrayscale8Pixel’ was not declared in this scope
  typedef Map<XnGrayscale8Pixel> Grayscale8Map;
              ^
/usr/include/ni/XnCppWrapper.h:714:31: error: template argument 1 is invalid
  typedef Map<XnGrayscale8Pixel> Grayscale8Map;
                               ^
/usr/include/ni/XnCppWrapper.h:714:46: error: invalid type in declaration before ‘;’ token
  typedef Map<XnGrayscale8Pixel> Grayscale8Map;
                                              ^
/usr/include/ni/XnCppWrapper.h:716:14: error: ‘XnIRPixel’ was not declared in this scope
  typedef Map<XnIRPixel> IRMap;
              ^
/usr/include/ni/XnCppWrapper.h:716:23: error: template argument 1 is invalid
  typedef Map<XnIRPixel> IRMap;
                       ^
/usr/include/ni/XnCppWrapper.h:716:30: error: invalid type in declaration before ‘;’ token
  typedef Map<XnIRPixel> IRMap;
                              ^
/usr/include/ni/XnCppWrapper.h:718:14: error: ‘XnLabel’ was not declared in this scope
  typedef Map<XnLabel> LabelMap;
              ^
/usr/include/ni/XnCppWrapper.h:718:21: error: template argument 1 is invalid
  typedef Map<XnLabel> LabelMap;
                     ^
/usr/include/ni/XnCppWrapper.h:718:31: error: invalid type in declaration before ‘;’ token
  typedef Map<XnLabel> LabelMap;
                               ^
/usr/include/ni/XnCppWrapper.h:790:10: error: ‘XnStatus’ does not name a type
   inline XnStatus InitFrom(const DepthMetaData& other, XnUInt32 nXRes, XnUInt32 nYRes, const XnDepthPixel* pExternalBuffer)
          ^
/usr/include/ni/XnCppWrapper.h:802:3: error: ‘XnStatus’ does not name a type
   XnStatus CopyFrom(const DepthMetaData& other)
   ^
/usr/include/ni/XnCppWrapper.h:813:3: error: ‘XnStatus’ does not name a type
   XnStatus ReAdjust(XnUInt32 nXRes, XnUInt32 nYRes, const XnDepthPixel* pExternalBuffer = NULL)
   ^
/usr/include/ni/XnCppWrapper.h:823:10: error: ‘XnDepthPixel’ does not name a type
   inline XnDepthPixel ZRes() const { return m_depth.nZRes; }
          ^
/usr/include/ni/XnCppWrapper.h:829:10: error: ‘XnDepthPixel’ does not name a type
   inline XnDepthPixel& ZRes() { return m_depth.nZRes; }
          ^
/usr/include/ni/XnCppWrapper.h:843:16: error: ‘XnDepthPixel’ does not name a type
   inline const XnDepthPixel* Data() const { return (const XnDepthPixel*)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:856:16: error: ‘XnDepthPixel’ does not name a type
   inline const XnDepthPixel*& Data() { return (const XnDepthPixel*&)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:862:10: error: ‘XnDepthPixel’ does not name a type
   inline XnDepthPixel* WritableData() { return (XnDepthPixel*)MapMetaData::WritableData(); }
          ^
/usr/include/ni/XnCppWrapper.h:882:16: error: ‘XnDepthPixel’ does not name a type
   inline const XnDepthPixel& operator[](XnUInt32 nIndex) const
                ^
/usr/include/ni/XnCppWrapper.h:894:16: error: ‘XnDepthPixel’ does not name a type
   inline const XnDepthPixel& operator()(XnUInt32 x, XnUInt32 y) const
                ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::DepthMetaData::DepthMetaData()’:
/usr/include/ni/XnCppWrapper.h:760:51: error: expected primary-expression before ‘const’
    MapMetaData(XN_PIXEL_FORMAT_GRAYSCALE_16_BIT, (const XnUInt8**)&m_depth.pData),
                                                   ^
/usr/include/ni/XnCppWrapper.h:760:51: error: expected ‘)’ before ‘const’
/usr/include/ni/XnCppWrapper.h:766:3: error: no matching function for call to ‘xn::MapMetaData::MapMetaData()’
   }
   ^
/usr/include/ni/XnCppWrapper.h:766:3: note: candidates are:
/usr/include/ni/XnCppWrapper.h:594:10: note: xn::MapMetaData::MapMetaData(const xn::MapMetaData&)
   inline MapMetaData(const MapMetaData& other);
          ^
/usr/include/ni/XnCppWrapper.h:594:10: note:   candidate expects 1 argument, 0 provided
/usr/include/ni/XnCppWrapper.h:399:10: note: xn::MapMetaData::MapMetaData(XnPixelFormat, const int**)
   inline MapMetaData(XnPixelFormat format, const XnUInt8** ppData) : OutputMetaData(ppData)
          ^
/usr/include/ni/XnCppWrapper.h:399:10: note:   candidate expects 2 arguments, 0 provided
/usr/include/ni/XnCppWrapper.h:759:10: error: uninitialized const member in ‘const DepthMap {aka const int}’ [-fpermissive]
   inline DepthMetaData() :
          ^
/usr/include/ni/XnCppWrapper.h:915:22: note: ‘const DepthMap xn::DepthMetaData::m_depthMap’ should be initialized
   const xn::DepthMap m_depthMap;
                      ^
/usr/include/ni/XnCppWrapper.h:766:3: error: expected ‘{’ at end of input
   }
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::DepthMetaData::InitFrom(const xn::DepthMetaData&)’:
/usr/include/ni/XnCppWrapper.h:777:48: error: ‘xnCopyDepthMetaData’ was not declared in this scope
    xnCopyDepthMetaData(&m_depth, &other.m_depth);
                                                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::DepthMap& xn::DepthMetaData::WritableDepthMap()’:
/usr/include/ni/XnCppWrapper.h:873:21: error: ‘MakeDataWritable’ was not declared in this scope
    MakeDataWritable();
                     ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:986:10: error: ‘XnStatus’ does not name a type
   inline XnStatus InitFrom(const ImageMetaData& other, XnUInt32 nXRes, XnUInt32 nYRes, XnPixelFormat format, const XnUInt8* pExternalBuffer)
          ^
/usr/include/ni/XnCppWrapper.h:1002:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AllocateData(XnUInt32 nXRes, XnUInt32 nYRes, XnPixelFormat format)
          ^
/usr/include/ni/XnCppWrapper.h:1021:10: error: ‘XnStatus’ does not name a type
   inline XnStatus CopyFrom(const ImageMetaData& other)
          ^
/usr/include/ni/XnCppWrapper.h:1038:3: error: ‘XnStatus’ does not name a type
   XnStatus ReAdjust(XnUInt32 nXRes, XnUInt32 nYRes, XnPixelFormat format, const XnUInt8* pExternalBuffer = NULL)
   ^
/usr/include/ni/XnCppWrapper.h:1078:10: error: ‘XnUInt8’ does not name a type
   inline XnUInt8* WritableData() { return MapMetaData::WritableData(); }
          ^
/usr/include/ni/XnCppWrapper.h:1116:16: error: ‘XnGrayscale8Pixel’ does not name a type
   inline const XnGrayscale8Pixel* Grayscale8Data() const { return (const XnGrayscale8Pixel*)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1121:16: error: ‘XnGrayscale8Pixel’ does not name a type
   inline const XnGrayscale8Pixel*& Grayscale8Data() { return (const XnGrayscale8Pixel*&)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1125:10: error: ‘XnGrayscale8Pixel’ does not name a type
   inline XnGrayscale8Pixel* WritableGrayscale8Data() { return (XnGrayscale8Pixel*)MapMetaData::WritableData(); }
          ^
/usr/include/ni/XnCppWrapper.h:1131:16: error: ‘XnGrayscale16Pixel’ does not name a type
   inline const XnGrayscale16Pixel* Grayscale16Data() const { return (const XnGrayscale16Pixel*)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1136:16: error: ‘XnGrayscale16Pixel’ does not name a type
   inline const XnGrayscale16Pixel*& Grayscale16Data() { return (const XnGrayscale16Pixel*&)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1140:10: error: ‘XnGrayscale16Pixel’ does not name a type
   inline XnGrayscale16Pixel* WritableGrayscale16Data() { return (XnGrayscale16Pixel*)MapMetaData::WritableData(); }
          ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::ImageMetaData::ImageMetaData()’:
/usr/include/ni/XnCppWrapper.h:949:48: error: ‘XnImageMetaData’ has no member named ‘pData’
    MapMetaData(XN_PIXEL_FORMAT_RGB24, &m_image.pData),
                                                ^
/usr/include/ni/XnCppWrapper.h:950:26: error: ‘XnUInt8’ does not name a type
    m_imageMap(const_cast<XnUInt8*&>(m_image.pData), MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                          ^
/usr/include/ni/XnCppWrapper.h:950:33: error: expected ‘>’ before ‘*’ token
    m_imageMap(const_cast<XnUInt8*&>(m_image.pData), MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                 ^
/usr/include/ni/XnCppWrapper.h:950:33: error: expected ‘(’ before ‘*’ token
/usr/include/ni/XnCppWrapper.h:950:35: error: expected primary-expression before ‘>’ token
    m_imageMap(const_cast<XnUInt8*&>(m_image.pData), MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                   ^
/usr/include/ni/XnCppWrapper.h:950:45: error: ‘XnImageMetaData’ has no member named ‘pData’
    m_imageMap(const_cast<XnUInt8*&>(m_image.pData), MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                             ^
/usr/include/ni/XnCppWrapper.h:950:87: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_imageMap(const_cast<XnUInt8*&>(m_image.pData), MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                       ^
/usr/include/ni/XnCppWrapper.h:950:124: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_imageMap(const_cast<XnUInt8*&>(m_image.pData), MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                            ^
/usr/include/ni/XnCppWrapper.h:951:24: error: ‘XnUInt8’ was not declared in this scope
    m_writableImageMap((XnUInt8*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                        ^
/usr/include/ni/XnCppWrapper.h:951:33: error: expected primary-expression before ‘)’ token
    m_writableImageMap((XnUInt8*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                 ^
/usr/include/ni/XnCppWrapper.h:951:86: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_writableImageMap((XnUInt8*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                      ^
/usr/include/ni/XnCppWrapper.h:951:123: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_writableImageMap((XnUInt8*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                           ^
/usr/include/ni/XnCppWrapper.h:951:124: error: expression cannot be used as a function
    m_writableImageMap((XnUInt8*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                            ^
/usr/include/ni/XnCppWrapper.h:952:39: error: ‘XnImageMetaData’ has no member named ‘pData’
    m_rgb24Map((XnRGB24Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                       ^
/usr/include/ni/XnCppWrapper.h:952:80: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_rgb24Map((XnRGB24Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                ^
/usr/include/ni/XnCppWrapper.h:952:117: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_rgb24Map((XnRGB24Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                     ^
/usr/include/ni/XnCppWrapper.h:953:39: error: ‘m_pAllocatedData’ was not declared in this scope
    m_writableRgb24Map((XnRGB24Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                       ^
/usr/include/ni/XnCppWrapper.h:953:91: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_writableRgb24Map((XnRGB24Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                           ^
/usr/include/ni/XnCppWrapper.h:953:128: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_writableRgb24Map((XnRGB24Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                                ^
/usr/include/ni/XnCppWrapper.h:954:17: error: ‘XnGrayscale16Pixel’ was not declared in this scope
    m_gray16Map((XnGrayscale16Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                 ^
/usr/include/ni/XnCppWrapper.h:954:37: error: expected primary-expression before ‘)’ token
    m_gray16Map((XnGrayscale16Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                     ^
/usr/include/ni/XnCppWrapper.h:954:87: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_gray16Map((XnGrayscale16Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                       ^
/usr/include/ni/XnCppWrapper.h:954:124: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_gray16Map((XnGrayscale16Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                            ^
/usr/include/ni/XnCppWrapper.h:954:125: error: expression cannot be used as a function
    m_gray16Map((XnGrayscale16Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                             ^
/usr/include/ni/XnCppWrapper.h:955:45: error: expected primary-expression before ‘)’ token
    m_writableGray16Map((XnGrayscale16Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                             ^
/usr/include/ni/XnCppWrapper.h:955:98: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_writableGray16Map((XnGrayscale16Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                  ^
/usr/include/ni/XnCppWrapper.h:955:135: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_writableGray16Map((XnGrayscale16Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                                       ^
/usr/include/ni/XnCppWrapper.h:955:136: error: expression cannot be used as a function
    m_writableGray16Map((XnGrayscale16Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                                        ^
/usr/include/ni/XnCppWrapper.h:956:16: error: ‘XnGrayscale8Pixel’ was not declared in this scope
    m_gray8Map((XnGrayscale8Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                ^
/usr/include/ni/XnCppWrapper.h:956:35: error: expected primary-expression before ‘)’ token
    m_gray8Map((XnGrayscale8Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                   ^
/usr/include/ni/XnCppWrapper.h:956:85: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_gray8Map((XnGrayscale8Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                     ^
/usr/include/ni/XnCppWrapper.h:956:122: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_gray8Map((XnGrayscale8Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                          ^
/usr/include/ni/XnCppWrapper.h:956:123: error: expression cannot be used as a function
    m_gray8Map((XnGrayscale8Pixel*&)m_image.pData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y),
                                                                                                                           ^
/usr/include/ni/XnCppWrapper.h:957:43: error: expected primary-expression before ‘)’ token
    m_writableGray8Map((XnGrayscale8Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y)
                                           ^
/usr/include/ni/XnCppWrapper.h:957:96: error: ‘XnUInt32XYPair’ has no member named ‘X’
    m_writableGray8Map((XnGrayscale8Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y)
                                                                                                ^
/usr/include/ni/XnCppWrapper.h:957:133: error: ‘XnUInt32XYPair’ has no member named ‘Y’
    m_writableGray8Map((XnGrayscale8Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y)
                                                                                                                                     ^
/usr/include/ni/XnCppWrapper.h:957:134: error: expression cannot be used as a function
    m_writableGray8Map((XnGrayscale8Pixel*&)m_pAllocatedData, MapMetaData::GetUnderlying()->Res.X, MapMetaData::GetUnderlying()->Res.Y)
                                                                                                                                      ^
/usr/include/ni/XnCppWrapper.h:948:10: error: uninitialized const member in ‘const ImageMap {aka const int}’ [-fpermissive]
   inline ImageMetaData() :
          ^
/usr/include/ni/XnCppWrapper.h:1196:22: note: ‘const ImageMap xn::ImageMetaData::m_imageMap’ should be initialized
   const xn::ImageMap m_imageMap;
                      ^
/usr/include/ni/XnCppWrapper.h:948:10: error: uninitialized const member in ‘const RGB24Map {aka const class xn::Map<XnRGB24Pixel>}’ [-fpermissive]
   inline ImageMetaData() :
          ^
/usr/include/ni/XnCppWrapper.h:1198:22: note: ‘const RGB24Map xn::ImageMetaData::m_rgb24Map’ should be initialized
   const xn::RGB24Map m_rgb24Map;
                      ^
/usr/include/ni/XnCppWrapper.h:961:3: error: no matching function for call to ‘xn::Map<XnRGB24Pixel>::Map()’
   }
   ^
/usr/include/ni/XnCppWrapper.h:961:3: note: candidates are:
/usr/include/ni/XnCppWrapper.h:694:3: note: xn::Map<_pixelType>::Map(const xn::Map<_pixelType>&) [with _pixelType = XnRGB24Pixel]
   Map(const Map& other);
   ^
/usr/include/ni/XnCppWrapper.h:694:3: note:   candidate expects 1 argument, 0 provided
/usr/include/ni/XnCppWrapper.h:611:10: note: xn::Map<_pixelType>::Map(_pixelType*&, int&, int&) [with _pixelType = XnRGB24Pixel]
   inline Map(_pixelType*& pData, XnUInt32& nXRes, XnUInt32 &nYRes) :
          ^
/usr/include/ni/XnCppWrapper.h:611:10: note:   candidate expects 3 arguments, 0 provided
/usr/include/ni/XnCppWrapper.h:961:3: error: no matching function for call to ‘xn::Map<XnRGB24Pixel>::Map()’
   }
   ^
/usr/include/ni/XnCppWrapper.h:961:3: note: candidates are:
/usr/include/ni/XnCppWrapper.h:694:3: note: xn::Map<_pixelType>::Map(const xn::Map<_pixelType>&) [with _pixelType = XnRGB24Pixel]
   Map(const Map& other);
   ^
/usr/include/ni/XnCppWrapper.h:694:3: note:   candidate expects 1 argument, 0 provided
/usr/include/ni/XnCppWrapper.h:611:10: note: xn::Map<_pixelType>::Map(_pixelType*&, int&, int&) [with _pixelType = XnRGB24Pixel]
   inline Map(_pixelType*& pData, XnUInt32& nXRes, XnUInt32 &nYRes) :
          ^
/usr/include/ni/XnCppWrapper.h:611:10: note:   candidate expects 3 arguments, 0 provided
/usr/include/ni/XnCppWrapper.h:948:10: error: uninitialized const member in ‘const Grayscale16Map {aka const int}’ [-fpermissive]
   inline ImageMetaData() :
          ^
/usr/include/ni/XnCppWrapper.h:1200:28: note: ‘const Grayscale16Map xn::ImageMetaData::m_gray16Map’ should be initialized
   const xn::Grayscale16Map m_gray16Map;
                            ^
/usr/include/ni/XnCppWrapper.h:948:10: error: uninitialized const member in ‘const Grayscale8Map {aka const int}’ [-fpermissive]
   inline ImageMetaData() :
          ^
/usr/include/ni/XnCppWrapper.h:1202:27: note: ‘const Grayscale8Map xn::ImageMetaData::m_gray8Map’ should be initialized
   const xn::Grayscale8Map m_gray8Map;
                           ^
/usr/include/ni/XnCppWrapper.h:961:3: error: expected ‘{’ at end of input
   }
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::ImageMetaData::InitFrom(const xn::ImageMetaData&)’:
/usr/include/ni/XnCppWrapper.h:972:48: error: ‘xnCopyImageMetaData’ was not declared in this scope
    xnCopyImageMetaData(&m_image, &other.m_image);
                                                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnRGB24Pixel* xn::ImageMetaData::RGB24Data() const’:
/usr/include/ni/XnCppWrapper.h:1084:78: error: ‘Data’ is not a member of ‘xn::MapMetaData’
   inline const XnRGB24Pixel* RGB24Data() const { return (const XnRGB24Pixel*)MapMetaData::Data(); }
                                                                              ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnRGB24Pixel*& xn::ImageMetaData::RGB24Data()’:
/usr/include/ni/XnCppWrapper.h:1089:74: error: ‘Data’ is not a member of ‘xn::MapMetaData’
   inline const XnRGB24Pixel*& RGB24Data() { return (const XnRGB24Pixel*&)MapMetaData::Data(); }
                                                                          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘XnRGB24Pixel* xn::ImageMetaData::WritableRGB24Data()’:
/usr/include/ni/XnCppWrapper.h:1093:68: error: ‘WritableData’ is not a member of ‘xn::MapMetaData’
   inline XnRGB24Pixel* WritableRGB24Data() { return (XnRGB24Pixel*)MapMetaData::WritableData(); }
                                                                    ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnYUV422DoublePixel* xn::ImageMetaData::YUV422Data() const’:
/usr/include/ni/XnCppWrapper.h:1100:93: error: ‘Data’ is not a member of ‘xn::MapMetaData’
   inline const XnYUV422DoublePixel* YUV422Data() const { return (const XnYUV422DoublePixel*)MapMetaData::Data(); }
                                                                                             ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnYUV422DoublePixel*& xn::ImageMetaData::YUV422Data()’:
/usr/include/ni/XnCppWrapper.h:1106:89: error: ‘Data’ is not a member of ‘xn::MapMetaData’
   inline const XnYUV422DoublePixel*& YUV422Data() { return (const XnYUV422DoublePixel*&)MapMetaData::Data(); }
                                                                                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘XnYUV422DoublePixel* xn::ImageMetaData::WritableYUV422Data()’:
/usr/include/ni/XnCppWrapper.h:1110:83: error: ‘WritableData’ is not a member of ‘xn::MapMetaData’
   inline XnYUV422DoublePixel* WritableYUV422Data() { return (XnYUV422DoublePixel*)MapMetaData::WritableData(); }
                                                                                   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::ImageMap& xn::ImageMetaData::WritableImageMap()’:
/usr/include/ni/XnCppWrapper.h:1149:62: error: ‘MakeDataWritable’ was not declared in this scope
   inline xn::ImageMap& WritableImageMap() { MakeDataWritable(); return m_writableImageMap; }
                                                              ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::RGB24Map& xn::ImageMetaData::WritableRGB24Map()’:
/usr/include/ni/XnCppWrapper.h:1160:62: error: ‘MakeDataWritable’ was not declared in this scope
   inline xn::RGB24Map& WritableRGB24Map() { MakeDataWritable(); return m_writableRgb24Map; }
                                                              ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::Grayscale8Map& xn::ImageMetaData::WritableGrayscale8Map()’:
/usr/include/ni/XnCppWrapper.h:1169:72: error: ‘MakeDataWritable’ was not declared in this scope
   inline xn::Grayscale8Map& WritableGrayscale8Map() { MakeDataWritable(); return m_writableGray8Map; }
                                                                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::Grayscale16Map& xn::ImageMetaData::WritableGrayscale16Map()’:
/usr/include/ni/XnCppWrapper.h:1179:74: error: ‘MakeDataWritable’ was not declared in this scope
   inline xn::Grayscale16Map& WritableGrayscale16Map() { MakeDataWritable(); return m_writableGray16Map; }
                                                                          ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:1248:10: error: ‘XnStatus’ does not name a type
   inline XnStatus InitFrom(const IRMetaData& other, XnUInt32 nXRes, XnUInt32 nYRes, const XnIRPixel* pExternalBuffer)
          ^
/usr/include/ni/XnCppWrapper.h:1259:3: error: ‘XnStatus’ does not name a type
   XnStatus CopyFrom(const IRMetaData& other)
   ^
/usr/include/ni/XnCppWrapper.h:1270:3: error: ‘XnStatus’ does not name a type
   XnStatus ReAdjust(XnUInt32 nXRes, XnUInt32 nYRes, const XnIRPixel* pExternalBuffer = NULL)
   ^
/usr/include/ni/XnCppWrapper.h:1287:16: error: ‘XnIRPixel’ does not name a type
   inline const XnIRPixel* Data() const { return (const XnIRPixel*)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1300:16: error: ‘XnIRPixel’ does not name a type
   inline const XnIRPixel*& Data() { return (const XnIRPixel*&)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1304:10: error: ‘XnIRPixel’ does not name a type
   inline XnIRPixel* WritableData() { return (XnIRPixel*)MapMetaData::WritableData(); }
          ^
/usr/include/ni/XnCppWrapper.h:1311:16: error: ‘XnIRPixel’ does not name a type
   inline const XnIRPixel& operator[](XnUInt32 nIndex) const
                ^
/usr/include/ni/XnCppWrapper.h:1323:16: error: ‘XnIRPixel’ does not name a type
   inline const XnIRPixel& operator()(XnUInt32 x, XnUInt32 y) const
                ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::IRMetaData::IRMetaData()’:
/usr/include/ni/XnCppWrapper.h:1219:51: error: expected primary-expression before ‘const’
    MapMetaData(XN_PIXEL_FORMAT_GRAYSCALE_16_BIT, (const XnUInt8**)&m_ir.pData),
                                                   ^
/usr/include/ni/XnCppWrapper.h:1219:51: error: expected ‘)’ before ‘const’
/usr/include/ni/XnCppWrapper.h:1225:3: error: no matching function for call to ‘xn::MapMetaData::MapMetaData()’
   }
   ^
/usr/include/ni/XnCppWrapper.h:1225:3: note: candidates are:
/usr/include/ni/XnCppWrapper.h:594:10: note: xn::MapMetaData::MapMetaData(const xn::MapMetaData&)
   inline MapMetaData(const MapMetaData& other);
          ^
/usr/include/ni/XnCppWrapper.h:594:10: note:   candidate expects 1 argument, 0 provided
/usr/include/ni/XnCppWrapper.h:399:10: note: xn::MapMetaData::MapMetaData(XnPixelFormat, const int**)
   inline MapMetaData(XnPixelFormat format, const XnUInt8** ppData) : OutputMetaData(ppData)
          ^
/usr/include/ni/XnCppWrapper.h:399:10: note:   candidate expects 2 arguments, 0 provided
/usr/include/ni/XnCppWrapper.h:1218:10: error: uninitialized const member in ‘const IRMap {aka const int}’ [-fpermissive]
   inline IRMetaData() :
          ^
/usr/include/ni/XnCppWrapper.h:1363:19: note: ‘const IRMap xn::IRMetaData::m_irMap’ should be initialized
   const xn::IRMap m_irMap;
                   ^
/usr/include/ni/XnCppWrapper.h:1225:3: error: expected ‘{’ at end of input
   }
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::IRMetaData::InitFrom(const xn::IRMetaData&)’:
/usr/include/ni/XnCppWrapper.h:1236:39: error: ‘xnCopyIRMetaData’ was not declared in this scope
    xnCopyIRMetaData(&m_ir, &other.m_ir);
                                       ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::IRMap& xn::IRMetaData::WritableIRMap()’:
/usr/include/ni/XnCppWrapper.h:1346:56: error: ‘MakeDataWritable’ was not declared in this scope
   inline xn::IRMap& WritableIRMap() { MakeDataWritable(); return m_writableIRMap; }
                                                        ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:1376:44: error: ‘XN_UNALIGNED_ADDRESS_WARNING_ID’ has not been declared
   XN_PRAGMA_START_DISABLED_WARNING_SECTION(XN_UNALIGNED_ADDRESS_WARNING_ID);
                                            ^
/usr/include/ni/XnCppWrapper.h:1383:3: error: ‘XN_PRAGMA_STOP_DISABLED_WARNING_SECTION’ does not name a type
   XN_PRAGMA_STOP_DISABLED_WARNING_SECTION;
   ^
/usr/include/ni/XnCppWrapper.h:1400:10: error: ‘XnUInt8’ does not name a type
   inline XnUInt8 NumberOfChannels() const { return m_audio.Wave.nChannels; }
          ^
/usr/include/ni/XnCppWrapper.h:1404:10: error: ‘XnUInt8’ does not name a type
   inline XnUInt8& NumberOfChannels() { return m_audio.Wave.nChannels; }
          ^
/usr/include/ni/XnCppWrapper.h:1409:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 SampleRate() const { return m_audio.Wave.nSampleRate; }
          ^
/usr/include/ni/XnCppWrapper.h:1413:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32& SampleRate() { return m_audio.Wave.nSampleRate; }
          ^
/usr/include/ni/XnCppWrapper.h:1418:10: error: ‘XnUInt16’ does not name a type
   inline XnUInt16 BitsPerSample() const { return m_audio.Wave.nBitsPerSample; }
          ^
/usr/include/ni/XnCppWrapper.h:1422:10: error: ‘XnUInt16’ does not name a type
   inline XnUInt16& BitsPerSample() { return m_audio.Wave.nBitsPerSample; }
          ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::AudioMetaData::AudioMetaData()’:
/usr/include/ni/XnCppWrapper.h:1377:52: error: ‘XnAudioMetaData’ has no member named ‘pData’
   inline AudioMetaData() : OutputMetaData(&m_audio.pData)
                                                    ^
/usr/include/ni/XnCppWrapper.h:1379:51: error: ‘xnOSMemSet’ was not declared in this scope
    xnOSMemSet(&m_audio, 0, sizeof(XnAudioMetaData));
                                                   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::AudioMetaData::InitFrom(const xn::AudioMetaData&)’:
/usr/include/ni/XnCppWrapper.h:1394:48: error: ‘xnCopyAudioMetaData’ was not declared in this scope
    xnCopyAudioMetaData(&m_audio, &other.m_audio);
                                                ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:1482:10: error: ‘XnStatus’ does not name a type
   inline XnStatus InitFrom(const SceneMetaData& other, XnUInt32 nXRes, XnUInt32 nYRes, const XnLabel* pExternalBuffer)
          ^
/usr/include/ni/XnCppWrapper.h:1493:3: error: ‘XnStatus’ does not name a type
   XnStatus CopyFrom(const SceneMetaData& other)
   ^
/usr/include/ni/XnCppWrapper.h:1504:3: error: ‘XnStatus’ does not name a type
   XnStatus ReAdjust(XnUInt32 nXRes, XnUInt32 nYRes, const XnLabel* pExternalBuffer = NULL)
   ^
/usr/include/ni/XnCppWrapper.h:1522:16: error: ‘XnLabel’ does not name a type
   inline const XnLabel* Data() const { return (const XnLabel*)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1536:16: error: ‘XnLabel’ does not name a type
   inline const XnLabel*& Data() { return (const XnLabel*&)MapMetaData::Data(); }
                ^
/usr/include/ni/XnCppWrapper.h:1541:10: error: ‘XnLabel’ does not name a type
   inline XnLabel* WritableData() { return (XnLabel*)MapMetaData::WritableData(); }
          ^
/usr/include/ni/XnCppWrapper.h:1562:16: error: ‘XnLabel’ does not name a type
   inline const XnLabel& operator[](XnUInt32 nIndex) const
                ^
/usr/include/ni/XnCppWrapper.h:1579:16: error: ‘XnLabel’ does not name a type
   inline const XnLabel& operator()(XnUInt32 x, XnUInt32 y) const
                ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::SceneMetaData::SceneMetaData()’:
/usr/include/ni/XnCppWrapper.h:1453:51: error: expected primary-expression before ‘const’
    MapMetaData(XN_PIXEL_FORMAT_GRAYSCALE_16_BIT, (const XnUInt8**)&m_scene.pData),
                                                   ^
/usr/include/ni/XnCppWrapper.h:1453:51: error: expected ‘)’ before ‘const’
/usr/include/ni/XnCppWrapper.h:1459:3: error: no matching function for call to ‘xn::MapMetaData::MapMetaData()’
   }
   ^
/usr/include/ni/XnCppWrapper.h:1459:3: note: candidates are:
/usr/include/ni/XnCppWrapper.h:594:10: note: xn::MapMetaData::MapMetaData(const xn::MapMetaData&)
   inline MapMetaData(const MapMetaData& other);
          ^
/usr/include/ni/XnCppWrapper.h:594:10: note:   candidate expects 1 argument, 0 provided
/usr/include/ni/XnCppWrapper.h:399:10: note: xn::MapMetaData::MapMetaData(XnPixelFormat, const int**)
   inline MapMetaData(XnPixelFormat format, const XnUInt8** ppData) : OutputMetaData(ppData)
          ^
/usr/include/ni/XnCppWrapper.h:399:10: note:   candidate expects 2 arguments, 0 provided
/usr/include/ni/XnCppWrapper.h:1452:10: error: uninitialized const member in ‘const LabelMap {aka const int}’ [-fpermissive]
   inline SceneMetaData() :
          ^
/usr/include/ni/XnCppWrapper.h:1600:22: note: ‘const LabelMap xn::SceneMetaData::m_labelMap’ should be initialized
   const xn::LabelMap m_labelMap;
                      ^
/usr/include/ni/XnCppWrapper.h:1459:3: error: expected ‘{’ at end of input
   }
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::SceneMetaData::InitFrom(const xn::SceneMetaData&)’:
/usr/include/ni/XnCppWrapper.h:1470:48: error: ‘xnCopySceneMetaData’ was not declared in this scope
    xnCopySceneMetaData(&m_scene, &other.m_scene);
                                                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::LabelMap& xn::SceneMetaData::WritableLabelMap()’:
/usr/include/ni/XnCppWrapper.h:1550:62: error: ‘MakeDataWritable’ was not declared in this scope
   inline xn::LabelMap& WritableLabelMap() { MakeDataWritable(); return m_writableLabelMap; }
                                                              ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:1670:10: error: ‘XnBool’ does not name a type
   inline XnBool operator==(const NodeWrapper& other)
          ^
/usr/include/ni/XnCppWrapper.h:1680:10: error: ‘XnBool’ does not name a type
   inline XnBool operator!=(const NodeWrapper& other)
          ^
/usr/include/ni/XnCppWrapper.h:1698:10: error: ‘XnBool’ does not name a type
   inline XnBool IsValid() const { return (GetHandle() != NULL); }
          ^
/usr/include/ni/XnCppWrapper.h:1704:9: error: ‘XnChar’ does not name a type
   const XnChar* GetName() const {return xnGetNodeName(GetHandle()); }
         ^
/usr/include/ni/XnCppWrapper.h:1710:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddRef() { return xnProductionNodeAddRef(GetHandle()); }
          ^
/usr/include/ni/XnCppWrapper.h:1771:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Please use AddRef() instead.") Ref() { return AddRef(); }
          ^
/usr/include/ni/XnCppWrapper.h:1772:33: error: expected identifier before string constant
   inline void XN_API_DEPRECATED("Please use Release() instead.") Unref() { Release(); }
                                 ^
/usr/include/ni/XnCppWrapper.h:1772:33: error: expected ‘,’ or ‘...’ before string constant
/usr/include/ni/XnCppWrapper.h:1772:64: error: expected ‘;’ at end of member declaration
   inline void XN_API_DEPRECATED("Please use Release() instead.") Unref() { Release(); }
                                                                ^
/usr/include/ni/XnCppWrapper.h:1779:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE ContextShuttingDownCallback(XnContext* /*pContext*/, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:1779:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::NodeWrapper::SetHandle(XnNodeHandle)’:
/usr/include/ni/XnCppWrapper.h:1736:64: error: ‘xnGetRefContextFromNodeHandle’ was not declared in this scope
     XnContext* pContext = xnGetRefContextFromNodeHandle(m_hNode);
                                                                ^
/usr/include/ni/XnCppWrapper.h:1737:70: error: ‘xnContextUnregisterFromShutdown’ was not declared in this scope
     xnContextUnregisterFromShutdown(pContext, m_hShuttingDownCallback);
                                                                      ^
/usr/include/ni/XnCppWrapper.h:1738:30: error: ‘xnContextRelease’ was not declared in this scope
     xnContextRelease(pContext);
                              ^
/usr/include/ni/XnCppWrapper.h:1739:36: error: ‘xnProductionNodeRelease’ was not declared in this scope
     xnProductionNodeRelease(m_hNode);
                                    ^
/usr/include/ni/XnCppWrapper.h:1745:5: error: ‘XnStatus’ was not declared in this scope
     XnStatus nRetVal = xnProductionNodeAddRef(hNode);
     ^
/usr/include/ni/XnCppWrapper.h:1746:15: error: ‘nRetVal’ was not declared in this scope
     XN_ASSERT(nRetVal == XN_STATUS_OK);
               ^
In file included from /usr/include/ni/XnStatusCodes.h:27:0,
                 from /usr/include/ni/XnMacros.h:27,
                 from /usr/include/ni/XnOS.h:28,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:1746:26: error: expected ‘)’ before numeric constant
     XN_ASSERT(nRetVal == XN_STATUS_OK);
                          ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:1749:62: error: ‘xnGetRefContextFromNodeHandle’ was not declared in this scope
     XnContext* pContext = xnGetRefContextFromNodeHandle(hNode);
                                                              ^
/usr/include/ni/XnCppWrapper.h:1751:113: error: ‘xnContextRegisterForShutdown’ was not declared in this scope
     nRetVal = xnContextRegisterForShutdown(pContext, ContextShuttingDownCallback, this, &m_hShuttingDownCallback);
                                                                                                                 ^
In file included from /usr/include/ni/XnStatusCodes.h:27:0,
                 from /usr/include/ni/XnMacros.h:27,
                 from /usr/include/ni/XnOS.h:28,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:1752:26: error: expected ‘)’ before numeric constant
     XN_ASSERT(nRetVal == XN_STATUS_OK);
                          ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:1754:30: error: ‘xnContextRelease’ was not declared in this scope
     xnContextRelease(pContext);
                              ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::NodeWrapper::TakeOwnership(XnNodeHandle)’:
/usr/include/ni/XnCppWrapper.h:1766:34: error: ‘xnProductionNodeRelease’ was not declared in this scope
     xnProductionNodeRelease(hNode);
                                  ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:1856:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetInstanceName(const XnChar* strName)
          ^
/usr/include/ni/XnCppWrapper.h:1890:16: error: ‘XnChar’ does not name a type
   inline const XnChar* GetInstanceName() const
                ^
/usr/include/ni/XnCppWrapper.h:1906:16: error: ‘XnChar’ does not name a type
   inline const XnChar* GetCreationInfo() const
                ^
/usr/include/ni/XnCppWrapper.h:1924:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetInstance(ProductionNode& node) const;
          ^
/usr/include/ni/XnCppWrapper.h:1939:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetTreeStringRepresentation(XnChar* csResultBuffer, XnUInt32 nBufferSize) const
          ^
/usr/include/ni/XnCppWrapper.h:1949:3: error: ‘XnBool’ does not name a type
   XnBool m_bOwnerOfNode; // backwards compatibility
   ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::NodeInfo::NodeInfo(XnNodeInfo*)’:
/usr/include/ni/XnCppWrapper.h:1809:55: error: class ‘xn::NodeInfo’ does not have any field named ‘m_bOwnerOfNode’
   NodeInfo(XnNodeInfo* pInfo) : m_pNeededNodes(NULL), m_bOwnerOfNode(FALSE)
                                                       ^
/usr/include/ni/XnCppWrapper.h: In copy constructor ‘xn::NodeInfo::NodeInfo(const xn::NodeInfo&)’:
/usr/include/ni/XnCppWrapper.h:1819:59: error: class ‘xn::NodeInfo’ does not have any field named ‘m_bOwnerOfNode’
   NodeInfo(const NodeInfo& other) : m_pNeededNodes(NULL), m_bOwnerOfNode(FALSE)
                                                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnProductionNodeDescription& xn::NodeInfo::GetDescription() const’:
/usr/include/ni/XnCppWrapper.h:1876:44: error: ‘xnNodeInfoGetDescription’ was not declared in this scope
    return *xnNodeInfoGetDescription(m_pInfo);
                                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const void* xn::NodeInfo::GetAdditionalData() const’:
/usr/include/ni/XnCppWrapper.h:1932:46: error: ‘xnNodeInfoGetAdditionalData’ was not declared in this scope
    return xnNodeInfoGetAdditionalData(m_pInfo);
                                              ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:2005:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetVendor(const XnChar* strVendor)
          ^
/usr/include/ni/XnCppWrapper.h:2018:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetName(const XnChar* strName)
          ^
/usr/include/ni/XnCppWrapper.h:2026:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetMinVersion(const XnVersion& minVersion)
          ^
/usr/include/ni/XnCppWrapper.h:2034:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetMinVersion(const Version& minVersion)
          ^
/usr/include/ni/XnCppWrapper.h:2042:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetMaxVersion(const XnVersion& maxVersion)
          ^
/usr/include/ni/XnCppWrapper.h:2050:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetMaxVersion(const Version& maxVersion)
          ^
/usr/include/ni/XnCppWrapper.h:2067:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddSupportedCapability(const XnChar* strNeededCapability)
          ^
/usr/include/ni/XnCppWrapper.h:2082:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddSupportedMapOutputMode(const XnMapOutputMode& MapOutputMode)
          ^
/usr/include/ni/XnCppWrapper.h:2091:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetSupportedMinUserPositions(const XnUInt32 nCount)
          ^
/usr/include/ni/XnCppWrapper.h:2107:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetExistingNodeOnly(XnBool bExistingNode)
          ^
/usr/include/ni/XnCppWrapper.h:2116:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddNeededNode(const XnChar* strInstanceName)
          ^
/usr/include/ni/XnCppWrapper.h:2125:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetCreationInfo(const XnChar* strCreationInfo)
          ^
/usr/include/ni/XnCppWrapper.h:2132:3: error: ‘XnBool’ does not name a type
   XnBool m_bAllocated;
   ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::Query::Query()’:
/usr/include/ni/XnCppWrapper.h:1978:20: error: class ‘xn::Query’ does not have any field named ‘m_bAllocated’
   inline Query() : m_bAllocated(TRUE)
                    ^
/usr/include/ni/XnCppWrapper.h:1980:33: error: ‘xnNodeQueryAllocate’ was not declared in this scope
    xnNodeQueryAllocate(&m_pQuery);
                                 ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::Query::Query(XnNodeQuery*)’:
/usr/include/ni/XnCppWrapper.h:1983:43: error: class ‘xn::Query’ does not have any field named ‘m_bAllocated’
   inline Query(XnNodeQuery* pNodeQuery) : m_bAllocated(FALSE), m_pQuery(pNodeQuery)
                                           ^
/usr/include/ni/XnCppWrapper.h: In destructor ‘xn::Query::~Query()’:
/usr/include/ni/XnCppWrapper.h:1989:8: error: ‘m_bAllocated’ was not declared in this scope
    if (m_bAllocated)
        ^
/usr/include/ni/XnCppWrapper.h:1991:29: error: ‘xnNodeQueryFree’ was not declared in this scope
     xnNodeQueryFree(m_pQuery);
                             ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:2166:4: error: ‘XnBool’ does not name a type
    XnBool operator==(const Iterator& other) const
    ^
/usr/include/ni/XnCppWrapper.h:2177:4: error: ‘XnBool’ does not name a type
    XnBool operator!=(const Iterator& other) const
    ^
/usr/include/ni/XnCppWrapper.h:2298:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Add(XnProductionNodeDescription& description, const XnChar* strCreationInfo, NodeInfoList* pNeededNodes)
          ^
/usr/include/ni/XnCppWrapper.h:2308:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddEx(XnProductionNodeDescription& description, const XnChar* strCreationInfo, NodeInfoList* pNeededNodes, const void* pAdditionalData, XnFreeHandler pFreeHandler)
          ^
/usr/include/ni/XnCppWrapper.h:2318:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddNode(NodeInfo& info)
          ^
/usr/include/ni/XnCppWrapper.h:2327:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddNodeFromAnotherList(Iterator& it)
          ^
/usr/include/ni/XnCppWrapper.h:2374:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Remove(Iterator& it)
          ^
/usr/include/ni/XnCppWrapper.h:2383:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Clear()
          ^
/usr/include/ni/XnCppWrapper.h:2392:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Append(NodeInfoList& other)
          ^
/usr/include/ni/XnCppWrapper.h:2400:10: error: ‘XnBool’ does not name a type
   inline XnBool IsEmpty()
          ^
/usr/include/ni/XnCppWrapper.h:2409:10: error: ‘XnStatus’ does not name a type
   inline XnStatus FilterList(Context& context, Query& query);
          ^
/usr/include/ni/XnCppWrapper.h:2423:3: error: ‘XnBool’ does not name a type
   XnBool m_bAllocated;
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfoList::Iterator& xn::NodeInfoList::Iterator::operator++()’:
/usr/include/ni/XnCppWrapper.h:2188:52: error: ‘xnNodeInfoListGetNext’ was not declared in this scope
     UpdateInternalObject(xnNodeInfoListGetNext(m_it));
                                                    ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfoList::Iterator xn::NodeInfoList::Iterator::operator++(int)’:
/usr/include/ni/XnCppWrapper.h:2199:52: error: ‘xnNodeInfoListGetNext’ was not declared in this scope
     UpdateInternalObject(xnNodeInfoListGetNext(m_it));
                                                    ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfoList::Iterator& xn::NodeInfoList::Iterator::operator--()’:
/usr/include/ni/XnCppWrapper.h:2208:56: error: ‘xnNodeInfoListGetPrevious’ was not declared in this scope
     UpdateInternalObject(xnNodeInfoListGetPrevious(m_it));
                                                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfoList::Iterator xn::NodeInfoList::Iterator::operator--(int)’:
/usr/include/ni/XnCppWrapper.h:2218:56: error: ‘xnNodeInfoListGetPrevious’ was not declared in this scope
     UpdateInternalObject(xnNodeInfoListGetPrevious(m_it));
                                                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::NodeInfoList::Iterator::UpdateInternalObject(XnNodeInfoListIterator)’:
/usr/include/ni/XnCppWrapper.h:2239:41: error: ‘xnNodeInfoListIteratorIsValid’ was not declared in this scope
     if (xnNodeInfoListIteratorIsValid(it))
                                         ^
/usr/include/ni/XnCppWrapper.h:2241:53: error: ‘xnNodeInfoListGetCurrent’ was not declared in this scope
      XnNodeInfo* pInfo = xnNodeInfoListGetCurrent(it);
                                                     ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::NodeInfoList::NodeInfoList()’:
/usr/include/ni/XnCppWrapper.h:2259:35: error: ‘xnNodeInfoListAllocate’ was not declared in this scope
    xnNodeInfoListAllocate(&m_pList);
                                   ^
/usr/include/ni/XnCppWrapper.h:2260:4: error: ‘m_bAllocated’ was not declared in this scope
    m_bAllocated = TRUE;
    ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::NodeInfoList::NodeInfoList(XnNodeInfoList*)’:
/usr/include/ni/XnCppWrapper.h:2269:64: error: class ‘xn::NodeInfoList’ does not have any field named ‘m_bAllocated’
   inline NodeInfoList(XnNodeInfoList* pList) : m_pList(pList), m_bAllocated(FALSE) {}
                                                                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::NodeInfoList::ReplaceUnderlyingObject(XnNodeInfoList*)’:
/usr/include/ni/XnCppWrapper.h:2291:4: error: ‘m_bAllocated’ was not declared in this scope
    m_bAllocated = TRUE;
    ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfoList::Iterator xn::NodeInfoList::Begin() const’:
/usr/include/ni/XnCppWrapper.h:2338:50: error: ‘xnNodeInfoListGetFirst’ was not declared in this scope
    return Iterator(xnNodeInfoListGetFirst(m_pList));
                                                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfoList::Iterator xn::NodeInfoList::RBegin() const’:
/usr/include/ni/XnCppWrapper.h:2357:49: error: ‘xnNodeInfoListGetLast’ was not declared in this scope
    return Iterator(xnNodeInfoListGetLast(m_pList));
                                                 ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::NodeInfoList::FreeImpl()’:
/usr/include/ni/XnCppWrapper.h:2414:8: error: ‘m_bAllocated’ was not declared in this scope
    if (m_bAllocated)
        ^
/usr/include/ni/XnCppWrapper.h:2416:31: error: ‘xnNodeInfoListFree’ was not declared in this scope
     xnNodeInfoListFree(m_pList);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:2493:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetErrorState() const
          ^
/usr/include/ni/XnCppWrapper.h:2507:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToErrorStateChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::ErrorStateCapability::UnregisterFromErrorStateChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:2521:31: error: ‘xnUnregisterFromNodeErrorStateChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromNodeErrorStateChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:2539:50: error: ‘XnChar’ does not name a type
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
                                                  ^
/usr/include/ni/XnCppWrapper.h:2540:55: error: ‘XnChar’ does not name a type
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
                                                       ^
/usr/include/ni/XnCppWrapper.h:2546:24: error: ‘XnInt32’ has not been declared
   inline void GetRange(XnInt32& nMin, XnInt32& nMax, XnInt32& nStep, XnInt32& nDefault, XnBool& bIsAutoSupported) const
                        ^
/usr/include/ni/XnCppWrapper.h:2546:39: error: ‘XnInt32’ has not been declared
   inline void GetRange(XnInt32& nMin, XnInt32& nMax, XnInt32& nStep, XnInt32& nDefault, XnBool& bIsAutoSupported) const
                                       ^
/usr/include/ni/XnCppWrapper.h:2546:54: error: ‘XnInt32’ has not been declared
   inline void GetRange(XnInt32& nMin, XnInt32& nMax, XnInt32& nStep, XnInt32& nDefault, XnBool& bIsAutoSupported) const
                                                      ^
/usr/include/ni/XnCppWrapper.h:2546:70: error: ‘XnInt32’ has not been declared
   inline void GetRange(XnInt32& nMin, XnInt32& nMax, XnInt32& nStep, XnInt32& nDefault, XnBool& bIsAutoSupported) const
                                                                      ^
/usr/include/ni/XnCppWrapper.h:2546:89: error: ‘XnBool’ has not been declared
   inline void GetRange(XnInt32& nMin, XnInt32& nMax, XnInt32& nStep, XnInt32& nDefault, XnBool& bIsAutoSupported) const
                                                                                         ^
/usr/include/ni/XnCppWrapper.h:2555:10: error: ‘XnInt32’ does not name a type
   inline XnInt32 Get()
          ^
/usr/include/ni/XnCppWrapper.h:2566:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Set(XnInt32 nValue)
          ^
/usr/include/ni/XnCppWrapper.h:2580:3: error: ‘XnStatus’ does not name a type
   XnStatus RegisterToValueChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback);
   ^
/usr/include/ni/XnCppWrapper.h:2592:9: error: ‘XnChar’ does not name a type
   const XnChar* m_strCap;
         ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)’:
/usr/include/ni/XnCppWrapper.h:2539:87: error: class ‘xn::GeneralIntCapability’ does not have any field named ‘m_strCap’
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
                                                                                       ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)’:
/usr/include/ni/XnCppWrapper.h:2540:91: error: class ‘xn::GeneralIntCapability’ does not have any field named ‘m_strCap’
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
                                                                                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::GeneralIntCapability::GetRange(int&, int&, int&, int&, int&) const’:
/usr/include/ni/XnCppWrapper.h:2548:38: error: ‘m_strCap’ was not declared in this scope
    xnGetGeneralIntRange(GetHandle(), m_strCap, &nMin, &nMax, &nStep, &nDefault, &bIsAutoSupported);
                                      ^
/usr/include/ni/XnCppWrapper.h:2548:98: error: ‘xnGetGeneralIntRange’ was not declared in this scope
    xnGetGeneralIntRange(GetHandle(), m_strCap, &nMin, &nMax, &nStep, &nDefault, &bIsAutoSupported);
                                                                                                  ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:2655:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddNeededNode(ProductionNode& needed)
          ^
/usr/include/ni/XnCppWrapper.h:2664:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RemoveNeededNode(ProductionNode& needed)
          ^
/usr/include/ni/XnCppWrapper.h:2704:10: error: ‘XnBool’ does not name a type
   inline XnBool IsCapabilitySupported(const XnChar* strCapabilityName) const
          ^
/usr/include/ni/XnCppWrapper.h:2713:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetIntProperty(const XnChar* strName, XnUInt64 nValue)
          ^
/usr/include/ni/XnCppWrapper.h:2722:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetRealProperty(const XnChar* strName, XnDouble dValue)
          ^
/usr/include/ni/XnCppWrapper.h:2731:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetStringProperty(const XnChar* strName, const XnChar* strValue)
          ^
/usr/include/ni/XnCppWrapper.h:2740:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetGeneralProperty(const XnChar* strName, XnUInt32 nBufferSize, const void* pBuffer)
          ^
/usr/include/ni/XnCppWrapper.h:2749:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetIntProperty(const XnChar* strName, XnUInt64& nValue) const
          ^
/usr/include/ni/XnCppWrapper.h:2758:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetRealProperty(const XnChar* strName, XnDouble &dValue) const
          ^
/usr/include/ni/XnCppWrapper.h:2767:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetStringProperty(const XnChar* strName, XnChar* csValue, XnUInt32 nBufSize) const
          ^
/usr/include/ni/XnCppWrapper.h:2776:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetGeneralProperty(const XnChar* strName, XnUInt32 nBufferSize, void* pBuffer) const
          ^
/usr/include/ni/XnCppWrapper.h:2785:10: error: ‘XnStatus’ does not name a type
   inline XnStatus LockForChanges(XnLockHandle* phLock)
          ^
/usr/include/ni/XnCppWrapper.h:2794:32: error: ‘XnLockHandle’ has not been declared
   inline void UnlockForChanges(XnLockHandle hLock)
                                ^
/usr/include/ni/XnCppWrapper.h:2803:10: error: ‘XnStatus’ does not name a type
   inline XnStatus LockedNodeStartChanges(XnLockHandle hLock)
          ^
/usr/include/ni/XnCppWrapper.h:2812:36: error: ‘XnLockHandle’ has not been declared
   inline void LockedNodeEndChanges(XnLockHandle hLock)
                                    ^
/usr/include/ni/XnCppWrapper.h:2854:54: error: ‘XnChar’ does not name a type
   inline GeneralIntCapability GetGeneralIntCap(const XnChar* strCapability)
                                                      ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfo xn::ProductionNode::GetInfo() const’:
/usr/include/ni/XnCppWrapper.h:2649:78: error: ‘xnGetNodeInfo’ was not declared in this scope
   inline NodeInfo GetInfo() const { return NodeInfo(xnGetNodeInfo(GetHandle())); }
                                                                              ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::ProductionNode::UnlockForChanges(int)’:
/usr/include/ni/XnCppWrapper.h:2796:45: error: ‘xnUnlockNodeForChanges’ was not declared in this scope
    xnUnlockNodeForChanges(GetHandle(), hLock);
                                             ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::ProductionNode::LockedNodeEndChanges(int)’:
/usr/include/ni/XnCppWrapper.h:2814:45: error: ‘xnLockedNodeEndChanges’ was not declared in this scope
    xnLockedNodeEndChanges(GetHandle(), hLock);
                                             ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:2889:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetDeviceName(XnChar* strBuffer, XnUInt32 nBufferSize)
          ^
/usr/include/ni/XnCppWrapper.h:2903:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetVendorSpecificData(XnChar* strBuffer, XnUInt32 nBufferSize)
          ^
/usr/include/ni/XnCppWrapper.h:2917:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetSerialNumber(XnChar* strBuffer, XnUInt32 nBufferSize)
          ^
/usr/include/ni/XnCppWrapper.h:2950:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:3030:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetMirror(XnBool bMirror)
          ^
/usr/include/ni/XnCppWrapper.h:3038:10: error: ‘XnBool’ does not name a type
   inline XnBool IsMirrored() const
          ^
/usr/include/ni/XnCppWrapper.h:3052:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToMirrorChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::MirrorCapability::UnregisterFromMirrorChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:3066:31: error: ‘xnUnregisterFromMirrorChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromMirrorChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:3122:10: error: ‘XnBool’ does not name a type
   inline XnBool IsViewPointSupported(ProductionNode& otherNode) const
          ^
/usr/include/ni/XnCppWrapper.h:3134:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetViewPoint(ProductionNode& otherNode)
          ^
/usr/include/ni/XnCppWrapper.h:3142:10: error: ‘XnStatus’ does not name a type
   inline XnStatus ResetViewPoint()
          ^
/usr/include/ni/XnCppWrapper.h:3154:10: error: ‘XnBool’ does not name a type
   inline XnBool IsViewPointAs(ProductionNode& otherNode) const
          ^
/usr/include/ni/XnCppWrapper.h:3168:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToViewPointChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:3196:3: error: ‘XnStatus’ does not name a type
   XnStatus GetPixelCoordinatesInViewPoint(ProductionNode& other, XnUInt32 x, XnUInt32 y, XnUInt32& altX, XnUInt32& altY)
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::AlternativeViewPointCapability::UnregisterFromViewPointChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:3182:31: error: ‘xnUnregisterFromViewPointChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromViewPointChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:3237:10: error: ‘XnBool’ does not name a type
   inline XnBool CanFrameSyncWith(Generator& other) const;
          ^
/usr/include/ni/XnCppWrapper.h:3245:10: error: ‘XnStatus’ does not name a type
   inline XnStatus FrameSyncWith(Generator& other);
          ^
/usr/include/ni/XnCppWrapper.h:3251:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopFrameSyncWith(Generator& other);
          ^
/usr/include/ni/XnCppWrapper.h:3259:10: error: ‘XnBool’ does not name a type
   inline XnBool IsFrameSyncedWith(Generator& other) const;
          ^
/usr/include/ni/XnCppWrapper.h:3270:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToFrameSyncChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::FrameSyncCapability::UnregisterFromFrameSyncChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:3284:31: error: ‘xnUnregisterFromFrameSyncChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromFrameSyncChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:3370:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StartGenerating()
          ^
/usr/include/ni/XnCppWrapper.h:3378:10: error: ‘XnBool’ does not name a type
   inline XnBool IsGenerating() const
          ^
/usr/include/ni/XnCppWrapper.h:3391:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopGenerating()
          ^
/usr/include/ni/XnCppWrapper.h:3409:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToGenerationRunningChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle &hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:3439:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToNewDataAvailable(StateChangedHandler handler, void* pCookie, XnCallbackHandle &hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:3464:10: error: ‘XnBool’ does not name a type
   inline XnBool IsNewDataAvailable(XnUInt64* pnTimestamp = NULL) const
          ^
/usr/include/ni/XnCppWrapper.h:3487:10: error: ‘XnStatus’ does not name a type
   inline XnStatus WaitAndUpdateData()
          ^
/usr/include/ni/XnCppWrapper.h:3496:10: error: ‘XnBool’ does not name a type
   inline XnBool IsDataNew() const
          ^
/usr/include/ni/XnCppWrapper.h:3536:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetDataSize() const
          ^
/usr/include/ni/XnCppWrapper.h:3554:10: error: ‘XnUInt64’ does not name a type
   inline XnUInt64 GetTimestamp() const
          ^
/usr/include/ni/XnCppWrapper.h:3571:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetFrameID() const
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Generator::UnregisterFromGenerationRunningChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:3423:31: error: ‘xnUnregisterFromGenerationRunningChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromGenerationRunningChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Generator::UnregisterFromNewDataAvailable(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:3453:31: error: ‘xnUnregisterFromNewDataAvailable’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromNewDataAvailable, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const void* xn::Generator::GetData()’:
/usr/include/ni/XnCppWrapper.h:3520:32: error: ‘xnGetData’ was not declared in this scope
    return xnGetData(GetHandle());
                                ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:3723:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, const XnChar* strFormatName = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:3733:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetDestination(XnRecordMedium destType, const XnChar* strDest)
          ^
/usr/include/ni/XnCppWrapper.h:3747:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetDestination(XnRecordMedium& destType, XnChar* strDest, XnUInt32 nBufSize)
          ^
/usr/include/ni/XnCppWrapper.h:3761:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddNodeToRecording(ProductionNode& Node, XnCodecID compression = XN_CODEC_NULL)
          ^
/usr/include/ni/XnCppWrapper.h:3772:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RemoveNodeFromRecording(ProductionNode& Node)
          ^
/usr/include/ni/XnCppWrapper.h:3789:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Record()
          ^
/usr/include/ni/XnCppWrapper.h:3841:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, const XnChar* strFormatName);
          ^
/usr/include/ni/XnCppWrapper.h:3858:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetRepeat(XnBool bRepeat)
          ^
/usr/include/ni/XnCppWrapper.h:3867:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetSource(XnRecordMedium sourceType, const XnChar* strSource)
          ^
/usr/include/ni/XnCppWrapper.h:3880:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetSource(XnRecordMedium &sourceType, XnChar* strSource, XnUInt32 nBufSize) const
          ^
/usr/include/ni/XnCppWrapper.h:3889:10: error: ‘XnStatus’ does not name a type
   inline XnStatus ReadNext()
          ^
/usr/include/ni/XnCppWrapper.h:3918:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SeekToTimeStamp(XnInt64 nTimeOffset, XnPlayerSeekOrigin origin)
          ^
/usr/include/ni/XnCppWrapper.h:3947:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SeekToFrame(const XnChar* strNodeName, XnInt32 nFrameOffset, XnPlayerSeekOrigin origin)
          ^
/usr/include/ni/XnCppWrapper.h:3957:10: error: ‘XnStatus’ does not name a type
   inline XnStatus TellTimestamp(XnUInt64& nTimestamp) const
          ^
/usr/include/ni/XnCppWrapper.h:3974:10: error: ‘XnStatus’ does not name a type
   inline XnStatus TellFrame(const XnChar* strNodeName, XnUInt32& nFrame) const
          ^
/usr/include/ni/XnCppWrapper.h:3986:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetNumFrames(const XnChar* strNodeName, XnUInt32& nFrames) const
          ^
/usr/include/ni/XnCppWrapper.h:3995:16: error: ‘XnChar’ does not name a type
   inline const XnChar* GetSupportedFormat() const
                ^
/usr/include/ni/XnCppWrapper.h:4004:10: error: ‘XnStatus’ does not name a type
   inline XnStatus EnumerateNodes(NodeInfoList& list) const
          ^
/usr/include/ni/XnCppWrapper.h:4023:10: error: ‘XnBool’ does not name a type
   inline XnBool IsEOF() const
          ^
/usr/include/ni/XnCppWrapper.h:4037:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToEndOfFileReached(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:4072:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetPlaybackSpeed(XnDouble dSpeed)
          ^
/usr/include/ni/XnCppWrapper.h:4081:10: error: ‘XnDouble’ does not name a type
   inline XnDouble GetPlaybackSpeed() const
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Player::UnregisterFromEndOfFileReached(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:4051:31: error: ‘xnUnregisterFromEndOfFileReached’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromEndOfFileReached, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:4134:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetCropping(const XnCropping& Cropping)
          ^
/usr/include/ni/XnCppWrapper.h:4149:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetCropping(XnCropping& Cropping) const
          ^
/usr/include/ni/XnCppWrapper.h:4163:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToCroppingChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::CroppingCapability::UnregisterFromCroppingChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:4177:31: error: ‘xnUnregisterFromCroppingChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromCroppingChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:4204:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetPowerLineFrequency(XnPowerLineFrequency nFrequency)
          ^
/usr/include/ni/XnCppWrapper.h:4227:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToPowerLineFrequencyChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘XnPowerLineFrequency xn::AntiFlickerCapability::GetPowerLineFrequency()’:
/usr/include/ni/XnCppWrapper.h:4215:46: error: ‘xnGetPowerLineFrequency’ was not declared in this scope
    return xnGetPowerLineFrequency(GetHandle());
                                              ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::AntiFlickerCapability::UnregisterFromPowerLineFrequencyChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:4241:31: error: ‘xnUnregisterFromPowerLineFrequencyChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromPowerLineFrequencyChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:4286:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetSupportedMapOutputModesCount() const
          ^
/usr/include/ni/XnCppWrapper.h:4301:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetSupportedMapOutputModes(XnMapOutputMode* aModes, XnUInt32& nCount) const
          ^
/usr/include/ni/XnCppWrapper.h:4319:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetMapOutputMode(const XnMapOutputMode& OutputMode)
          ^
/usr/include/ni/XnCppWrapper.h:4341:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetMapOutputMode(XnMapOutputMode &OutputMode) const
          ^
/usr/include/ni/XnCppWrapper.h:4354:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetBytesPerPixel() const
          ^
/usr/include/ni/XnCppWrapper.h:4368:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToMapOutputModeChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::MapGenerator::UnregisterFromMapOutputModeChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:4382:31: error: ‘xnUnregisterFromMapOutputModeChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromMapOutputModeChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetBrightnessCap()’:
/usr/include/ni/XnCppWrapper.h:4418:69: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [11])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_BRIGHTNESS);
                                                                     ^
/usr/include/ni/XnCppWrapper.h:4418:69: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [11]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [11]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetContrastCap()’:
/usr/include/ni/XnCppWrapper.h:4428:67: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [9])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_CONTRAST);
                                                                   ^
/usr/include/ni/XnCppWrapper.h:4428:67: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [9]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [9]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetHueCap()’:
/usr/include/ni/XnCppWrapper.h:4438:62: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [4])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_HUE);
                                                              ^
/usr/include/ni/XnCppWrapper.h:4438:62: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [4]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [4]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetSaturationCap()’:
/usr/include/ni/XnCppWrapper.h:4448:69: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [11])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_SATURATION);
                                                                     ^
/usr/include/ni/XnCppWrapper.h:4448:69: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [11]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [11]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetSharpnessCap()’:
/usr/include/ni/XnCppWrapper.h:4458:68: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [10])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_SHARPNESS);
                                                                    ^
/usr/include/ni/XnCppWrapper.h:4458:68: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [10]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [10]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetGammaCap()’:
/usr/include/ni/XnCppWrapper.h:4468:64: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [6])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_GAMMA);
                                                                ^
/usr/include/ni/XnCppWrapper.h:4468:64: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [6]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [6]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetWhiteBalanceCap()’:
/usr/include/ni/XnCppWrapper.h:4478:76: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [17])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_COLOR_TEMPERATURE);
                                                                            ^
/usr/include/ni/XnCppWrapper.h:4478:76: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [17]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [17]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetBacklightCompensationCap()’:
/usr/include/ni/XnCppWrapper.h:4488:81: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [22])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_BACKLIGHT_COMPENSATION);
                                                                                 ^
/usr/include/ni/XnCppWrapper.h:4488:81: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [22]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [22]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetGainCap()’:
/usr/include/ni/XnCppWrapper.h:4498:63: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [5])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_GAIN);
                                                               ^
/usr/include/ni/XnCppWrapper.h:4498:63: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetPanCap()’:
/usr/include/ni/XnCppWrapper.h:4508:62: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [4])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_PAN);
                                                              ^
/usr/include/ni/XnCppWrapper.h:4508:62: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [4]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [4]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetTiltCap()’:
/usr/include/ni/XnCppWrapper.h:4518:63: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [5])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_TILT);
                                                               ^
/usr/include/ni/XnCppWrapper.h:4518:63: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetRollCap()’:
/usr/include/ni/XnCppWrapper.h:4528:63: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [5])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_ROLL);
                                                               ^
/usr/include/ni/XnCppWrapper.h:4528:63: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetZoomCap()’:
/usr/include/ni/XnCppWrapper.h:4538:63: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [5])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_ZOOM);
                                                               ^
/usr/include/ni/XnCppWrapper.h:4538:63: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetExposureCap()’:
/usr/include/ni/XnCppWrapper.h:4548:67: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [9])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_EXPOSURE);
                                                                   ^
/usr/include/ni/XnCppWrapper.h:4548:67: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [9]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [9]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetAutoExposureCap()’:
/usr/include/ni/XnCppWrapper.h:4558:72: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [13])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_AUTO_EXPOSURE);
                                                                        ^
/usr/include/ni/XnCppWrapper.h:4558:72: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [13]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [13]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetIrisCap()’:
/usr/include/ni/XnCppWrapper.h:4569:63: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [5])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_IRIS);
                                                               ^
/usr/include/ni/XnCppWrapper.h:4569:63: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetFocusCap()’:
/usr/include/ni/XnCppWrapper.h:4579:64: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [6])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_FOCUS);
                                                                ^
/usr/include/ni/XnCppWrapper.h:4579:64: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [6]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [6]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::GeneralIntCapability xn::MapGenerator::GetLowLightCompensationCap()’:
/usr/include/ni/XnCppWrapper.h:4589:81: error: no matching function for call to ‘xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const char [21])’
    return GeneralIntCapability(GetHandle(), XN_CAPABILITY_LOW_LIGHT_COMPENSATION);
                                                                                 ^
/usr/include/ni/XnCppWrapper.h:4589:81: note: candidates are:
/usr/include/ni/XnCppWrapper.h:2540:3: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::NodeWrapper&, const int*)
   GeneralIntCapability(const NodeWrapper& node, const XnChar* strCap) : Capability(node), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2540:3: note:   no known conversion for argument 2 from ‘const char [21]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2539:3: note: xn::GeneralIntCapability::GeneralIntCapability(XnNodeHandle, const int*)
   GeneralIntCapability(XnNodeHandle hNode, const XnChar* strCap) : Capability(hNode), m_strCap(strCap) {}
   ^
/usr/include/ni/XnCppWrapper.h:2539:3: note:   no known conversion for argument 2 from ‘const char [21]’ to ‘const int*’
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(const xn::GeneralIntCapability&)
  class GeneralIntCapability : public Capability
        ^
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h:2530:8: note: xn::GeneralIntCapability::GeneralIntCapability(xn::GeneralIntCapability&&)
/usr/include/ni/XnCppWrapper.h:2530:8: note:   candidate expects 1 argument, 2 provided
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:4626:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetSupportedUserPositionsCount() const
          ^
/usr/include/ni/XnCppWrapper.h:4635:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetUserPosition(XnUInt32 nIndex, const XnBoundingBox3D& Position)
          ^
/usr/include/ni/XnCppWrapper.h:4644:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetUserPosition(XnUInt32 nIndex, XnBoundingBox3D& Position) const
          ^
/usr/include/ni/XnCppWrapper.h:4658:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToUserPositionChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::UserPositionCapability::UnregisterFromUserPositionChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:4672:31: error: ‘xnUnregisterFromUserPositionChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromUserPositionChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:4738:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:4765:16: error: ‘XnDepthPixel’ does not name a type
   inline const XnDepthPixel* GetDepthMap() const
                ^
/usr/include/ni/XnCppWrapper.h:4779:10: error: ‘XnDepthPixel’ does not name a type
   inline XnDepthPixel GetDeviceMaxDepth() const
          ^
/usr/include/ni/XnCppWrapper.h:4802:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetFieldOfView(XnFieldOfView& FOV) const
          ^
/usr/include/ni/XnCppWrapper.h:4816:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToFieldOfViewChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:4842:10: error: ‘XnStatus’ does not name a type
   inline XnStatus ConvertProjectiveToRealWorld(XnUInt32 nCount, const XnPoint3D aProjective[], XnPoint3D aRealWorld[]) const
          ^
/usr/include/ni/XnCppWrapper.h:4856:10: error: ‘XnStatus’ does not name a type
   inline XnStatus ConvertRealWorldToProjective(XnUInt32 nCount, const XnPoint3D aRealWorld[], XnPoint3D aProjective[]) const
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::DepthGenerator::GetMetaData(xn::DepthMetaData&) const’:
/usr/include/ni/XnCppWrapper.h:4758:60: error: ‘xnGetDepthMetaData’ was not declared in this scope
    xnGetDepthMetaData(GetHandle(), metaData.GetUnderlying());
                                                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::DepthGenerator::UnregisterFromFieldOfViewChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:4830:31: error: ‘xnUnregisterFromDepthFieldOfViewChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromDepthFieldOfViewChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:4903:3: error: ‘XnStatus’ does not name a type
   XnStatus Create(Context& context, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:4912:3: error: ‘XnStatus’ does not name a type
   XnStatus CreateBasedOn(DepthGenerator& other, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:4918:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnDepthPixel* pDepthMap)
          ^
/usr/include/ni/XnCppWrapper.h:4931:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const DepthMetaData& depthMD, XnUInt32 nFrameID, XnUInt64 nTimestamp)
          ^
/usr/include/ni/XnCppWrapper.h:4941:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const DepthMetaData& depthMD)
          ^
/usr/include/ni/XnCppWrapper.h:4981:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:5026:16: error: ‘XnGrayscale8Pixel’ does not name a type
   inline const XnGrayscale8Pixel* GetGrayscale8ImageMap() const
                ^
/usr/include/ni/XnCppWrapper.h:5035:16: error: ‘XnGrayscale16Pixel’ does not name a type
   inline const XnGrayscale16Pixel* GetGrayscale16ImageMap() const
                ^
/usr/include/ni/XnCppWrapper.h:5044:16: error: ‘XnUInt8’ does not name a type
   inline const XnUInt8* GetImageMap() const
                ^
/usr/include/ni/XnCppWrapper.h:5059:10: error: ‘XnBool’ does not name a type
   inline XnBool IsPixelFormatSupported(XnPixelFormat Format) const
          ^
/usr/include/ni/XnCppWrapper.h:5081:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetPixelFormat(XnPixelFormat Format)
          ^
/usr/include/ni/XnCppWrapper.h:5110:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToPixelFormatChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::ImageGenerator::GetMetaData(xn::ImageMetaData&) const’:
/usr/include/ni/XnCppWrapper.h:5001:60: error: ‘xnGetImageMetaData’ was not declared in this scope
    xnGetImageMetaData(GetHandle(), metaData.GetUnderlying());
                                                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnRGB24Pixel* xn::ImageGenerator::GetRGB24ImageMap() const’:
/usr/include/ni/XnCppWrapper.h:5010:41: error: ‘xnGetRGB24ImageMap’ was not declared in this scope
    return xnGetRGB24ImageMap(GetHandle());
                                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnYUV422DoublePixel* xn::ImageGenerator::GetYUV422ImageMap() const’:
/usr/include/ni/XnCppWrapper.h:5019:42: error: ‘xnGetYUV422ImageMap’ was not declared in this scope
    return xnGetYUV422ImageMap(GetHandle());
                                          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘XnPixelFormat xn::ImageGenerator::GetPixelFormat() const’:
/usr/include/ni/XnCppWrapper.h:5098:39: error: ‘xnGetPixelFormat’ was not declared in this scope
    return xnGetPixelFormat(GetHandle());
                                       ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::ImageGenerator::UnregisterFromPixelFormatChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:5124:31: error: ‘xnUnregisterFromPixelFormatChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromPixelFormatChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:5149:3: error: ‘XnStatus’ does not name a type
   XnStatus Create(Context& context, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:5158:3: error: ‘XnStatus’ does not name a type
   XnStatus CreateBasedOn(ImageGenerator& other, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:5164:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnUInt8* pImageMap)
          ^
/usr/include/ni/XnCppWrapper.h:5177:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const ImageMetaData& imageMD, XnUInt32 nFrameID, XnUInt64 nTimestamp)
          ^
/usr/include/ni/XnCppWrapper.h:5187:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const ImageMetaData& imageMD)
          ^
/usr/include/ni/XnCppWrapper.h:5218:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:5244:16: error: ‘XnIRPixel’ does not name a type
   inline const XnIRPixel* GetIRMap() const
                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::IRGenerator::GetMetaData(xn::IRMetaData&) const’:
/usr/include/ni/XnCppWrapper.h:5238:57: error: ‘xnGetIRMetaData’ was not declared in this scope
    xnGetIRMetaData(GetHandle(), metaData.GetUnderlying());
                                                         ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:5271:3: error: ‘XnStatus’ does not name a type
   XnStatus Create(Context& context, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:5278:3: error: ‘XnStatus’ does not name a type
   XnStatus CreateBasedOn(IRGenerator& other, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:5284:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnIRPixel* pIRMap)
          ^
/usr/include/ni/XnCppWrapper.h:5297:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const IRMetaData& irMD, XnUInt32 nFrameID, XnUInt64 nTimestamp)
          ^
/usr/include/ni/XnCppWrapper.h:5307:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const IRMetaData& irMD)
          ^
/usr/include/ni/XnCppWrapper.h:5404:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:5419:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddGesture(const XnChar* strGesture, XnBoundingBox3D* pArea)
          ^
/usr/include/ni/XnCppWrapper.h:5431:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RemoveGesture(const XnChar* strGesture)
          ^
/usr/include/ni/XnCppWrapper.h:5444:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetAllActiveGestures(XnChar** astrGestures, XnUInt32 nNameLength, XnUInt16& nGestures) const
          ^
/usr/include/ni/XnCppWrapper.h:5453:16: error: ‘XnUInt16’ does not name a type
         inline XnUInt16 GetNumberOfAvailableGestures() const
                ^
/usr/include/ni/XnCppWrapper.h:5466:10: error: ‘XnStatus’ does not name a type
   inline XnStatus EnumerateAllGestures(XnChar** astrGestures, XnUInt32 nNameLength, XnUInt16& nGestures) const
          ^
/usr/include/ni/XnCppWrapper.h:5476:10: error: ‘XnBool’ does not name a type
   inline XnBool IsGestureAvailable(const XnChar* strGesture) const
          ^
/usr/include/ni/XnCppWrapper.h:5485:10: error: ‘XnBool’ does not name a type
   inline XnBool IsGestureProgressSupported(const XnChar* strGesture) const
          ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:5511:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* GestureRecognized)(GestureGenerator& generator, const XnChar* strGesture, const XnPoint3D* pIDPosition, const XnPoint3D* pEndPosition, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:5539:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* GestureProgress)(GestureGenerator& generator, const XnChar* strGesture, const XnPoint3D* pPosition, XnFloat fProgress, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:5552:3: error: ‘XnStatus’ does not name a type
   XnStatus RegisterGestureCallbacks(GestureRecognized RecognizedCB, GestureProgress ProgressCB, void* pCookie, XnCallbackHandle& hCallback)
   ^
/usr/include/ni/XnCppWrapper.h:5597:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToGestureChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:5641:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* GestureIntermediateStageCompleted)(GestureGenerator& generator, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:5652:3: error: ‘XnStatus’ does not name a type
   XnStatus RegisterToGestureIntermediateStageCompleted(GestureIntermediateStageCompleted handler, void* pCookie, XnCallbackHandle& hCallback)
   ^
/usr/include/ni/XnCppWrapper.h:5705:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* GestureReadyForNextIntermediateStage)(GestureGenerator& generator, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:5716:3: error: ‘XnStatus’ does not name a type
   XnStatus RegisterToGestureReadyForNextIntermediateStage(GestureReadyForNextIntermediateStage handler, void* pCookie, XnCallbackHandle& hCallback)
   ^
/usr/include/ni/XnCppWrapper.h:5752:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Use GetAllActiveGestures() instead") GetActiveGestures(XnChar*& astrGestures, XnUInt16& nGestures) const
          ^
/usr/include/ni/XnCppWrapper.h:5756:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Use EnumerateAllGestures() instead") EnumerateGestures(XnChar*& astrGestures, XnUInt16& nGestures) const
          ^
/usr/include/ni/XnCppWrapper.h:5765:4: error: ‘GestureRecognized’ does not name a type
    GestureRecognized recognizedHandler;
    ^
/usr/include/ni/XnCppWrapper.h:5766:4: error: ‘GestureProgress’ does not name a type
    GestureProgress progressHandler;
    ^
/usr/include/ni/XnCppWrapper.h:5771:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE GestureRecognizedCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pIDPosition, const XnPoint3D* pEndPosition, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:5771:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:5771:84: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE GestureRecognizedCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pIDPosition, const XnPoint3D* pEndPosition, void* pCookie)
                                                                                    ^
/usr/include/ni/XnCppWrapper.h:5781:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE GestureProgressCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, XnFloat fProgress, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:5781:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:5781:82: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE GestureProgressCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, XnFloat fProgress, void* pCookie)
                                                                                  ^
/usr/include/ni/XnCppWrapper.h:5781:130: error: ‘XnFloat’ has not been declared
   static void XN_CALLBACK_TYPE GestureProgressCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, XnFloat fProgress, void* pCookie)
                                                                                                                                  ^
/usr/include/ni/XnCppWrapper.h:5793:4: error: ‘GestureIntermediateStageCompleted’ does not name a type
    GestureIntermediateStageCompleted handler;
    ^
/usr/include/ni/XnCppWrapper.h:5798:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE GestureIntermediateStageCompletedCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:5798:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:5798:100: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE GestureIntermediateStageCompletedCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie)
                                                                                                    ^
/usr/include/ni/XnCppWrapper.h:5810:4: error: ‘GestureReadyForNextIntermediateStage’ does not name a type
    GestureReadyForNextIntermediateStage handler;
    ^
/usr/include/ni/XnCppWrapper.h:5815:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE GestureReadyForNextIntermediateStageCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:5815:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:5815:103: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE GestureReadyForNextIntermediateStageCallback(XnNodeHandle hNode, const XnChar* strGesture, const XnPoint3D* pPosition, void* pCookie)
                                                                                                       ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::GestureGenerator::UnregisterGestureCallbacks(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:5584:71: error: ‘xnUnregisterGestureCallbacks’ was not declared in this scope
    xnUnregisterGestureCallbacks(GetHandle(), pGestureCookie->hCallback);
                                                                       ^
/usr/include/ni/XnCppWrapper.h:5585:27: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pGestureCookie);
                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::GestureGenerator::UnregisterFromGestureChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:5611:31: error: ‘xnUnregisterFromGestureChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromGestureChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::GestureGenerator::UnregisterFromGestureIntermediateStageCompleted(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:5683:92: error: ‘xnUnregisterFromGestureIntermediateStageCompleted’ was not declared in this scope
    xnUnregisterFromGestureIntermediateStageCompleted(GetHandle(), pGestureCookie->hCallback);
                                                                                            ^
/usr/include/ni/XnCppWrapper.h:5684:27: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pGestureCookie);
                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::GestureGenerator::UnregisterFromGestureReadyForNextIntermediateStageCallbacks(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:5747:95: error: ‘xnUnregisterFromGestureReadyForNextIntermediateStage’ was not declared in this scope
    xnUnregisterFromGestureReadyForNextIntermediateStage(GetHandle(), pGestureCookie->hCallback);
                                                                                               ^
/usr/include/ni/XnCppWrapper.h:5748:27: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pGestureCookie);
                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::GestureGenerator::GestureRecognizedCallback(XnNodeHandle, const int*, const XnPoint3D*, const XnPoint3D*, void*)’:
/usr/include/ni/XnCppWrapper.h:5775:24: error: ‘xn::GestureGenerator::GestureCookie’ has no member named ‘recognizedHandler’
    if (pGestureCookie->recognizedHandler != NULL)
                        ^
/usr/include/ni/XnCppWrapper.h:5777:21: error: ‘xn::GestureGenerator::GestureCookie’ has no member named ‘recognizedHandler’
     pGestureCookie->recognizedHandler(gen, strGesture, pIDPosition, pEndPosition, pGestureCookie->pUserCookie);
                     ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::GestureGenerator::GestureProgressCallback(XnNodeHandle, const int*, const XnPoint3D*, int, void*)’:
/usr/include/ni/XnCppWrapper.h:5785:24: error: ‘xn::GestureGenerator::GestureCookie’ has no member named ‘progressHandler’
    if (pGestureCookie->progressHandler != NULL)
                        ^
/usr/include/ni/XnCppWrapper.h:5787:21: error: ‘xn::GestureGenerator::GestureCookie’ has no member named ‘progressHandler’
     pGestureCookie->progressHandler(gen, strGesture, pPosition, fProgress, pGestureCookie->pUserCookie);
                     ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::GestureGenerator::GestureIntermediateStageCompletedCallback(XnNodeHandle, const int*, const XnPoint3D*, void*)’:
/usr/include/ni/XnCppWrapper.h:5802:24: error: ‘xn::GestureGenerator::GestureIntermediateStageCompletedCookie’ has no member named ‘handler’
    if (pGestureCookie->handler != NULL)
                        ^
/usr/include/ni/XnCppWrapper.h:5804:21: error: ‘xn::GestureGenerator::GestureIntermediateStageCompletedCookie’ has no member named ‘handler’
     pGestureCookie->handler(gen, strGesture, pPosition, pGestureCookie->pUserCookie);
                     ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::GestureGenerator::GestureReadyForNextIntermediateStageCallback(XnNodeHandle, const int*, const XnPoint3D*, void*)’:
/usr/include/ni/XnCppWrapper.h:5819:24: error: ‘xn::GestureGenerator::GestureReadyForNextIntermediateStageCookie’ has no member named ‘handler’
    if (pGestureCookie->handler != NULL)
                        ^
/usr/include/ni/XnCppWrapper.h:5821:21: error: ‘xn::GestureGenerator::GestureReadyForNextIntermediateStageCookie’ has no member named ‘handler’
     pGestureCookie->handler(gen, strGesture, pPosition, pGestureCookie->pUserCookie);
                     ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:5862:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:5893:16: error: ‘XnLabel’ does not name a type
   inline const XnLabel* GetLabelMap() const
                ^
/usr/include/ni/XnCppWrapper.h:5903:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetFloor(XnPlane3D& Plane) const
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::SceneAnalyzer::GetMetaData(xn::SceneMetaData&) const’:
/usr/include/ni/XnCppWrapper.h:5886:60: error: ‘xnGetSceneMetaData’ was not declared in this scope
    xnGetSceneMetaData(GetHandle(), metaData.GetUnderlying());
                                                            ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:5937:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* HandTouchingFOVEdge)(HandTouchingFOVEdgeCapability& touchingfov, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, XnDirection eDir, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:5948:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToHandTouchingFOVEdge(HandTouchingFOVEdge handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:5985:4: error: ‘HandTouchingFOVEdge’ does not name a type
    HandTouchingFOVEdge handler;
    ^
/usr/include/ni/XnCppWrapper.h:5990:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE HandTouchingFOVEdgeCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, XnDirection eDir, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:5990:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:5990:74: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE HandTouchingFOVEdgeCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, XnDirection eDir, void* pCookie)
                                                                          ^
/usr/include/ni/XnCppWrapper.h:5990:117: error: ‘XnFloat’ has not been declared
   static void XN_CALLBACK_TYPE HandTouchingFOVEdgeCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, XnDirection eDir, void* pCookie)
                                                                                                                     ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::HandTouchingFOVEdgeCapability::UnregisterFromHandTouchingFOVEdge(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:5979:75: error: ‘xnUnregisterFromHandTouchingFOVEdge’ was not declared in this scope
    xnUnregisterFromHandTouchingFOVEdge(GetHandle(), pHandCookie->hCallback);
                                                                           ^
/usr/include/ni/XnCppWrapper.h:5980:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pHandCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::HandTouchingFOVEdgeCapability::HandTouchingFOVEdgeCB(XnNodeHandle, int, const XnPoint3D*, int, XnDirection, void*)’:
/usr/include/ni/XnCppWrapper.h:5994:21: error: ‘struct xn::HandTouchingFOVEdgeCapability::HandTouchingFOVEdgeCookie’ has no member named ‘handler’
    if (pHandCookie->handler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:5996:18: error: ‘struct xn::HandTouchingFOVEdgeCapability::HandTouchingFOVEdgeCookie’ has no member named ‘handler’
     pHandCookie->handler(cap, user, pPosition, fTime, eDir, pHandCookie->pUserCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:6107:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:6124:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* HandCreate)(HandsGenerator& generator, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:6142:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* HandUpdate)(HandsGenerator& generator, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:6157:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* HandDestroy)(HandsGenerator& generator, XnUserID user, XnFloat fTime, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:6171:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterHandCallbacks(HandCreate CreateCB, HandUpdate UpdateCB, HandDestroy DestroyCB, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:6221:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopTracking(XnUserID user)
          ^
/usr/include/ni/XnCppWrapper.h:6234:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopTrackingAll()
          ^
/usr/include/ni/XnCppWrapper.h:6255:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StartTracking(const XnPoint3D& ptPosition)
          ^
/usr/include/ni/XnCppWrapper.h:6276:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetSmoothing(XnFloat fSmoothingFactor)
          ^
/usr/include/ni/XnCppWrapper.h:6308:4: error: ‘HandCreate’ does not name a type
    HandCreate createHandler;
    ^
/usr/include/ni/XnCppWrapper.h:6309:4: error: ‘HandUpdate’ does not name a type
    HandUpdate updateHandler;
    ^
/usr/include/ni/XnCppWrapper.h:6310:4: error: ‘HandDestroy’ does not name a type
    HandDestroy destroyHandler;
    ^
/usr/include/ni/XnCppWrapper.h:6315:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE HandCreateCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:6315:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:6315:65: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE HandCreateCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie)
                                                                 ^
/usr/include/ni/XnCppWrapper.h:6315:108: error: ‘XnFloat’ has not been declared
   static void XN_CALLBACK_TYPE HandCreateCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie)
                                                                                                            ^
/usr/include/ni/XnCppWrapper.h:6324:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE HandUpdateCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:6324:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:6324:65: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE HandUpdateCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie)
                                                                 ^
/usr/include/ni/XnCppWrapper.h:6324:108: error: ‘XnFloat’ has not been declared
   static void XN_CALLBACK_TYPE HandUpdateCB(XnNodeHandle hNode, XnUserID user, const XnPoint3D* pPosition, XnFloat fTime, void* pCookie)
                                                                                                            ^
/usr/include/ni/XnCppWrapper.h:6333:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE HandDestroyCB(XnNodeHandle hNode, XnUserID user, XnFloat fTime, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:6333:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:6333:66: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE HandDestroyCB(XnNodeHandle hNode, XnUserID user, XnFloat fTime, void* pCookie)
                                                                  ^
/usr/include/ni/XnCppWrapper.h:6333:81: error: ‘XnFloat’ has not been declared
   static void XN_CALLBACK_TYPE HandDestroyCB(XnNodeHandle hNode, XnUserID user, XnFloat fTime, void* pCookie)
                                                                                 ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::HandsGenerator::UnregisterHandCallbacks(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:6204:65: error: ‘xnUnregisterHandCallbacks’ was not declared in this scope
    xnUnregisterHandCallbacks(GetHandle(), pHandCookie->hCallback);
                                                                 ^
/usr/include/ni/XnCppWrapper.h:6205:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pHandCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::HandsGenerator::HandCreateCB(XnNodeHandle, int, const XnPoint3D*, int, void*)’:
/usr/include/ni/XnCppWrapper.h:6319:21: error: ‘struct xn::HandsGenerator::HandCookie’ has no member named ‘createHandler’
    if (pHandCookie->createHandler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:6321:18: error: ‘struct xn::HandsGenerator::HandCookie’ has no member named ‘createHandler’
     pHandCookie->createHandler(gen, user, pPosition, fTime, pHandCookie->pUserCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::HandsGenerator::HandUpdateCB(XnNodeHandle, int, const XnPoint3D*, int, void*)’:
/usr/include/ni/XnCppWrapper.h:6328:21: error: ‘struct xn::HandsGenerator::HandCookie’ has no member named ‘updateHandler’
    if (pHandCookie->updateHandler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:6330:18: error: ‘struct xn::HandsGenerator::HandCookie’ has no member named ‘updateHandler’
     pHandCookie->updateHandler(gen, user, pPosition, fTime, pHandCookie->pUserCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::HandsGenerator::HandDestroyCB(XnNodeHandle, int, int, void*)’:
/usr/include/ni/XnCppWrapper.h:6337:21: error: ‘struct xn::HandsGenerator::HandCookie’ has no member named ‘destroyHandler’
    if (pHandCookie->destroyHandler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:6339:18: error: ‘struct xn::HandsGenerator::HandCookie’ has no member named ‘destroyHandler’
     pHandCookie->destroyHandler(gen, user, fTime, pHandCookie->pUserCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:6416:10: error: ‘XnBool’ does not name a type
   inline XnBool IsJointAvailable(XnSkeletonJoint eJoint) const
          ^
/usr/include/ni/XnCppWrapper.h:6426:10: error: ‘XnBool’ does not name a type
   inline XnBool IsProfileAvailable(XnSkeletonProfile eProfile) const
          ^
/usr/include/ni/XnCppWrapper.h:6461:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetSkeletonProfile(XnSkeletonProfile eProfile)
          ^
/usr/include/ni/XnCppWrapper.h:6489:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetJointActive(XnSkeletonJoint eJoint, XnBool bState)
          ^
/usr/include/ni/XnCppWrapper.h:6499:10: error: ‘XnBool’ does not name a type
   inline XnBool IsJointActive(XnSkeletonJoint eJoint) const
          ^
/usr/include/ni/XnCppWrapper.h:6513:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToJointConfigurationChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:6534:10: error: ‘XnStatus’ does not name a type
   inline XnStatus EnumerateActiveJoints(XnSkeletonJoint* pJoints, XnUInt16& nJoints) const
          ^
/usr/include/ni/XnCppWrapper.h:6547:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetSkeletonJoint(XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointTransformation& Joint) const
          ^
/usr/include/ni/XnCppWrapper.h:6573:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetSkeletonJointPosition(XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointPosition& Joint) const
          ^
/usr/include/ni/XnCppWrapper.h:6585:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetSkeletonJointOrientation(XnUserID user, XnSkeletonJoint eJoint, XnSkeletonJointOrientation& Joint) const
          ^
/usr/include/ni/XnCppWrapper.h:6600:10: error: ‘XnBool’ does not name a type
   inline XnBool IsTracking(XnUserID user) const
          ^
/usr/include/ni/XnCppWrapper.h:6615:10: error: ‘XnBool’ does not name a type
   inline XnBool IsCalibrated(XnUserID user) const
          ^
/usr/include/ni/XnCppWrapper.h:6630:10: error: ‘XnBool’ does not name a type
   inline XnBool IsCalibrating(XnUserID user) const
          ^
/usr/include/ni/XnCppWrapper.h:6659:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RequestCalibration(XnUserID user, XnBool bForce)
          ^
/usr/include/ni/XnCppWrapper.h:6673:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AbortCalibration(XnUserID user)
          ^
/usr/include/ni/XnCppWrapper.h:6696:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SaveCalibrationDataToFile(XnUserID user, const XnChar* strFileName)
          ^
/usr/include/ni/XnCppWrapper.h:6707:10: error: ‘XnStatus’ does not name a type
   inline XnStatus LoadCalibrationDataFromFile(XnUserID user, const XnChar* strFileName)
          ^
/usr/include/ni/XnCppWrapper.h:6723:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SaveCalibrationData(XnUserID user, XnUInt32 nSlot)
          ^
/usr/include/ni/XnCppWrapper.h:6734:10: error: ‘XnStatus’ does not name a type
   inline XnStatus LoadCalibrationData(XnUserID user, XnUInt32 nSlot)
          ^
/usr/include/ni/XnCppWrapper.h:6744:10: error: ‘XnStatus’ does not name a type
   inline XnStatus ClearCalibrationData(XnUInt32 nSlot)
          ^
/usr/include/ni/XnCppWrapper.h:6754:10: error: ‘XnBool’ does not name a type
   inline XnBool IsCalibrationData(XnUInt32 nSlot) const
          ^
/usr/include/ni/XnCppWrapper.h:6773:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StartTracking(XnUserID user)
          ^
/usr/include/ni/XnCppWrapper.h:6782:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopTracking(XnUserID user)
          ^
/usr/include/ni/XnCppWrapper.h:6795:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Reset(XnUserID user)
          ^
/usr/include/ni/XnCppWrapper.h:6808:10: error: ‘XnBool’ does not name a type
   inline XnBool NeedPoseForCalibration() const
          ^
/usr/include/ni/XnCppWrapper.h:6825:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetCalibrationPose(XnChar* strPose) const
          ^
/usr/include/ni/XnCppWrapper.h:6842:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetSmoothing(XnFloat fSmoothingFactor)
          ^
/usr/include/ni/XnCppWrapper.h:6868:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* CalibrationStart)(SkeletonCapability& skeleton, XnUserID user, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:6887:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* CalibrationEnd)(SkeletonCapability& skeleton, XnUserID user, XnBool bSuccess, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:6900:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToCalibrationStart(CalibrationStart handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:6927:10: error: ‘XnStatus’ does not name a type
   inline XnStatus UnregisterFromCalibrationStart(XnCallbackHandle hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:6956:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* CalibrationInProgress)(SkeletonCapability& skeleton, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:6967:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToCalibrationInProgress(CalibrationInProgress handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7019:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* CalibrationComplete)(SkeletonCapability& skeleton, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:7030:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToCalibrationComplete(CalibrationComplete handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7066:21: error: expected identifier before string constant
   XN_API_DEPRECATED("Use the overload with one argument - the bState parameter is useless")
                     ^
/usr/include/ni/XnCppWrapper.h:7066:21: error: expected ‘,’ or ‘...’ before string constant
/usr/include/ni/XnCppWrapper.h:7066:91: error: expected ‘;’ at end of member declaration
   XN_API_DEPRECATED("Use the overload with one argument - the bState parameter is useless")
                                                                                           ^
/usr/include/ni/XnCppWrapper.h:7067:10: error: ‘XnBool’ does not name a type
   inline XnBool IsJointActive(XnSkeletonJoint eJoint, XnBool /*bState*/) const
          ^
/usr/include/ni/XnCppWrapper.h:7072:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Please use RegisterToCalibrationStart/Complete") RegisterCalibrationCallbacks(CalibrationStart CalibrationStartCB, CalibrationEnd CalibrationEndCB, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7097:33: error: expected identifier before string constant
   inline void XN_API_DEPRECATED("Please use UnregisterFromCalibrationStart/Complete") UnregisterCalibrationCallbacks(XnCallbackHandle hCallback)
                                 ^
/usr/include/ni/XnCppWrapper.h:7097:33: error: expected ‘,’ or ‘...’ before string constant
/usr/include/ni/XnCppWrapper.h:7097:85: error: expected ‘;’ at end of member declaration
   inline void XN_API_DEPRECATED("Please use UnregisterFromCalibrationStart/Complete") UnregisterCalibrationCallbacks(XnCallbackHandle hCallback)
                                                                                     ^
/usr/include/ni/XnCppWrapper.h:7097:15: error: ‘void xn::SkeletonCapability::XN_API_DEPRECATED(int)’ cannot be overloaded
   inline void XN_API_DEPRECATED("Please use UnregisterFromCalibrationStart/Complete") UnregisterCalibrationCallbacks(XnCallbackHandle hCallback)
               ^
/usr/include/ni/XnCppWrapper.h:7066:3: error: with ‘int xn::SkeletonCapability::XN_API_DEPRECATED(int)’
   XN_API_DEPRECATED("Use the overload with one argument - the bState parameter is useless")
   ^
/usr/include/ni/XnCppWrapper.h:7111:4: error: ‘CalibrationStart’ does not name a type
    CalibrationStart startHandler;
    ^
/usr/include/ni/XnCppWrapper.h:7112:4: error: ‘CalibrationEnd’ does not name a type
    CalibrationEnd endHandler;
    ^
/usr/include/ni/XnCppWrapper.h:7117:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE CalibrationStartBundleCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7117:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7117:83: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE CalibrationStartBundleCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
                                                                                   ^
/usr/include/ni/XnCppWrapper.h:7127:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE CalibrationEndBundleCallback(XnNodeHandle hNode, XnUserID user, XnBool bSuccess, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7127:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7127:81: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE CalibrationEndBundleCallback(XnNodeHandle hNode, XnUserID user, XnBool bSuccess, void* pCookie)
                                                                                 ^
/usr/include/ni/XnCppWrapper.h:7127:96: error: ‘XnBool’ has not been declared
   static void XN_CALLBACK_TYPE CalibrationEndBundleCallback(XnNodeHandle hNode, XnUserID user, XnBool bSuccess, void* pCookie)
                                                                                                ^
/usr/include/ni/XnCppWrapper.h:7139:4: error: ‘CalibrationStart’ does not name a type
    CalibrationStart handler;
    ^
/usr/include/ni/XnCppWrapper.h:7144:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE CalibrationStartCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7144:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7144:77: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE CalibrationStartCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
                                                                             ^
/usr/include/ni/XnCppWrapper.h:7156:4: error: ‘CalibrationInProgress’ does not name a type
    CalibrationInProgress handler;
    ^
/usr/include/ni/XnCppWrapper.h:7161:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE CalibrationInProgressCallback(XnNodeHandle hNode, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7161:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7161:82: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE CalibrationInProgressCallback(XnNodeHandle hNode, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie)
                                                                                  ^
/usr/include/ni/XnCppWrapper.h:7173:4: error: ‘CalibrationComplete’ does not name a type
    CalibrationComplete handler;
    ^
/usr/include/ni/XnCppWrapper.h:7178:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE CalibrationCompleteCallback(XnNodeHandle hNode, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7178:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7178:80: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE CalibrationCompleteCallback(XnNodeHandle hNode, XnUserID user, XnCalibrationStatus calibrationError, void* pCookie)
                                                                                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::SkeletonCapability::UnregisterFromJointConfigurationChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:6527:31: error: ‘xnUnregisterFromJointConfigurationChange’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromJointConfigurationChange, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::SkeletonCapability::UnregisterFromCalibrationInProgress(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:6998:81: error: ‘xnUnregisterFromCalibrationInProgress’ was not declared in this scope
    xnUnregisterFromCalibrationInProgress(GetHandle(), pSkeletonCookie->hCallback);
                                                                                 ^
/usr/include/ni/XnCppWrapper.h:6999:28: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pSkeletonCookie);
                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::SkeletonCapability::UnregisterFromCalibrationComplete(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7061:79: error: ‘xnUnregisterFromCalibrationComplete’ was not declared in this scope
    xnUnregisterFromCalibrationComplete(GetHandle(), pSkeletonCookie->hCallback);
                                                                               ^
/usr/include/ni/XnCppWrapper.h:7062:28: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pSkeletonCookie);
                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::SkeletonCapability::UnregisterCalibrationCallbacks(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7102:76: error: ‘xnUnregisterCalibrationCallbacks’ was not declared in this scope
    xnUnregisterCalibrationCallbacks(GetHandle(), pSkeletonCookie->hCallback);
                                                                            ^
/usr/include/ni/XnCppWrapper.h:7104:28: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pSkeletonCookie);
                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::SkeletonCapability::CalibrationStartBundleCallback(XnNodeHandle, int, void*)’:
/usr/include/ni/XnCppWrapper.h:7121:25: error: ‘xn::SkeletonCapability::SkeletonCookie’ has no member named ‘startHandler’
    if (pSkeletonCookie->startHandler != NULL)
                         ^
/usr/include/ni/XnCppWrapper.h:7123:22: error: ‘xn::SkeletonCapability::SkeletonCookie’ has no member named ‘startHandler’
     pSkeletonCookie->startHandler(cap, user, pSkeletonCookie->pUserCookie);
                      ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::SkeletonCapability::CalibrationEndBundleCallback(XnNodeHandle, int, int, void*)’:
/usr/include/ni/XnCppWrapper.h:7131:25: error: ‘xn::SkeletonCapability::SkeletonCookie’ has no member named ‘endHandler’
    if (pSkeletonCookie->endHandler != NULL)
                         ^
/usr/include/ni/XnCppWrapper.h:7133:22: error: ‘xn::SkeletonCapability::SkeletonCookie’ has no member named ‘endHandler’
     pSkeletonCookie->endHandler(cap, user, bSuccess, pSkeletonCookie->pUserCookie);
                      ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::SkeletonCapability::CalibrationStartCallback(XnNodeHandle, int, void*)’:
/usr/include/ni/XnCppWrapper.h:7148:28: error: ‘xn::SkeletonCapability::CalibrationStartCookie’ has no member named ‘handler’
    if (pCalibrationCookie->handler != NULL)
                            ^
/usr/include/ni/XnCppWrapper.h:7150:25: error: ‘xn::SkeletonCapability::CalibrationStartCookie’ has no member named ‘handler’
     pCalibrationCookie->handler(cap, user, pCalibrationCookie->pUserCookie);
                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::SkeletonCapability::CalibrationInProgressCallback(XnNodeHandle, int, XnCalibrationStatus, void*)’:
/usr/include/ni/XnCppWrapper.h:7165:25: error: ‘xn::SkeletonCapability::CalibrationInProgressCookie’ has no member named ‘handler’
    if (pSkeletonCookie->handler != NULL)
                         ^
/usr/include/ni/XnCppWrapper.h:7167:22: error: ‘xn::SkeletonCapability::CalibrationInProgressCookie’ has no member named ‘handler’
     pSkeletonCookie->handler(cap, user, calibrationError, pSkeletonCookie->pUserCookie);
                      ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::SkeletonCapability::CalibrationCompleteCallback(XnNodeHandle, int, XnCalibrationStatus, void*)’:
/usr/include/ni/XnCppWrapper.h:7182:25: error: ‘xn::SkeletonCapability::CalibrationCompleteCookie’ has no member named ‘handler’
    if (pSkeletonCookie->handler != NULL)
                         ^
/usr/include/ni/XnCppWrapper.h:7184:22: error: ‘xn::SkeletonCapability::CalibrationCompleteCookie’ has no member named ‘handler’
     pSkeletonCookie->handler(cap, user, calibrationError, pSkeletonCookie->pUserCookie);
                      ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:7234:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* PoseDetection)(PoseDetectionCapability& pose, const XnChar* strPose, XnUserID user, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:7245:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetNumberOfPoses() const
          ^
/usr/include/ni/XnCppWrapper.h:7262:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetAllAvailablePoses(XnChar** pstrPoses, XnUInt32 nNameLength, XnUInt32& nPoses) const
          ^
/usr/include/ni/XnCppWrapper.h:7267:16: error: ‘XnBool’ does not name a type
         inline XnBool IsPoseSupported(const XnChar* strPose)
                ^
/usr/include/ni/XnCppWrapper.h:7272:16: error: ‘XnStatus’ does not name a type
         inline XnStatus GetPoseStatus(XnUserID userID, const XnChar* poseName, XnUInt64& poseTime, XnPoseDetectionStatus& eStatus, XnPoseDetectionState& eState)
                ^
/usr/include/ni/XnCppWrapper.h:7292:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StartPoseDetection(const XnChar* strPose, XnUserID user)
          ^
/usr/include/ni/XnCppWrapper.h:7308:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopPoseDetection(XnUserID user)
          ^
/usr/include/ni/XnCppWrapper.h:7316:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopSinglePoseDetection(XnUserID user, const XnChar* strPose)
          ^
/usr/include/ni/XnCppWrapper.h:7330:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToPoseDetected(PoseDetection handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7357:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToOutOfPose(PoseDetection handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7423:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* PoseInProgress)(PoseDetectionCapability& pose, const XnChar* strPose, XnUserID user, XnPoseDetectionStatus poseError, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:7441:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToPoseInProgress(PoseInProgress handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7477:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Use GetAllAvailablePoses() instead") GetAvailablePoses(XnChar** pstrPoses, XnUInt32& nPoses) const
          ^
/usr/include/ni/XnCppWrapper.h:7482:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Please use RegisterToPoseDetected/RegisterToOutOfPose instead") RegisterToPoseCallbacks(PoseDetection PoseStartCB, PoseDetection PoseEndCB, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7507:33: error: expected identifier before string constant
   inline void XN_API_DEPRECATED("Please use UnregisterFromPoseDetected/UnregisterFromOutOfPose instead") UnregisterFromPoseCallbacks(XnCallbackHandle hCallback)
                                 ^
/usr/include/ni/XnCppWrapper.h:7507:33: error: expected ‘,’ or ‘...’ before string constant
/usr/include/ni/XnCppWrapper.h:7507:104: error: expected ‘;’ at end of member declaration
   inline void XN_API_DEPRECATED("Please use UnregisterFromPoseDetected/UnregisterFromOutOfPose instead") UnregisterFromPoseCallbacks(XnCallbackHandle hCallback)
                                                                                                        ^
/usr/include/ni/XnCppWrapper.h:7521:4: error: ‘PoseDetection’ does not name a type
    PoseDetection startHandler;
    ^
/usr/include/ni/XnCppWrapper.h:7522:4: error: ‘PoseDetection’ does not name a type
    PoseDetection endHandler;
    ^
/usr/include/ni/XnCppWrapper.h:7527:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE PoseDetectionStartBundleCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7527:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7527:91: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE PoseDetectionStartBundleCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
                                                                                           ^
/usr/include/ni/XnCppWrapper.h:7527:108: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE PoseDetectionStartBundleCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
                                                                                                            ^
/usr/include/ni/XnCppWrapper.h:7537:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE PoseDetectionStartEndBundleCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7537:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7537:94: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE PoseDetectionStartEndBundleCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
                                                                                              ^
/usr/include/ni/XnCppWrapper.h:7537:111: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE PoseDetectionStartEndBundleCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
                                                                                                               ^
/usr/include/ni/XnCppWrapper.h:7548:4: error: ‘PoseDetection’ does not name a type
    PoseDetection handler;
    ^
/usr/include/ni/XnCppWrapper.h:7552:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE PoseDetectionCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7552:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7552:80: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE PoseDetectionCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
                                                                                ^
/usr/include/ni/XnCppWrapper.h:7552:97: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE PoseDetectionCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, void* pCookie)
                                                                                                 ^
/usr/include/ni/XnCppWrapper.h:7564:4: error: ‘PoseInProgress’ does not name a type
    PoseInProgress handler;
    ^
/usr/include/ni/XnCppWrapper.h:7569:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE PoseDetectionInProgressCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, XnPoseDetectionStatus poseErrors, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:7569:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:7569:90: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE PoseDetectionInProgressCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, XnPoseDetectionStatus poseErrors, void* pCookie)
                                                                                          ^
/usr/include/ni/XnCppWrapper.h:7569:107: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE PoseDetectionInProgressCallback(XnNodeHandle hNode, const XnChar* strPose, XnUserID user, XnPoseDetectionStatus poseErrors, void* pCookie)
                                                                                                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::PoseDetectionCapability::UnregisterFromPoseDetected(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7384:68: error: ‘xnUnregisterFromPoseDetected’ was not declared in this scope
    xnUnregisterFromPoseDetected(GetHandle(), pPoseCookie->hCallback);
                                                                    ^
/usr/include/ni/XnCppWrapper.h:7385:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pPoseCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::PoseDetectionCapability::UnregisterFromOutOfPose(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7397:65: error: ‘xnUnregisterFromOutOfPose’ was not declared in this scope
    xnUnregisterFromOutOfPose(GetHandle(), pPoseCookie->hCallback);
                                                                 ^
/usr/include/ni/XnCppWrapper.h:7398:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pPoseCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::PoseDetectionCapability::UnregisterFromPoseInProgress(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7472:79: error: ‘xnUnregisterFromPoseDetectionInProgress’ was not declared in this scope
    xnUnregisterFromPoseDetectionInProgress(GetHandle(), pPoseCookie->hCallback);
                                                                               ^
/usr/include/ni/XnCppWrapper.h:7473:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pPoseCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::PoseDetectionCapability::UnregisterFromPoseCallbacks(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7512:69: error: ‘xnUnregisterFromPoseCallbacks’ was not declared in this scope
    xnUnregisterFromPoseCallbacks(GetHandle(), pPoseCookie->hCallback);
                                                                     ^
/usr/include/ni/XnCppWrapper.h:7514:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pPoseCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::PoseDetectionCapability::PoseDetectionStartBundleCallback(XnNodeHandle, const int*, int, void*)’:
/usr/include/ni/XnCppWrapper.h:7531:21: error: ‘xn::PoseDetectionCapability::PoseCookie’ has no member named ‘startHandler’
    if (pPoseCookie->startHandler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:7533:18: error: ‘xn::PoseDetectionCapability::PoseCookie’ has no member named ‘startHandler’
     pPoseCookie->startHandler(cap, strPose, user, pPoseCookie->pPoseCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::PoseDetectionCapability::PoseDetectionStartEndBundleCallback(XnNodeHandle, const int*, int, void*)’:
/usr/include/ni/XnCppWrapper.h:7541:21: error: ‘xn::PoseDetectionCapability::PoseCookie’ has no member named ‘endHandler’
    if (pPoseCookie->endHandler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:7543:18: error: ‘xn::PoseDetectionCapability::PoseCookie’ has no member named ‘endHandler’
     pPoseCookie->endHandler(cap, strPose, user, pPoseCookie->pPoseCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::PoseDetectionCapability::PoseDetectionCallback(XnNodeHandle, const int*, int, void*)’:
/usr/include/ni/XnCppWrapper.h:7556:30: error: ‘xn::PoseDetectionCapability::PoseDetectionCookie’ has no member named ‘handler’
    if (pPoseDetectionCookie->handler != NULL)
                              ^
/usr/include/ni/XnCppWrapper.h:7558:27: error: ‘xn::PoseDetectionCapability::PoseDetectionCookie’ has no member named ‘handler’
     pPoseDetectionCookie->handler(cap, strPose, user, pPoseDetectionCookie->pPoseCookie);
                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::PoseDetectionCapability::PoseDetectionInProgressCallback(XnNodeHandle, const int*, int, XnPoseDetectionStatus, void*)’:
/usr/include/ni/XnCppWrapper.h:7573:21: error: ‘xn::PoseDetectionCapability::PoseInProgressCookie’ has no member named ‘handler’
    if (pPoseCookie->handler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:7575:18: error: ‘xn::PoseDetectionCapability::PoseInProgressCookie’ has no member named ‘handler’
     pPoseCookie->handler(cap, strPose, user, poseErrors, pPoseCookie->pPoseCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:7709:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:7723:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* UserHandler)(UserGenerator& generator, XnUserID user, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:7732:10: error: ‘XnUInt16’ does not name a type
   inline XnUInt16 GetNumberOfUsers() const
          ^
/usr/include/ni/XnCppWrapper.h:7759:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetUsers(XnUserID aUsers[], XnUInt16& nUsers) const
          ^
/usr/include/ni/XnCppWrapper.h:7783:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetCoM(XnUserID user, XnPoint3D& com) const
          ^
/usr/include/ni/XnCppWrapper.h:7803:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetUserPixels(XnUserID user, SceneMetaData& smd) const
          ^
/usr/include/ni/XnCppWrapper.h:7818:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterUserCallbacks(UserHandler NewUserCB, UserHandler LostUserCB, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7925:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToUserExit(UserHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:7969:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToUserReEnter(UserHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:8007:4: error: ‘UserHandler’ does not name a type
    UserHandler newHandler;
    ^
/usr/include/ni/XnCppWrapper.h:8008:4: error: ‘UserHandler’ does not name a type
    UserHandler lostHandler;
    ^
/usr/include/ni/XnCppWrapper.h:8013:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE NewUserCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:8013:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:8013:68: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE NewUserCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
                                                                    ^
/usr/include/ni/XnCppWrapper.h:8023:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE LostUserCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:8023:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:8023:69: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE LostUserCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
                                                                     ^
/usr/include/ni/XnCppWrapper.h:8035:4: error: ‘UserHandler’ does not name a type
    UserHandler handler;
    ^
/usr/include/ni/XnCppWrapper.h:8040:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE UserSingleCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:8040:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:8040:71: error: ‘XnUserID’ has not been declared
   static void XN_CALLBACK_TYPE UserSingleCallback(XnNodeHandle hNode, XnUserID user, void* pCookie)
                                                                       ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::UserGenerator::UnregisterUserCallbacks(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7850:65: error: ‘xnUnregisterUserCallbacks’ was not declared in this scope
    xnUnregisterUserCallbacks(GetHandle(), pUserCookie->hCallback);
                                                                 ^
/usr/include/ni/XnCppWrapper.h:7851:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pUserCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::UserGenerator::UnregisterFromUserExit(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:7956:64: error: ‘xnUnregisterFromUserExit’ was not declared in this scope
    xnUnregisterFromUserExit(GetHandle(), pUserCookie->hCallback);
                                                                ^
/usr/include/ni/XnCppWrapper.h:7957:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pUserCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::UserGenerator::UnregisterFromUserReEnter(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:8000:67: error: ‘xnUnregisterFromUserReEnter’ was not declared in this scope
    xnUnregisterFromUserReEnter(GetHandle(), pUserCookie->hCallback);
                                                                   ^
/usr/include/ni/XnCppWrapper.h:8001:24: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pUserCookie);
                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::UserGenerator::NewUserCallback(XnNodeHandle, int, void*)’:
/usr/include/ni/XnCppWrapper.h:8017:21: error: ‘struct xn::UserGenerator::UserCookie’ has no member named ‘newHandler’
    if (pUserCookie->newHandler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:8019:18: error: ‘struct xn::UserGenerator::UserCookie’ has no member named ‘newHandler’
     pUserCookie->newHandler(gen, user, pUserCookie->pUserCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::UserGenerator::LostUserCallback(XnNodeHandle, int, void*)’:
/usr/include/ni/XnCppWrapper.h:8027:21: error: ‘struct xn::UserGenerator::UserCookie’ has no member named ‘lostHandler’
    if (pUserCookie->lostHandler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:8029:18: error: ‘struct xn::UserGenerator::UserCookie’ has no member named ‘lostHandler’
     pUserCookie->lostHandler(gen, user, pUserCookie->pUserCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::UserGenerator::UserSingleCallback(XnNodeHandle, int, void*)’:
/usr/include/ni/XnCppWrapper.h:8044:21: error: ‘struct xn::UserGenerator::UserSingleCookie’ has no member named ‘handler’
    if (pUserCookie->handler != NULL)
                     ^
/usr/include/ni/XnCppWrapper.h:8046:18: error: ‘struct xn::UserGenerator::UserSingleCookie’ has no member named ‘handler’
     pUserCookie->handler(gen, user, pUserCookie->pUserCookie);
                  ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:8082:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, Query* pQuery = NULL, EnumerationErrors* pErrors = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:8109:16: error: ‘XnUChar’ does not name a type
   inline const XnUChar* GetAudioBuffer() const
                ^
/usr/include/ni/XnCppWrapper.h:8117:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetSupportedWaveOutputModesCount() const
          ^
/usr/include/ni/XnCppWrapper.h:8128:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetSupportedWaveOutputModes(XnWaveOutputMode* aSupportedModes, XnUInt32& nCount) const
          ^
/usr/include/ni/XnCppWrapper.h:8144:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetWaveOutputMode(const XnWaveOutputMode& OutputMode)
          ^
/usr/include/ni/XnCppWrapper.h:8160:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetWaveOutputMode(XnWaveOutputMode& OutputMode) const
          ^
/usr/include/ni/XnCppWrapper.h:8174:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToWaveOutputModeChanges(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::AudioGenerator::GetMetaData(xn::AudioMetaData&) const’:
/usr/include/ni/XnCppWrapper.h:8102:60: error: ‘xnGetAudioMetaData’ was not declared in this scope
    xnGetAudioMetaData(GetHandle(), metaData.GetUnderlying());
                                                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::AudioGenerator::UnregisterFromWaveOutputModeChanges(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:8188:31: error: ‘xnUnregisterFromWaveOutputModeChanges’ was not declared in this scope
    _UnregisterFromStateChange(xnUnregisterFromWaveOutputModeChanges, GetHandle(), hCallback);
                               ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:8213:3: error: ‘XnStatus’ does not name a type
   XnStatus Create(Context& context, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:8222:3: error: ‘XnStatus’ does not name a type
   XnStatus CreateBasedOn(AudioGenerator& other, const XnChar* strName = NULL);
   ^
/usr/include/ni/XnCppWrapper.h:8228:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const XnUInt8* pAudioBuffer)
          ^
/usr/include/ni/XnCppWrapper.h:8241:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const AudioMetaData& audioMD, XnUInt32 nFrameID, XnUInt64 nTimestamp)
          ^
/usr/include/ni/XnCppWrapper.h:8251:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(const AudioMetaData& audioMD)
          ^
/usr/include/ni/XnCppWrapper.h:8266:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, const XnChar* strName = NULL);
          ^
/usr/include/ni/XnCppWrapper.h:8268:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetData(XnUInt32 nFrameID, XnUInt64 nTimestamp, XnUInt32 nDataSize, const void* pData)
          ^
/usr/include/ni/XnCppWrapper.h:8294:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, XnCodecID codecID, ProductionNode& initializerNode);
          ^
/usr/include/ni/XnCppWrapper.h:8300:10: error: ‘XnCodecID’ does not name a type
   inline XnCodecID GetCodecID() const
          ^
/usr/include/ni/XnCppWrapper.h:8309:10: error: ‘XnStatus’ does not name a type
   inline XnStatus EncodeData(const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten) const
          ^
/usr/include/ni/XnCppWrapper.h:8318:10: error: ‘XnStatus’ does not name a type
   inline XnStatus DecodeData(const void* pSrc, XnUInt32 nSrcSize, void* pDst, XnUInt32 nDstSize, XnUInt* pnBytesWritten) const
          ^
/usr/include/ni/XnCppWrapper.h:8368:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Create(Context& context, const XnChar* strFormat);
          ^
/usr/include/ni/XnCppWrapper.h:8370:16: error: ‘XnChar’ does not name a type
   inline const XnChar* GetSupportedFormat()
                ^
/usr/include/ni/XnCppWrapper.h:8380:10: error: ‘XnStatus’ does not name a type
   inline XnStatus LoadScriptFromFile(const XnChar* strFileName)
          ^
/usr/include/ni/XnCppWrapper.h:8390:10: error: ‘XnStatus’ does not name a type
   inline XnStatus LoadScriptFromString(const XnChar* strScript)
          ^
/usr/include/ni/XnCppWrapper.h:8406:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Run(EnumerationErrors* pErrors);
          ^
/usr/include/ni/XnCppWrapper.h:8447:58: error: ‘XnBool’ has not been declared
   inline EnumerationErrors(XnEnumerationErrors* pErrors, XnBool bOwn = FALSE) : m_bAllocated(bOwn), m_pErrors(pErrors) {}
                                                          ^
/usr/include/ni/XnCppWrapper.h:8467:4: error: ‘XnBool’ does not name a type
    XnBool operator==(const Iterator& other) const
    ^
/usr/include/ni/XnCppWrapper.h:8477:4: error: ‘XnBool’ does not name a type
    XnBool operator!=(const Iterator& other) const
    ^
/usr/include/ni/XnCppWrapper.h:8515:11: error: ‘XnStatus’ does not name a type
    inline XnStatus Error() { return xnEnumerationErrorsGetCurrentError(m_it); }
           ^
/usr/include/ni/XnCppWrapper.h:8551:10: error: ‘XnStatus’ does not name a type
   inline XnStatus ToString(XnChar* csBuffer, XnUInt32 nSize)
          ^
/usr/include/ni/XnCppWrapper.h:8577:3: error: ‘XnBool’ does not name a type
   XnBool m_bAllocated;
   ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::EnumerationErrors::EnumerationErrors()’:
/usr/include/ni/XnCppWrapper.h:8438:32: error: class ‘xn::EnumerationErrors’ does not have any field named ‘m_bAllocated’
   inline EnumerationErrors() : m_bAllocated(TRUE), m_pErrors(NULL) { xnEnumerationErrorsAllocate(&m_pErrors); }
                                ^
/usr/include/ni/XnCppWrapper.h:8438:108: error: ‘xnEnumerationErrorsAllocate’ was not declared in this scope
   inline EnumerationErrors() : m_bAllocated(TRUE), m_pErrors(NULL) { xnEnumerationErrorsAllocate(&m_pErrors); }
                                                                                                            ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::EnumerationErrors::EnumerationErrors(XnEnumerationErrors*, int)’:
/usr/include/ni/XnCppWrapper.h:8447:81: error: class ‘xn::EnumerationErrors’ does not have any field named ‘m_bAllocated’
   inline EnumerationErrors(XnEnumerationErrors* pErrors, XnBool bOwn = FALSE) : m_bAllocated(bOwn), m_pErrors(pErrors) {}
                                                                                 ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::EnumerationErrors::Iterator& xn::EnumerationErrors::Iterator::operator++()’:
/usr/include/ni/XnCppWrapper.h:8488:43: error: ‘xnEnumerationErrorsGetNext’ was not declared in this scope
     m_it = xnEnumerationErrorsGetNext(m_it);
                                           ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::EnumerationErrors::Iterator xn::EnumerationErrors::Iterator::operator++(int)’:
/usr/include/ni/XnCppWrapper.h:8498:52: error: ‘xnEnumerationErrorsGetNext’ was not declared in this scope
     return Iterator(xnEnumerationErrorsGetNext(m_it));
                                                    ^
/usr/include/ni/XnCppWrapper.h: In member function ‘const XnProductionNodeDescription& xn::EnumerationErrors::Iterator::Description()’:
/usr/include/ni/XnCppWrapper.h:8509:115: error: ‘xnEnumerationErrorsGetCurrentDescription’ was not declared in this scope
    inline const XnProductionNodeDescription& Description() { return *xnEnumerationErrorsGetCurrentDescription(m_it); }
                                                                                                                   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::EnumerationErrors::Iterator xn::EnumerationErrors::Begin() const’:
/usr/include/ni/XnCppWrapper.h:8531:88: error: ‘xnEnumerationErrorsGetFirst’ was not declared in this scope
   inline Iterator Begin() const { return Iterator(xnEnumerationErrorsGetFirst(m_pErrors)); }
                                                                                        ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::EnumerationErrors::Free()’:
/usr/include/ni/XnCppWrapper.h:8562:8: error: ‘m_bAllocated’ was not declared in this scope
    if (m_bAllocated)
        ^
/usr/include/ni/XnCppWrapper.h:8564:38: error: ‘xnEnumerationErrorsFree’ was not declared in this scope
     xnEnumerationErrorsFree(m_pErrors);
                                      ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:8636:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* NodeCreationHandler)(Context& context, ProductionNode& createdNode, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:8652:33: error: expected ‘)’ before ‘*’ token
   typedef void (XN_CALLBACK_TYPE* NodeDestructionHandler)(Context& context, const XnChar* strDestroyedNodeName, void* pCookie);
                                 ^
/usr/include/ni/XnCppWrapper.h:8704:10: error: ‘XnBool’ does not name a type
   inline XnBool operator==(const Context& other)
          ^
/usr/include/ni/XnCppWrapper.h:8714:10: error: ‘XnBool’ does not name a type
   inline XnBool operator!=(const Context& other)
          ^
/usr/include/ni/XnCppWrapper.h:8733:10: error: ‘XnStatus’ does not name a type
   inline XnStatus Init()
          ^
/usr/include/ni/XnCppWrapper.h:8760:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RunXmlScript(const XnChar* strScript, ScriptNode& scriptNode, EnumerationErrors* pErrors = NULL)
          ^
/usr/include/ni/XnCppWrapper.h:8788:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RunXmlScriptFromFile(const XnChar* strFileName, ScriptNode& scriptNode, EnumerationErrors* pErrors = NULL)
          ^
/usr/include/ni/XnCppWrapper.h:8816:10: error: ‘XnStatus’ does not name a type
   inline XnStatus InitFromXmlFile(const XnChar* strFileName, ScriptNode& scriptNode, EnumerationErrors* pErrors = NULL)
          ^
/usr/include/ni/XnCppWrapper.h:8847:10: error: ‘XnStatus’ does not name a type
   inline XnStatus OpenFileRecording(const XnChar* strFileName, ProductionNode& playerNode)
          ^
/usr/include/ni/XnCppWrapper.h:8864:10: error: ‘XnStatus’ does not name a type
   inline XnStatus CreateMockNode(XnProductionNodeType type, const XnChar* strName, ProductionNode& mockNode)
          ^
/usr/include/ni/XnCppWrapper.h:8881:10: error: ‘XnStatus’ does not name a type
   inline XnStatus CreateMockNodeBasedOn(ProductionNode& originalNode, const XnChar* strName, ProductionNode& mockNode)
          ^
/usr/include/ni/XnCppWrapper.h:8898:10: error: ‘XnStatus’ does not name a type
   inline XnStatus CreateCodec(XnCodecID codecID, ProductionNode& initializerNode, Codec& codec)
          ^
/usr/include/ni/XnCppWrapper.h:8915:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddRef()
          ^
/usr/include/ni/XnCppWrapper.h:8934:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AddLicense(const XnLicense& License)
          ^
/usr/include/ni/XnCppWrapper.h:8943:10: error: ‘XnStatus’ does not name a type
   inline XnStatus EnumerateLicenses(XnLicense*& aLicenses, XnUInt32& nCount) const
          ^
/usr/include/ni/XnCppWrapper.h:8977:3: error: ‘XnStatus’ does not name a type
   XnStatus EnumerateProductionTrees(XnProductionNodeType Type, const Query* pQuery, NodeInfoList& TreesList, EnumerationErrors* pErrors = NULL) const
   ^
/usr/include/ni/XnCppWrapper.h:9024:3: error: ‘XnStatus’ does not name a type
   XnStatus CreateAnyProductionTree(XnProductionNodeType type, Query* pQuery, ProductionNode& node, EnumerationErrors* pErrors = NULL)
   ^
/usr/include/ni/XnCppWrapper.h:9055:3: error: ‘XnStatus’ does not name a type
   XnStatus CreateProductionTree(NodeInfo& Tree, ProductionNode& node)
   ^
/usr/include/ni/XnCppWrapper.h:9076:3: error: ‘XnStatus’ does not name a type
   XnStatus EnumerateExistingNodes(NodeInfoList& list) const
   ^
/usr/include/ni/XnCppWrapper.h:9105:3: error: ‘XnStatus’ does not name a type
   XnStatus EnumerateExistingNodes(NodeInfoList& list, XnProductionNodeType type) const
   ^
/usr/include/ni/XnCppWrapper.h:9134:3: error: ‘XnStatus’ does not name a type
   XnStatus FindExistingNode(XnProductionNodeType type, ProductionNode& node) const
   ^
/usr/include/ni/XnCppWrapper.h:9151:3: error: ‘XnStatus’ does not name a type
   XnStatus GetProductionNodeByName(const XnChar* strInstanceName, ProductionNode& node) const
   ^
/usr/include/ni/XnCppWrapper.h:9168:3: error: ‘XnStatus’ does not name a type
   XnStatus GetProductionNodeInfoByName(const XnChar* strInstanceName, NodeInfo& nodeInfo) const
   ^
/usr/include/ni/XnCppWrapper.h:9187:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StartGeneratingAll()
          ^
/usr/include/ni/XnCppWrapper.h:9195:10: error: ‘XnStatus’ does not name a type
   inline XnStatus StopGeneratingAll()
          ^
/usr/include/ni/XnCppWrapper.h:9209:10: error: ‘XnStatus’ does not name a type
   inline XnStatus SetGlobalMirror(XnBool bMirror)
          ^
/usr/include/ni/XnCppWrapper.h:9218:10: error: ‘XnBool’ does not name a type
   inline XnBool GetGlobalMirror()
          ^
/usr/include/ni/XnCppWrapper.h:9227:10: error: ‘XnStatus’ does not name a type
   inline XnStatus GetGlobalErrorState()
          ^
/usr/include/ni/XnCppWrapper.h:9241:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToErrorStateChange(XnErrorStateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:9267:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToNodeCreation(NodeCreationHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:9307:10: error: ‘XnStatus’ does not name a type
   inline XnStatus RegisterToNodeDestruction(NodeDestructionHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:9371:10: error: ‘XnStatus’ does not name a type
   inline XnStatus WaitAndUpdateAll()
          ^
/usr/include/ni/XnCppWrapper.h:9410:10: error: ‘XnStatus’ does not name a type
   inline XnStatus WaitAnyUpdateAll()
          ^
/usr/include/ni/XnCppWrapper.h:9445:10: error: ‘XnStatus’ does not name a type
   inline XnStatus WaitOneUpdateAll(ProductionNode& node)
          ^
/usr/include/ni/XnCppWrapper.h:9471:10: error: ‘XnStatus’ does not name a type
   inline XnStatus WaitNoneUpdateAll()
          ^
/usr/include/ni/XnCppWrapper.h:9480:10: error: ‘XnStatus’ does not name a type
   inline XnStatus AutoEnumerateOverSingleInput(NodeInfoList& List, XnProductionNodeDescription& description, const XnChar* strCreationInfo, XnProductionNodeType InputType, EnumerationErrors* pErrors, Query* pQuery = NULL) const
          ^
/usr/include/ni/XnCppWrapper.h:9534:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Use other overload!") RunXmlScript(const XnChar* strScript, EnumerationErrors* pErrors = NULL)
          ^
/usr/include/ni/XnCppWrapper.h:9543:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Use other overload!") RunXmlScriptFromFile(const XnChar* strFileName, EnumerationErrors* pErrors = NULL)
          ^
/usr/include/ni/XnCppWrapper.h:9552:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Use other overload!") InitFromXmlFile(const XnChar* strFileName, EnumerationErrors* pErrors = NULL)
          ^
/usr/include/ni/XnCppWrapper.h:9569:10: error: ‘XnStatus’ does not name a type
   inline XnStatus XN_API_DEPRECATED("Use other overload!") OpenFileRecording(const XnChar* strFileName)
          ^
/usr/include/ni/XnCppWrapper.h:9578:33: error: expected identifier before string constant
   inline void XN_API_DEPRECATED("You may use Release() instead, or count on dtor") Shutdown()
                                 ^
/usr/include/ni/XnCppWrapper.h:9578:33: error: expected ‘,’ or ‘...’ before string constant
/usr/include/ni/XnCppWrapper.h:9578:82: error: expected ‘;’ at end of member declaration
   inline void XN_API_DEPRECATED("You may use Release() instead, or count on dtor") Shutdown()
                                                                                  ^
/usr/include/ni/XnCppWrapper.h:9590:3: error: ‘XnStatus’ does not name a type
   XnStatus XN_API_DEPRECATED("Please use other overload") CreateProductionTree(NodeInfo& Tree)
   ^
/usr/include/ni/XnCppWrapper.h:9607:4: error: ‘NodeCreationHandler’ does not name a type
    NodeCreationHandler pFunc;
    ^
/usr/include/ni/XnCppWrapper.h:9614:4: error: ‘NodeDestructionHandler’ does not name a type
    NodeDestructionHandler pFunc;
    ^
/usr/include/ni/XnCppWrapper.h:9619:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE NodeCreationCallback(XnContext* pContext, XnNodeHandle hCreatedNode, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:9619:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:9627:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE NodeDestructionCallback(XnContext* pContext, const XnChar* strDestroyedNodeName, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:9627:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:9627:83: error: ‘XnChar’ does not name a type
   static void XN_CALLBACK_TYPE NodeDestructionCallback(XnContext* pContext, const XnChar* strDestroyedNodeName, void* pCookie)
                                                                                   ^
/usr/include/ni/XnCppWrapper.h:9634:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE ContextShuttingDownCallback(XnContext* /*pContext*/, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:9634:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:9641:3: error: ‘XnBool’ does not name a type
   XnBool m_bUsingDeprecatedAPI;
   ^
/usr/include/ni/XnCppWrapper.h:9642:3: error: ‘XnBool’ does not name a type
   XnBool m_bAllocated;
   ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::Context::Context()’:
/usr/include/ni/XnCppWrapper.h:8657:40: error: class ‘xn::Context’ does not have any field named ‘m_bUsingDeprecatedAPI’
   inline Context() : m_pContext(NULL), m_bUsingDeprecatedAPI(FALSE), m_bAllocated(FALSE), m_hShuttingDownCallback(NULL) {}
                                        ^
/usr/include/ni/XnCppWrapper.h:8657:70: error: class ‘xn::Context’ does not have any field named ‘m_bAllocated’
   inline Context() : m_pContext(NULL), m_bUsingDeprecatedAPI(FALSE), m_bAllocated(FALSE), m_hShuttingDownCallback(NULL) {}
                                                                      ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::Context::Context(XnContext*)’:
/usr/include/ni/XnCppWrapper.h:8664:59: error: class ‘xn::Context’ does not have any field named ‘m_bUsingDeprecatedAPI’
   inline Context(XnContext* pContext) : m_pContext(NULL), m_bUsingDeprecatedAPI(FALSE), m_bAllocated(FALSE), m_hShuttingDownCallback(NULL)
                                                           ^
/usr/include/ni/XnCppWrapper.h:8664:89: error: class ‘xn::Context’ does not have any field named ‘m_bAllocated’
   inline Context(XnContext* pContext) : m_pContext(NULL), m_bUsingDeprecatedAPI(FALSE), m_bAllocated(FALSE), m_hShuttingDownCallback(NULL)
                                                                                         ^
/usr/include/ni/XnCppWrapper.h: In copy constructor ‘xn::Context::Context(const xn::Context&)’:
/usr/include/ni/XnCppWrapper.h:8675:60: error: class ‘xn::Context’ does not have any field named ‘m_bUsingDeprecatedAPI’
   inline Context(const Context& other) : m_pContext(NULL), m_bUsingDeprecatedAPI(FALSE), m_bAllocated(FALSE), m_hShuttingDownCallback(NULL)
                                                            ^
/usr/include/ni/XnCppWrapper.h:8675:90: error: class ‘xn::Context’ does not have any field named ‘m_bAllocated’
   inline Context(const Context& other) : m_pContext(NULL), m_bUsingDeprecatedAPI(FALSE), m_bAllocated(FALSE), m_hShuttingDownCallback(NULL)
                                                                                          ^
/usr/include/ni/XnCppWrapper.h: In static member function ‘static void xn::Context::FreeLicensesList(XnLicense*)’:
/usr/include/ni/XnCppWrapper.h:8954:32: error: ‘xnFreeLicensesList’ was not declared in this scope
    xnFreeLicensesList(aLicenses);
                                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Context::UnregisterFromErrorStateChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:9255:64: error: ‘xnUnregisterFromGlobalErrorStateChange’ was not declared in this scope
    xnUnregisterFromGlobalErrorStateChange(m_pContext, hCallback);
                                                                ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Context::UnregisterFromNodeCreation(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:9294:81: error: ‘xnUnregisterFromNodeCreation’ was not declared in this scope
    xnUnregisterFromNodeCreation(m_pContext, pCreationCookie->hUnderlyingCallback);
                                                                                 ^
/usr/include/ni/XnCppWrapper.h:9295:28: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pCreationCookie);
                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Context::UnregisterFromNodeDestruction(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:9334:87: error: ‘xnUnregisterFromNodeDestruction’ was not declared in this scope
    xnUnregisterFromNodeDestruction(m_pContext, pDestructionCookie->hUnderlyingCallback);
                                                                                       ^
/usr/include/ni/XnCppWrapper.h:9335:31: error: ‘xnOSFree’ was not declared in this scope
    xnOSFree(pDestructionCookie);
                               ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Context::SetHandle(XnContext*)’:
/usr/include/ni/XnCppWrapper.h:9497:9: error: ‘m_bUsingDeprecatedAPI’ was not declared in this scope
     if (m_bUsingDeprecatedAPI && m_bAllocated)
         ^
/usr/include/ni/XnCppWrapper.h:9497:34: error: ‘m_bAllocated’ was not declared in this scope
     if (m_bUsingDeprecatedAPI && m_bAllocated)
                                  ^
/usr/include/ni/XnCppWrapper.h:9501:32: error: ‘xnForceShutdown’ was not declared in this scope
      xnForceShutdown(m_pContext);
                                ^
/usr/include/ni/XnCppWrapper.h:9505:73: error: ‘xnContextUnregisterFromShutdown’ was not declared in this scope
      xnContextUnregisterFromShutdown(m_pContext, m_hShuttingDownCallback);
                                                                         ^
/usr/include/ni/XnCppWrapper.h:9506:33: error: ‘xnContextRelease’ was not declared in this scope
      xnContextRelease(m_pContext);
                                 ^
/usr/include/ni/XnCppWrapper.h:9512:5: error: ‘XnStatus’ was not declared in this scope
     XnStatus nRetVal = xnContextAddRef(pContext);
     ^
/usr/include/ni/XnCppWrapper.h:9513:15: error: ‘nRetVal’ was not declared in this scope
     XN_ASSERT(nRetVal == XN_STATUS_OK);
               ^
In file included from /usr/include/ni/XnStatusCodes.h:27:0,
                 from /usr/include/ni/XnMacros.h:27,
                 from /usr/include/ni/XnOS.h:28,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:9513:26: error: expected ‘)’ before numeric constant
     XN_ASSERT(nRetVal == XN_STATUS_OK);
                          ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:9516:113: error: ‘xnContextRegisterForShutdown’ was not declared in this scope
     nRetVal = xnContextRegisterForShutdown(pContext, ContextShuttingDownCallback, this, &m_hShuttingDownCallback);
                                                                                                                 ^
In file included from /usr/include/ni/XnStatusCodes.h:27:0,
                 from /usr/include/ni/XnMacros.h:27,
                 from /usr/include/ni/XnOS.h:28,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:47,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h:9517:26: error: expected ‘)’ before numeric constant
     XN_ASSERT(nRetVal == XN_STATUS_OK);
                          ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni.h:50:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::Context::TakeOwnership(XnContext*)’:
/usr/include/ni/XnCppWrapper.h:9529:30: error: ‘xnContextRelease’ was not declared in this scope
     xnContextRelease(pContext);
                              ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::Context::Shutdown()’:
/usr/include/ni/XnCppWrapper.h:9584:26: error: ‘xnShutdown’ was not declared in this scope
     xnShutdown(m_pContext);
                          ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::Context::NodeCreationCallback(XnContext*, XnNodeHandle, void*)’:
/usr/include/ni/XnCppWrapper.h:9624:25: error: ‘struct xn::Context::NodeCreationCookie’ has no member named ‘pFunc’
    pNodeCreationCookie->pFunc(context, createdNode, pNodeCreationCookie->pCookie);
                         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::Context::NodeDestructionCallback(XnContext*, const int*, void*)’:
/usr/include/ni/XnCppWrapper.h:9631:25: error: ‘struct xn::Context::NodeDestructionCookie’ has no member named ‘pFunc’
    pNodeCreationCookie->pFunc(context, strDestroyedNodeName, pNodeCreationCookie->pCookie);
                         ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:9671:30: error: expected ‘)’ before ‘xRes’
   inline Resolution(XnUInt32 xRes, XnUInt32 yRes) : m_nXRes(xRes), m_nYRes(yRes)
                              ^
/usr/include/ni/XnCppWrapper.h:9682:27: error: ‘XnChar’ does not name a type
   inline Resolution(const XnChar* strName)
                           ^
/usr/include/ni/XnCppWrapper.h:9697:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetXResolution() const { return m_nXRes; }
          ^
/usr/include/ni/XnCppWrapper.h:9701:10: error: ‘XnUInt32’ does not name a type
   inline XnUInt32 GetYResolution() const { return m_nYRes; }
          ^
/usr/include/ni/XnCppWrapper.h:9705:16: error: ‘XnChar’ does not name a type
   inline const XnChar* GetName() const { return m_strName; }
                ^
/usr/include/ni/XnCppWrapper.h:9709:3: error: ‘XnUInt32’ does not name a type
   XnUInt32 m_nXRes;
   ^
/usr/include/ni/XnCppWrapper.h:9710:3: error: ‘XnUInt32’ does not name a type
   XnUInt32 m_nYRes;
   ^
/usr/include/ni/XnCppWrapper.h:9711:9: error: ‘XnChar’ does not name a type
   const XnChar* m_strName;
         ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::Resolution::Resolution(XnResolution)’:
/usr/include/ni/XnCppWrapper.h:9660:4: error: ‘m_nXRes’ was not declared in this scope
    m_nXRes = xnResolutionGetXRes(res);
    ^
/usr/include/ni/XnCppWrapper.h:9660:37: error: ‘xnResolutionGetXRes’ was not declared in this scope
    m_nXRes = xnResolutionGetXRes(res);
                                     ^
/usr/include/ni/XnCppWrapper.h:9661:4: error: ‘m_nYRes’ was not declared in this scope
    m_nYRes = xnResolutionGetYRes(res);
    ^
/usr/include/ni/XnCppWrapper.h:9661:37: error: ‘xnResolutionGetYRes’ was not declared in this scope
    m_nYRes = xnResolutionGetYRes(res);
                                     ^
/usr/include/ni/XnCppWrapper.h:9662:4: error: ‘m_strName’ was not declared in this scope
    m_strName = xnResolutionGetName(res);
    ^
/usr/include/ni/XnCppWrapper.h:9662:39: error: ‘xnResolutionGetName’ was not declared in this scope
    m_strName = xnResolutionGetName(res);
                                       ^
/usr/include/ni/XnCppWrapper.h: In constructor ‘xn::Resolution::Resolution(const int*)’:
/usr/include/ni/XnCppWrapper.h:9684:43: error: ‘xnResolutionGetFromName’ was not declared in this scope
    m_Res = xnResolutionGetFromName(strName);
                                           ^
/usr/include/ni/XnCppWrapper.h:9685:4: error: ‘m_nXRes’ was not declared in this scope
    m_nXRes = xnResolutionGetXRes(m_Res);
    ^
/usr/include/ni/XnCppWrapper.h:9685:39: error: ‘xnResolutionGetXRes’ was not declared in this scope
    m_nXRes = xnResolutionGetXRes(m_Res);
                                       ^
/usr/include/ni/XnCppWrapper.h:9686:4: error: ‘m_nYRes’ was not declared in this scope
    m_nYRes = xnResolutionGetYRes(m_Res);
    ^
/usr/include/ni/XnCppWrapper.h:9686:39: error: ‘xnResolutionGetYRes’ was not declared in this scope
    m_nYRes = xnResolutionGetYRes(m_Res);
                                       ^
/usr/include/ni/XnCppWrapper.h:9687:4: error: ‘m_strName’ was not declared in this scope
    m_strName = xnResolutionGetName(m_Res);
    ^
/usr/include/ni/XnCppWrapper.h:9687:41: error: ‘xnResolutionGetName’ was not declared in this scope
    m_strName = xnResolutionGetName(m_Res);
                                         ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:9717:9: error: ‘XnStatus’ does not name a type
  inline XnStatus NodeInfoList::FilterList(Context& context, Query& query)
         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::ProductionNode::GetContext(xn::Context&) const’:
/usr/include/ni/XnCppWrapper.h:9724:66: error: ‘xnGetRefContextFromNodeHandle’ was not declared in this scope
   context.TakeOwnership(xnGetRefContextFromNodeHandle(GetHandle()));
                                                                  ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::Context xn::ProductionNode::GetContext() const’:
/usr/include/ni/XnCppWrapper.h:9729:66: error: ‘xnGetRefContextFromNodeHandle’ was not declared in this scope
   XnContext* pContext = xnGetRefContextFromNodeHandle(GetHandle());
                                                                  ^
/usr/include/ni/XnCppWrapper.h:9731:28: error: ‘xnContextRelease’ was not declared in this scope
   xnContextRelease(pContext);
                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘xn::NodeInfoList& xn::NodeInfo::GetNeededNodes() const’:
/usr/include/ni/XnCppWrapper.h:9739:60: error: ‘xnNodeInfoGetNeededNodes’ was not declared in this scope
    XnNodeInfoList* pList = xnNodeInfoGetNeededNodes(m_pInfo);
                                                            ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::NodeInfo::SetUnderlyingObject(XnNodeInfo*)’:
/usr/include/ni/XnCppWrapper.h:9753:3: error: ‘m_bOwnerOfNode’ was not declared in this scope
   m_bOwnerOfNode = FALSE;
   ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:9758:9: error: ‘XnBool’ does not name a type
  inline XnBool FrameSyncCapability::CanFrameSyncWith(Generator& other) const
         ^
/usr/include/ni/XnCppWrapper.h:9763:9: error: ‘XnStatus’ does not name a type
  inline XnStatus FrameSyncCapability::FrameSyncWith(Generator& other)
         ^
/usr/include/ni/XnCppWrapper.h:9768:9: error: ‘XnStatus’ does not name a type
  inline XnStatus FrameSyncCapability::StopFrameSyncWith(Generator& other)
         ^
/usr/include/ni/XnCppWrapper.h:9773:9: error: ‘XnBool’ does not name a type
  inline XnBool FrameSyncCapability::IsFrameSyncedWith(Generator& other) const
         ^
/usr/include/ni/XnCppWrapper.h:9778:9: error: ‘XnStatus’ does not name a type
  inline XnStatus NodeInfo::GetInstance(ProductionNode& node) const
         ^
/usr/include/ni/XnCppWrapper.h:9800:9: error: ‘XnStatus’ does not name a type
  inline XnStatus Device::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9809:9: error: ‘XnStatus’ does not name a type
  inline XnStatus Recorder::Create(Context& context, const XnChar* strFormatName /*= NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9818:9: error: ‘XnStatus’ does not name a type
  inline XnStatus Player::Create(Context& context, const XnChar* strFormatName)
         ^
/usr/include/ni/XnCppWrapper.h:9827:9: error: ‘XnStatus’ does not name a type
  inline XnStatus DepthGenerator::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9836:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockDepthGenerator::Create(Context& context, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9845:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockDepthGenerator::CreateBasedOn(DepthGenerator& other, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9856:9: error: ‘XnStatus’ does not name a type
  inline XnStatus ImageGenerator::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9865:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockImageGenerator::Create(Context& context, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9874:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockImageGenerator::CreateBasedOn(ImageGenerator& other, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9885:9: error: ‘XnStatus’ does not name a type
  inline XnStatus IRGenerator::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9894:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockIRGenerator::Create(Context& context, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9903:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockIRGenerator::CreateBasedOn(IRGenerator& other, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9914:9: error: ‘XnStatus’ does not name a type
  inline XnStatus GestureGenerator::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9923:9: error: ‘XnStatus’ does not name a type
  inline XnStatus SceneAnalyzer::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9933:9: error: ‘XnStatus’ does not name a type
  inline XnStatus HandsGenerator::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9942:9: error: ‘XnStatus’ does not name a type
  inline XnStatus UserGenerator::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9951:9: error: ‘XnStatus’ does not name a type
  inline XnStatus AudioGenerator::Create(Context& context, Query* pQuery/*=NULL*/, EnumerationErrors* pErrors/*=NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9960:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockAudioGenerator::Create(Context& context, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9969:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockAudioGenerator::CreateBasedOn(AudioGenerator& other, const XnChar* strName /* = NULL */)
         ^
/usr/include/ni/XnCppWrapper.h:9980:9: error: ‘XnStatus’ does not name a type
  inline XnStatus MockRawGenerator::Create(Context& context, const XnChar* strName /*= NULL*/)
         ^
/usr/include/ni/XnCppWrapper.h:9989:9: error: ‘XnStatus’ does not name a type
  inline XnStatus Codec::Create(Context& context, XnCodecID codecID, ProductionNode& initializerNode)
         ^
/usr/include/ni/XnCppWrapper.h:9998:9: error: ‘XnStatus’ does not name a type
  inline XnStatus ScriptNode::Run(EnumerationErrors* pErrors)
         ^
/usr/include/ni/XnCppWrapper.h:10003:9: error: ‘XnStatus’ does not name a type
  inline XnStatus ScriptNode::Create(Context& context, const XnChar* strFormat)
         ^
/usr/include/ni/XnCppWrapper.h:10016:31: error: variable or field ‘XN_API_DEPRECATED’ declared void
  inline void XN_API_DEPRECATED("Use xn::Version::Current() instead") GetVersion(XnVersion& Version)
                               ^
/usr/include/ni/XnCppWrapper.h:10028:54: error: expected ‘)’ before ‘handler’
   StateChangedCallbackTranslator(StateChangedHandler handler, void* pCookie) : m_UserHandler(handler), m_pUserCookie(pCookie), m_hCallback(NULL) {}
                                                      ^
/usr/include/ni/XnCppWrapper.h:10030:3: error: ‘XnStatus’ does not name a type
   XnStatus Register(_XnRegisterStateChangeFuncPtr xnFunc, XnNodeHandle hNode)
   ^
/usr/include/ni/XnCppWrapper.h:10040:10: error: ‘XnStatus’ does not name a type
   static XnStatus RegisterToUnderlying(_XnRegisterStateChangeFuncPtr xnFunc, XnNodeHandle hNode, StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:10059:10: error: ‘XnStatus’ does not name a type
   static XnStatus UnregisterFromUnderlying(_XnUnregisterStateChangeFuncPtr xnFunc, XnNodeHandle hNode, XnCallbackHandle hCallback)
          ^
/usr/include/ni/XnCppWrapper.h:10072:4: error: ‘StateChangedHandler’ does not name a type
    StateChangedHandler userHandler;
    ^
/usr/include/ni/XnCppWrapper.h:10077:15: error: variable or field ‘XN_CALLBACK_TYPE’ declared void
   static void XN_CALLBACK_TYPE StateChangedCallback(XnNodeHandle hNode, void* pCookie)
               ^
/usr/include/ni/XnCppWrapper.h:10077:15: error: expected ‘;’ at end of member declaration
/usr/include/ni/XnCppWrapper.h:10084:3: error: ‘StateChangedHandler’ does not name a type
   StateChangedHandler m_UserHandler;
   ^
/usr/include/ni/XnCppWrapper.h: In member function ‘int xn::StateChangedCallbackTranslator::StateChangedCallback(XnNodeHandle, void*)’:
/usr/include/ni/XnCppWrapper.h:10081:12: error: ‘class xn::StateChangedCallbackTranslator’ has no member named ‘m_UserHandler’
    pTrans->m_UserHandler(node, pTrans->m_pUserCookie);
            ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:10089:9: error: ‘XnStatus’ does not name a type
  static XnStatus _RegisterToStateChange(_XnRegisterStateChangeFuncPtr xnFunc, XnNodeHandle hNode, StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
         ^
/usr/include/ni/XnCppWrapper.h: In function ‘void xn::_UnregisterFromStateChange(xn::_XnUnregisterStateChangeFuncPtr, XnNodeHandle, XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:10096:3: error: ‘UnregisterFromUnderlying’ is not a member of ‘xn::StateChangedCallbackTranslator’
   StateChangedCallbackTranslator::UnregisterFromUnderlying(xnFunc, hNode, hCallback);
   ^
/usr/include/ni/XnCppWrapper.h: At global scope:
/usr/include/ni/XnCppWrapper.h:10099:9: error: ‘XnStatus’ does not name a type
  inline XnStatus GeneralIntCapability::RegisterToValueChange(StateChangedHandler handler, void* pCookie, XnCallbackHandle& hCallback)
         ^
/usr/include/ni/XnCppWrapper.h: In member function ‘void xn::GeneralIntCapability::UnregisterFromValueChange(XnCallbackHandle)’:
/usr/include/ni/XnCppWrapper.h:10121:54: error: ‘m_strCap’ was not declared in this scope
   xnUnregisterFromGeneralIntValueChange(GetHandle(), m_strCap, pTrans->m_hCallback);
                                                      ^
/usr/include/ni/XnCppWrapper.h:10121:83: error: ‘xnUnregisterFromGeneralIntValueChange’ was not declared in this scope
   xnUnregisterFromGeneralIntValueChange(GetHandle(), m_strCap, pTrans->m_hCallback);
                                                                                   ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_driver.h:47:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h: At global scope:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:420:7: error: ‘XnUInt64’ does not name a type
       XnUInt64 
       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:485:9: error: ‘XnUInt16’ does not name a type
         XnUInt16 zero_plane_distance_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:486:9: error: ‘XnFloat’ does not name a type
         XnFloat zero_plane_pixel_size_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:487:9: error: ‘XnFloat’ does not name a type
         XnFloat emitter_dcmos_distace_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:488:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 max_shift_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:489:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 device_max_shift_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:490:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 const_shift_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:491:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 pixel_size_factor_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:492:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 param_coeff_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:493:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 shift_scale_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:494:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 min_depth_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:495:9: error: ‘XnUInt32’ does not name a type
         XnUInt32 max_depth_;
         ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:536:7: error: ‘XnUInt64’ does not name a type
       XnUInt64 shadow_value_;
       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:538:7: error: ‘XnUInt64’ does not name a type
       XnUInt64 no_sample_value_;
       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h: In member function ‘float openni_wrapper::OpenNIDevice::getImageFocalLength(int) const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:561:51: error: ‘XnMapOutputMode’ has no member named ‘nXRes’
       output_x_resolution = getImageOutputMode ().nXRes;
                                                   ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h: In member function ‘float openni_wrapper::OpenNIDevice::getDepthFocalLength(int) const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device.h:572:51: error: ‘XnMapOutputMode’ has no member named ‘nXRes’
       output_x_resolution = getDepthOutputMode ().nXRes;
                                                   ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image_bayer_grbg.h:44:0,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device_kinect.h:45,
                 from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:49,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h: In member function ‘void openni_wrapper::Image::fillRaw(unsigned char*) const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h:121:38: error: ‘class xn::ImageMetaData’ has no member named ‘Data’
       memcpy (rgb_buffer, image_md_->Data (), image_md_->DataSize ());
                                      ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h:121:58: error: ‘class xn::ImageMetaData’ has no member named ‘DataSize’
       memcpy (rgb_buffer, image_md_->Data (), image_md_->DataSize ());
                                                          ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h: In member function ‘unsigned int openni_wrapper::Image::getWidth() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h:181:23: error: ‘class xn::ImageMetaData’ has no member named ‘XRes’
     return image_md_->XRes ();
                       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h: In member function ‘unsigned int openni_wrapper::Image::getHeight() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h:187:23: error: ‘class xn::ImageMetaData’ has no member named ‘YRes’
     return image_md_->YRes ();
                       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h: In member function ‘unsigned int openni_wrapper::Image::getFrameID() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h:193:23: error: ‘class xn::ImageMetaData’ has no member named ‘FrameID’
     return image_md_->FrameID ();
                       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h: In member function ‘long unsigned int openni_wrapper::Image::getTimeStamp() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_image.h:199:51: error: ‘class xn::ImageMetaData’ has no member named ‘Timestamp’
     return static_cast<unsigned long> (image_md_->Timestamp ());
                                                   ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:51:0,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h: At global scope:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:71:116: error: ‘XnUInt64’ has not been declared
       inline DepthImage (boost::shared_ptr<xn::DepthMetaData> depth_meta_data, float baseline, float focal_length, XnUInt64 shadow_value, XnUInt64 no_sample_value) throw ();
                                                                                                                    ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:71:139: error: ‘XnUInt64’ has not been declared
       inline DepthImage (boost::shared_ptr<xn::DepthMetaData> depth_meta_data, float baseline, float focal_length, XnUInt64 shadow_value, XnUInt64 no_sample_value) throw ();
                                                                                                                                           ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:127:14: error: ‘XnUInt64’ does not name a type
       inline XnUInt64 
              ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:133:14: error: ‘XnUInt64’ does not name a type
       inline XnUInt64 
              ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:161:7: error: ‘XnUInt64’ does not name a type
       XnUInt64 shadow_value_;
       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:162:7: error: ‘XnUInt64’ does not name a type
       XnUInt64 no_sample_value_;
       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:165:117: error: ‘XnUInt64’ has not been declared
   DepthImage::DepthImage (boost::shared_ptr<xn::DepthMetaData> depth_meta_data, float baseline, float focal_length, XnUInt64 shadow_value, XnUInt64 no_sample_value) throw ()
                                                                                                                     ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:165:140: error: ‘XnUInt64’ has not been declared
   DepthImage::DepthImage (boost::shared_ptr<xn::DepthMetaData> depth_meta_data, float baseline, float focal_length, XnUInt64 shadow_value, XnUInt64 no_sample_value) throw ()
                                                                                                                                            ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h: In constructor ‘openni_wrapper::DepthImage::DepthImage(boost::shared_ptr<xn::DepthMetaData>, float, float, int, int)’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:169:5: error: class ‘openni_wrapper::DepthImage’ does not have any field named ‘shadow_value_’
   , shadow_value_ (shadow_value)
     ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:170:5: error: class ‘openni_wrapper::DepthImage’ does not have any field named ‘no_sample_value_’
   , no_sample_value_ (no_sample_value) { }
     ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h: At global scope:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:192:3: error: ‘XnUInt64’ does not name a type
   XnUInt64
   ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:198:3: error: ‘XnUInt64’ does not name a type
   XnUInt64
   ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h: In member function ‘unsigned int openni_wrapper::DepthImage::getWidth() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:207:23: error: ‘class xn::DepthMetaData’ has no member named ‘XRes’
     return depth_md_->XRes ();
                       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h: In member function ‘unsigned int openni_wrapper::DepthImage::getHeight() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:213:23: error: ‘class xn::DepthMetaData’ has no member named ‘YRes’
     return depth_md_->YRes ();
                       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h: In member function ‘unsigned int openni_wrapper::DepthImage::getFrameID() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:219:23: error: ‘class xn::DepthMetaData’ has no member named ‘FrameID’
     return depth_md_->FrameID ();
                       ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h: In member function ‘long unsigned int openni_wrapper::DepthImage::getTimeStamp() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_depth_image.h:225:51: error: ‘class xn::DepthMetaData’ has no member named ‘Timestamp’
     return static_cast<unsigned long> (depth_md_->Timestamp ());
                                                   ^
In file included from /usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:52:0,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h: In member function ‘unsigned int openni_wrapper::IRImage::getWidth() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h:83:18: error: ‘class xn::IRMetaData’ has no member named ‘XRes’
   return ir_md_->XRes ();
                  ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h: In member function ‘unsigned int openni_wrapper::IRImage::getHeight() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h:88:18: error: ‘class xn::IRMetaData’ has no member named ‘YRes’
   return ir_md_->YRes ();
                  ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h: In member function ‘unsigned int openni_wrapper::IRImage::getFrameID() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h:93:18: error: ‘class xn::IRMetaData’ has no member named ‘FrameID’
   return ir_md_->FrameID ();
                  ^
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h: In member function ‘long unsigned int openni_wrapper::IRImage::getTimeStamp() const’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_ir_image.h:98:46: error: ‘class xn::IRMetaData’ has no member named ‘Timestamp’
   return static_cast<unsigned long> (ir_md_->Timestamp ());
                                              ^
In file included from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:48:0,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h: In member function ‘bool pcl::OpenNIGrabber::modeComp::operator()(const XnMapOutputMode&, const XnMapOutputMode&) const’:
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:451:21: error: ‘const XnMapOutputMode’ has no member named ‘nXRes’
           if (mode1.nXRes < mode2.nXRes)
                     ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:451:35: error: ‘const XnMapOutputMode’ has no member named ‘nXRes’
           if (mode1.nXRes < mode2.nXRes)
                                   ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:453:26: error: ‘const XnMapOutputMode’ has no member named ‘nXRes’
           else if (mode1.nXRes > mode2.nXRes)
                          ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:453:40: error: ‘const XnMapOutputMode’ has no member named ‘nXRes’
           else if (mode1.nXRes > mode2.nXRes)
                                        ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:455:26: error: ‘const XnMapOutputMode’ has no member named ‘nYRes’
           else if (mode1.nYRes < mode2.nYRes)
                          ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:455:40: error: ‘const XnMapOutputMode’ has no member named ‘nYRes’
           else if (mode1.nYRes < mode2.nYRes)
                                        ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:457:26: error: ‘const XnMapOutputMode’ has no member named ‘nYRes’
           else if (mode1.nYRes > mode2.nYRes)
                          ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:457:40: error: ‘const XnMapOutputMode’ has no member named ‘nYRes’
           else if (mode1.nYRes > mode2.nYRes)
                                        ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:459:26: error: ‘const XnMapOutputMode’ has no member named ‘nFPS’
           else if (mode1.nFPS < mode2.nFPS)
                          ^
/usr/local/include/pcl-1.8/pcl/io/openni_grabber.h:459:39: error: ‘const XnMapOutputMode’ has no member named ‘nFPS’
           else if (mode1.nFPS < mode2.nFPS)
                                       ^
In file included from /usr/local/include/pcl-1.8/pcl/io/oni_grabber.h:48:0,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:49,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device_oni.h: In member function ‘bool openni_wrapper::DeviceONI::hasDataLeft()’:
/usr/local/include/pcl-1.8/pcl/io/openni_camera/openni_device_oni.h:89:24: error: ‘class xn::Player’ has no member named ‘IsEOF’
       return (!player_.IsEOF ());
                        ^
In file included from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.h:50:0,
                 from /home/dmedina/robocomp/components/robocomp-people-detection/components/detectPersonComp/src/specificworker.cpp:19:
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h: In member function ‘virtual void pcl::PCDGrabber<PointT>::publish(const pcl::PCLPointCloud2&, const Vector4f&, const Quaternionf&, const string&) const’:
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:259:22: error: ‘class xn::DepthMetaData’ has no member named ‘AllocateData’
     depth_meta_data->AllocateData (cloud->width, cloud->height);
                      ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:260:5: error: ‘XnDepthPixel’ was not declared in this scope
     XnDepthPixel* depth_map = depth_meta_data->WritableData ();
     ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:260:19: error: ‘depth_map’ was not declared in this scope
     XnDepthPixel* depth_map = depth_meta_data->WritableData ();
                   ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:260:48: error: ‘class xn::DepthMetaData’ has no member named ‘WritableData’
     XnDepthPixel* depth_map = depth_meta_data->WritableData ();
                                                ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:265:36: error: ‘XnDepthPixel’ does not name a type
         depth_map[k] = static_cast<XnDepthPixel> ((*cloud)[k].z * 1000);
                                    ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:283:24: error: ‘class xn::ImageMetaData’ has no member named ‘AllocateData’
       image_meta_data->AllocateData (cloud->width, cloud->height, XN_PIXEL_FORMAT_RGB24);
                        ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:293:24: error: ‘XnRGB24Pixel’ has no member named ‘nRed’
           image_map[k].nRed = static_cast<XnUInt8> (rgb.r);
                        ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:293:43: error: ‘XnUInt8’ does not name a type
           image_map[k].nRed = static_cast<XnUInt8> (rgb.r);
                                           ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:294:24: error: ‘XnRGB24Pixel’ has no member named ‘nGreen’
           image_map[k].nGreen = static_cast<XnUInt8> (rgb.g);
                        ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:294:45: error: ‘XnUInt8’ does not name a type
           image_map[k].nGreen = static_cast<XnUInt8> (rgb.g);
                                             ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:295:24: error: ‘XnRGB24Pixel’ has no member named ‘nBlue’
           image_map[k].nBlue = static_cast<XnUInt8> (rgb.b);
                        ^
/usr/local/include/pcl-1.8/pcl/io/pcd_grabber.h:295:44: error: ‘XnUInt8’ does not name a type
           image_map[k].nBlue = static_cast<XnUInt8> (rgb.b);
                                            ^
make[2]: *** [src/CMakeFiles/detectPerson.dir/specificworker.cpp.o] Error 1
make[1]: *** [src/CMakeFiles/detectPerson.dir/all] Error 2
make: *** [all] Error 2
